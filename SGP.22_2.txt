5.6       ES9+ (LPA -- SM-DP+)
ES9+ is the interface between:

         The LPA entity (more specifically the LPD endpoint), and
         the SM-DP+ (more specifically the Profile Package Delivery endpoint, which is in
          charge to deliver the input data from the LPA to the Profile Package Binding function,
          and deliver the output data from the Profile Package Binding function to the LPA).



                           SM-DP+                                          LPA

                                     Profile                               LPD
                                    Package
                                    Delivery


                                                           ES9+

                                          CERT.DP.TLS
                                          SK.DP.TLS

                                               Figure 34: ES9+

The LPA SHALL communicates with the SM-DP+ secured by HTTPS in server
authentication mode as described in section 2.6.6.




V2.4                                                                             Page 169 of 275
GSM Association                                                               Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

The format of the TLS Certificates (CERT.DP.TLS) used for TLS connections is described in
section 4.5.2.1.

During TLS establishment, the LPA SHALL verify the received CERT.DP.TLS according to
section 4.5.2.2. If any of these verifications fail, the TLS connection SHALL be rejected, and
the on-going procedure SHALL fail.

5.6.1    Function: InitiateAuthentication
Related Procedures: Profile Download and Installation

Function Provider Entity: SM-DP+

Description:

This function requests the SM-DP+ authentication. This is following the
"GetEUICCChallenge" between the eUICC and the LPAd, where the LPAd retrieves material
from the eUICC to be provided to the SM-DP+.

On reception of this function call, the SM-DP+ SHALL:

       Verify that it supports the Specification Version Number indicated by the eUICC.
       Check if the received address matches its own SM-DP+ address, where the
        comparison SHALL be case-insensitive.
       Check if it can use one of the GSMA CI Public Keys against which eUICC signatures
        can be verified, and select the CI as defined in section 2.6.7.1.
       Verify that it can provide a CERT.DPauth.ECDSA signed by one of the GSMA CI
        Public Keys supported by the eUICC and select a CERT.DPauth.ECDSA preferably
        according to the priority provided by the eUICC for the CI Public Keys.

If any of these verifications fail, the SM-DP+ SHALL return a 'Function execution status'
indicating 'Failed' with the relevant status code.

Otherwise the SM-DP+ SHALL:

       Generate a TransactionID which is used to uniquely identify the ongoing RSP
        session.
       Generate a serverChallenge for eUICC authentication attached with the ongoing RSP
        session.
       Generate a serverSigned1 data object as expected by the eUICC and described in
        section 5.7.13 "ES10b.AuthenticateServer".
       Generate a signature (serverSignature1) as described in section 5.7.13
        "ES10b.AuthenticateServer" using the SK related to the selected
        CERT.DPauth.ECDSA.

The SM-DP+ MAY perform additional operations, which are out of scope of this
specification.

This function SHALL return one of the following:

       A 'Function execution status' with 'Executed-Success' indicating that the RSP session
        has been successfully initiated.

V2.4                                                                          Page 170 of 275
GSM Association                                                                           Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

       A 'Function execution status' indicating 'Failed' with a status code as defined in
        section 5.2.6 or a specific status code as defined in the following table.

Additional Input Data:

Input data name            Description                                        Type            No.   MOC
                           euiccChallenge generated by the eUICC. LPDd
                           can retrieve the euiccChallenge from the eUICC
euiccChallenge                                                            Binary[16]           1    M
                           by calling "ES10b.GetEUICCChallenge"
                           (section 5.7.7).
                           euiccInfo1 of the eUICC. LPDd can retrieve the
euiccInfo1                 euiccInfo1 by calling "ES10b.GetEUICCInfo"         Binary(1)        1    M
                           (section 5.7.8).
smdpAddress                The SM-DP+ Address as known and provided                                 M
                                                                              FQDN             1
                           by the LPA.
NOTE 1: euiccInfo1 SHALL be provided as an encoded EuiccInfo1 data object.

                    Table 35: InitiateAuthentication Additional Input Data

Additional Output Data:

Output data name                 Description                      Type               No.       MOC
                                 Transaction ID as generated
transactionId                    by the SM-DP+ (section           Binary[1-16]            1    M
                                 3.1.1.4).
                                 The data object signed by the
serverSigned1                                                     Binary(1)               1    M
                                 SM-DP+.
serverSignature1                 SM-DP+ signature.                Binary(1)               1    M
                                 CI Public Key Identifier to be
euiccCiPKIdToBeUsed              used by the eUICC for            Binary(1)               1    M
                                 signature.
                                 SM-DP+ Certificate
serverCertificate                                                 Binary(1)               1    M
                                 (CERT.DPauth.ECDSA).
NOTE 1: serverSigned1, serverSignature1, euiccCiPKIdToBeUsed and serverCertificate are data
objects defined in section 5.7.13 (function "ES10b.AuthenticateServer"). They SHALL be
returned as encoded data objects including the tags defined for them in the
AuthenticateServerRequest data object.

                    Table 36: InitiateAuthentication Additional Output Data

Specific Status Codes

Subject                   Reason
             Subject                Reason                 Description
Code                      code
             SM-DP+
8.8.1                     3.8       Refused                Invalid SM-DP+ Address.
             Address
             Security                                      None of the proposed Public Key Identifiers is
8.8.2                      3.1      Unsupported
             configuration                                 supported by the SM-DP+.


V2.4                                                                                  Page 171 of 275
GSM Association                                                                 Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

           Specification                               The Specification Version Number indicated
8.8.3      Version       3.1      Unsupported          by the eUICC is not supported by the
           Number                                      SM-DP+.
                                                       The SM-DP+ has no CERT.DPAuth.ECDSA
           SM-DP+
8.8.4                    3.7      Unavailable          signed by one of the GSMA CI Public Key
           Certificate
                                                       supported by the eUICC.

                   Table 37: InitiateAuthentication Specific Status codes

5.6.2    Function: GetBoundProfilePackage
Related Procedures: Profile Download and Installation

Function Provider Entity: SM-DP+

Description:

This function SHALL be called to request the delivery and the binding of a Profile Package
for the eUICC.

This function is correlated to a previous normal execution of an "ES9+.AuthenticateClient"
function through a TransactionID delivered by the SM-DP+.

On reception of this function call, the SM-DP+ SHALL:

       Verify that the received transactionId is known and relates to an ongoing RSP
        session.
       Verify the eUICC signature (euiccSignature2) using the PK.EUICC.ECDSA attached
        to the ongoing RSP session as described in (section 5.7.5
        "ES10b.PrepareDownload").
       Verify if this order requires a Confirmation Code verification; if yes, the SM-DP+
        SHALL verify that the received Hashed Confirmation Code matches the value known
        by the SM-DP+.

If any of these verifications fail, the SM-DP+ SHALL return a 'Function execution status'
indicating 'Failed' with the relevant status code. If the SM-DP+ determines that the related
Profile download order has expired, the relevant status code is "8.8.5 Download order - 4.10.
Time to Live Expired".

If the maximum number of retries for Confirmation Code verification has been exceeded, the
corresponding Profile download order SHALL be terminated.

If the Bound Profile Package has been previously generated for this eUICC, the SM-DP+
SHALL check if the otPK.EUICC.ECKA provided by the eUICC is the same as the one used
to generate this BPP. If so, the BPP can be re-used: only the signature for
InitialiseSecureChannel needs to be recalculated.

If the Bound Profile Package has been previously generated for this eUICC, but the
otPK.EUICC.ECKA provided by the eUICC is different than the one previously used to
generate this BPP, the SM-DP+ SHALL either terminate the procedure with an error or re-
bind the PPP as described below.



V2.4                                                                            Page 172 of 275
GSM Association                                                                     Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

To bind the PPP, the SM-DP+ SHALL:

      Attach the otPK.EUICC.ECKA to the ongoing RSP session.
      Generate one time ECKA key pair (otPK.DP.ECKA, otSK.DP.ECKA) for key
       agreement.
      Generate the session keys (S-ENC and S-MAC) and the initial MAC chaining value
       from received otPK.EUICC.ECKA and previously generated otSK.DP.ECKA.
      Generate the Profile Metadata of the Profile.
      Generate the Bound Profile Package as described in (section 2.5.4).
      Erase otSK.DP.ECKA immediately once BPP is generated.

The SM-DP+ MAY perform additional operations, which are out of scope of this
specification.

This function SHALL return one of the following:

      A 'Function execution status' with 'Executed-Success' indicating that the
       BoundProfilePackage has been successfully built and is part of the output data.
      A 'Function execution status' indicating 'Failed' with a status code as defined in
       section 5.2.6 or a specific status code as defined in the following table.

Additional Input Data:

Input data name              Description                         Type           No.      MOC
                             Transaction ID as generated by the
transactionId                                                   Binary[1-16]    1        M
                             SM-DP+ (section 3.1.1.4).
                             PrepareDownloadResponse data        Binary(1)
prepareDownloadResponse                                                         1        M
                             object defined in section 5.7.4.
NOTE 1: prepareDownloadResponse SHALL be provided as an encoded
PrepareDownloadResponse data object

                Table 38: GetBoundProfilePackage Additional Input Data

Additional Output Data:

Output data name          Description                            Type           No.      MOC
                          Transaction ID as generated by the     Binary[1-16]
transactionID                                                                   1        M
                          SM-DP+ (section 3.1.1.4).
                          Bound Profile Package data object to   Binary(1)
                          be transferred to the eUICC using
boundProfilePackage                                                             1        M
                          "ES10b.LoadBoundProfilePackage"
                          (section 5.7.6).
NOTE 1: boundProfilePackage SHALL be provided as an encoded BoundProfilePackage data
object

                Table 39: GetBoundProfilePackage Additional Output Data

Specific Status Codes




V2.4                                                                                Page 173 of 275
GSM Association                                                                     Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

Subject                    Reason
            Subject                 Reason                Description
Code                       code
8.1         eUICC          6.1      Verification Failed   eUICC signature is invalid.
8.2         Profile        3.7      Unavailable           BPP is not available for a new binding.
                                                          The RSP session identified by the
8.10.1      TransactionId 3.9       Unknown
                                                          TransactionID is unknown.
            Confirmation            Mandatory
8.2.7                      2.2                            Confirmation Code is missing.
            Code                    Element Missing
            Confirmation
8.2.7                      3.8      Refused               Confirmation Code is refused.
            Code
                                    Maximum number
            Confirmation                                  The maximum number of retries for the
8.2.7                      6.4      of retries
            Code                                          Confirmation Code has been exceeded.
                                    exceeded
            Download                Time to Live
8.8.5                      4.10                           The Download order has expired.
            order                   Expired

                  Table 40: GetBoundProfilePackage Specific status codes

5.6.3     Function: AuthenticateClient
Related Procedures: Common Mutual Authentication

Function Provider Entity: SM-DP+

Description:

This function SHALL be called by the LPA to request the authentication of the eUICC by the
SM-DP+.

This function is correlated to a previous normal execution of an "ES9+.InitiateAuthentication"
function through a Transaction ID delivered by the SM-DP+.

On reception of this function call, the SM-DP+ SHALL:

        Verify the validity of the CERT.EUM.ECDSA, using the related public key
         PK.CI.ECDSA.
        Verify the validity of the CERT.EUICC.ECDSA, using the public key PK.EUM.ECDSA.
        Verify the eUICC signature (euiccSignature1) using the PK.EUICC.ECDSA as
         described in section 5.7.13 "ES10b.AuthenticateServer".
        Verify that the transactionId is known and relates to an ongoing RSP session.
        Verify that the serverChallenge attached to the ongoing RSP session matches the
         serverChallenge returned by the eUICC.

If any of these verifications fail, the SM-DP+ SHALL return a 'Function execution status'
indicating 'Failed' with the relevant status code. If the SM-DP+ determines that the related
Profile download order has expired, the relevant status code is "8.8.5 Download order - 4.10.
Time to Live Expired".

If the maximum number of retries for Profile download has been exceeded, the
corresponding Profile download order SHALL be terminated.

V2.4                                                                                Page 174 of 275
GSM Association                                                                Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

Otherwise the SM-DP+ SHALL perform additional verification depending on the use case
where this function is involved and the received ctxParams1.

If ctxParams1 contains a ctxParamsForCommonAuthentication data object, the SM-
DP+ SHALL:

      Verify there is a pending Profile download order for the incoming eUICC. For that, the
       SM-DP+ SHALL:

          If there is a pending Profile download order associated with this EID:

              If ctxParamsForCommonAuthentication contains a MatchingId, verify
               that it matches the MatchingID for this pending Profile download order.
              If the MatchingID is missing in ctxParamsForCommonAuthentication,
               any pending Profile download order associated to this EID MAY be selected.

          If there is no pending Profile download order associated with this EID:

              If ctxParamsForCommonAuthentication contains a MatchingId, verify:

               o there is a pending Profile download order associated with this MatchingID,
                 and
               o the pending Profile download order is not associated with an EID.

              If the MatchingID is missing in ctxParamsForCommonAuthentication,
               this SHALL be considered as verification failure.

      Identify the Profile corresponding to the pending Profile download order.
      Verify that the identified Profile has been released (Profile state is Released, see
       section 3.1.6).
      Perform an eligibility check:

          If the Profile Owner has disallowed Profile download to Field-Test eUICCs: If the
           target eUICC indicates V255.255.255 in ppVersion, the SM-DP+ SHALL return
           a status code "Profile Type – Stopped on warning"
          The SM-DP+ MAY perform additional Eligibility checks as described in Annex F.

If any of these verifications fail, the SM-DP+ SHALL return a 'Function execution status'
indicating 'Failed' with the relevant status code.

Otherwise the SM-DP+ SHALL:

      Generate the Profile Metadata of the Profile.
      Attach the PK.EUICC.ECDSA to the ongoing RSP session.
      Verify if this order requires a Confirmation Code verification. If yes, the SM-DP+
       SHALL set the ccRequiredFlag data field of the smdpSigned2 data object to true.
      Generate an smdpSigned2 data object and compute the signature smdpSignature2
       as defined in "ES10b.PrepareDownloadRequest".

The SM-DP+ MAY perform additional operations, which are out of scope of this
specification.

V2.4                                                                           Page 175 of 275
GSM Association                                                                       Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

This function SHALL return one of the following:

       A 'Function execution status' with 'Executed-Success' indicating that the eUICC has
        been successfully authenticated.
       A 'Function execution status' indicating 'Failed' with a status code as defined in
        section 5.2.6 or a specific status code as defined in the following table.

Additional Input Data:

Input data name                    Description                                      Type             No.     MOC
                                   Transaction ID as generated by the
transactionId                                                                       Binary[1-16]         1   M
                                   SM-DP+ (section 3.1.1.4).
authenticateServerResponse         Authenticate Server Response.                    Binary(1)            1   M
NOTE 1: AuthenticateServerResponse data object defined in section 5.7.13 (function
"ES10b.AuthenticateServer").

                     Table 41: AuthenticateClient Additional Input Data

Additional Output Data:

Output data name            Description                                             Type             No.     MOC
                            Transaction ID as generated by the SM-DP+               Binary[1-16]
transactionID                                                                                            1   M
                            (section 3.1.1.4).
                            Profile Metadata for the purpose of display by the      Binary(1)
profileMetadata                                                                                          1   C
                            LPA.
smdpSigned2                 The data to be signed by the SM-DP+.                    Binary(1)            1   C
smdpSignature2              SM-DP+ signature.                                       Binary(1)            1   C
smdpCertificate             SM-DP+ Certificate (CERT.DPpb.ECDSA).                   Binary(1)            1   C
NOTE 1: profileMetadata is the data object StoreMetadataRequest defined in section 5.5.3 (function
"ES8+.StoreMetadata"); smdpSigned2, smdpSignature2 and smdpCertificate are data objects defined in section
5.7.5 (function "ES10b.PrepareDownload"). They SHALL be returned as encoded data objects including the tags
defined for them in the StoreMetadataRequest/PrepareDownloadRequest data object.

                     Table 42: AuthenticateClient Additional Output Data

profileMetadata, smdpSigned2, smdpSignature2 and smdpCertificate SHALL be provided
when this function is called in the context of the Profile Download and Installation procedure
as described in section 3.1.3.

Specific Status Codes

Subject                   Reason
           Subject                 Reason                Description
Code                      code
           EUM
8.1.2                     6.1      Verification Failed   Certificate is invalid.
           Certificate
           EUM
8.1.2                     6.3      Expired               Certificate has expired.
           Certificate




V2.4                                                                                  Page 176 of 275
GSM Association                                                                            Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

          eUICC
8.1.3                       6.1        Verification Failed   Certificate is invalid.
          Certificate
          eUICC
8.1.3                       6.3        Expired               Certificate has expired.
          Certificate
                                                             eUICC signature is invalid or serverChallenge
8.1       eUICC             6.1        Verification Failed
                                                             is invalid.
                                       Insufficient          eUICC does not have sufficient space for this
8.1       eUICC             4.8
                                       Memory                Profile.
                                                             Unknown CI Public Key. The CI used by the
8.11.1    CI Public Key 3.9            Unknown               EUM Certificate is not a trusted root for the
                                                             SM-DP+.
8.2       Profile           1.2        Not allowed           Profile has not yet been released.
                                                             The RSP session identified by the
8.10.1    TransactionId 3.9            Unknown
                                                             TransactionID is unknown.
                                                             MatchingID (AC_Token or EventID) is
8.2.6     MatchingID        3.8        Refused
                                                             refused.
8.1.1     EID               3.8        Refused               EID doesn’t match the expected value.
                                       Stopped on
8.2.5     Profile Type      4.3                              No eligible Profile for this eUICC/Device.
                                       warning
          Download                     Time to Live
8.8.5                       4.10                             The Download order has expired.
          order                        Expired
                                       Maximum number
          Download                                           The maximum number of retries for the Profile
8.8.5                       6.4        of retries
          order                                              download order has been exceeded.
                                       exceeded

                      Table 43: AuthenticateClient Specific Status Codes

5.6.4    Function: HandleNotification
Related Procedures: Notifications

Function Provider Entity: SM-DP+

Description:

This function SHALL be called by the LPA to notify the SM-DP+ that a Profile Management
Operation has successfully been performed on the eUICC.

The SM-DP+ SHALL manage the Notification according to section 3.5 and acknowledge the
LPA of the processing.

The SM-DP+ MAY perform additional operations which are out of scope of this specification.

Additional Input Data:

Input data name Description                                                  Type       No.     MOC
                        PendingNotification data object as defined in
pendingNotification                                                          Binary(1) 1        M
                        section 5.7.10




V2.4                                                                                       Page 177 of 275
GSM Association                                                               Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

NOTE 1: pendingNotification SHALL be provided as an encoded PendingNotification data
object

                    Table 44: HandleNotification Additional Input Data

Additional Output Data:

No additional output data.

5.6.5    Function: CancelSession
Related Procedures: Download and Installation

Function Provider Entity: SM-DP+

Description:

This function is to request the cancellation of an on-going RSP session upon a decision of
the End User. This function MAY be used in different procedures.

This function is correlated to a previous normal execution of an "ES9+.AuthenticateClient"
function through a transactionId delivered by the SM-DP+.

On reception of this function call, the SM-DP+ SHALL:

       Verify that the received transactionId is known and relates to an ongoing RSP
        session.
       Verify the eUICC signature (euiccCancelSessionSignature) using the
        PK.EUICC.ECDSA attached to the ongoing RSP session as described in (section
        5.7.14 "ES10b.CancelSession").
       Verify that the received smdpOid corresponds to the SM-DP+ (i.e. is the same value
        as the one contained in the CERT.DPauth.ECDSA used during the Common Mutual
        Authentication Procedure).

If any of these verifications fail, the SM-DP+ SHALL return a 'Function execution status'
indicating 'Failed' with the relevant status code.

Otherwise, the SM-DP+ SHALL return a function execution status 'Executed-Success', and
perform additional operations depending on the context and the reason received, as
described hereunder.

When used within a Profile Download and Installation procedure, and if the cancel session
reason contained in euiccCancelSessionSigned indicates a terminal code (see section
5.7.14), the SM-DP+ SHALL:

   1. Notify the Operator using the function "ES2+.HandleDownloadProgressInfo" function
      with the identification of the step reached in the on-going procedure and an operation
      status indicating 'Failed' with status code according to mapping given in section 5.3.5.
   2. Terminate the corresponding pending download process.
   3. If required, execute the SM-DS Event Deletion procedure described in section 3.6.3.

   NOTE:        The operations 1), 2) and 3) are described as performed in the context of
                this function execution. Alternatively they MAY be done asynchronously by

V2.4                                                                          Page 178 of 275
GSM Association                                                                        Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

                   the SM-DP+. Operation 2) and 3) MAY not be performed depending on the
                   agreed SM-DP+ behaviour with the Operator. If the operations are not
                   performed, the Operator has the responsibility to take care of the
                   management of the Download Order, e.g. by calling the "ES2+.CancelOrder"
                   on reception of the notification "ES2+.HandleDownloadProgressInfo".

The SM-DP+ MAY perform additional operations, which are out of scope of this
specification.

This function SHALL return one of the following:

         A 'Function execution status' with 'Executed-Success' indicating that the RSP session
          has been cancelled.
         A 'Function execution status' indicating 'Failed' with a status code as defined in
          section 5.2.6 or a specific status code as defined in the following table.

Additional Input Data:

Input data name                  Description                            Type                     No. MOC
                                 Transaction ID as generated by the
transactionId                                                           Binary[1-16]              1       M
                                 SM-DP+ (section 3.1.1.4).
                                 Defined in "ES10b.CancelSession"       Binary(1)
cancelSessionResponse                                                                             1       M
                                 function, section 5.7.14
NOTE 1: cancelSessionResponse SHALL be provided as an encoded CancelSessionResponse data
object

                        Table 45: CancelSession Additional Input Data

Additional Output Data:

No output data.

Specific Status Codes

Subject                    Reason
             Subject                   Reason                Description
Code                       code
                                                             The RSP session identified by the
8.10.1       TransactionId 3.9         Unknown
                                                             TransactionID is unknown.
8.1          eUICC         6.1         Verification Failed   eUICC signature is invalid.
8.8          SM-DP+        3.10        Invalid Association The provided SM-DP+ OID is invalid.

                        Table 46: CancelSession Specific status codes

5.7       ES10x (LPA -- eUICC)
ES10 contains 3 different interfaces described below.

The ES10a is an interface defined between the LDSd and ISD-R (LPA Services).




V2.4                                                                                   Page 179 of 275
GSM Association                                                                       Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

                                                   Device

                                     LPAd                              eUICC

                                     LDSd                               ISD-R
                                                                         (LPA
                                                                      Services)

                                                   ES10a




                                            Figure 35: ES10a

The ES10b is an interface defined between the LPDd and ISD-R (LPA Services).

                                               Device

                              LPAd                                eUICC

                              LPDd                                 ISD-R
                                                                    (LPA
                                                                 Services)

                                              ES10b




                                            Figure 36: ES10b

The ES10c is an interface defined between the LUI and ISD-R (LPA Services).
                                                        Device

                                       LPAd                                  eUICC

                                       LUId                                 ISD-R
                                                                             (LPA
                                                                          Services)

                                                        ES10c




                                            Figure 37: ES10c

5.7.1    ISD-R Selection and LPAe Activation
Before sending any command to the eUICC, the LPA SHALL establish a logical channel and
select the ISD-R.

The opening of the logical channel and the selection of the ISD-R SHALL be done explicitly
using, respectively, the MANAGE CHANNEL command and the SELECT command defined
in GlobalPlatform Card Specification [8]. This MANAGE CHANNEL and SELECT commands
can be intrinsically used via a dedicated Device OS API (e.g. OMAPI defined by
GlobalPlatform[69] if provided).



V2.4                                                                                  Page 180 of 275
GSM Association                                                                Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

The Device SHALL ensure that only the LPA, but no other application on the Device, is
permitted to select the ISD-R.

In order to provide information about the capabilities supported by the eUICC at an early point
in time, additional information is provided by the ISD-R.
On the reception of the SELECT ISD-R Command, the following data SHALL be returned
within the FCI template after the objects defined in GlobalPlatform Card Specification [8]:

ISDRProprietaryApplicationTemplate ::= [PRIVATE 0] SEQUENCE { -- Tag 'E0'
   svn [2] VersionType,     -- GSMA SGP.22 version supported (SVN)
   lpaeSupport BIT STRING {
      lpaeUsingCat(0), -- LPA in the eUICC using Card Application Toolkit
      lpaeUsingScws(1) -- LPA in the eUICC using Smartcard Web Server
   } OPTIONAL
}


   NOTE:        eUICCs according to version 1.X of this specification will not return this data
                structure.

If the Device supports the requirements for an option of the LPAe as defined in section 5.11
and the eUICC indicated support for that option in the ISDRProprietaryApplicationTemplate,
the Device MAY activate this option by sending an LpaeActivationRequest to the ISD-R.

If the Device indicates support for LUId, LPDd and LDSd and it does not send an
LpaeActivationRequest, the eUICC SHALL not activate the LPAe.

In all other cases, the eUICC MAY activate the LPAe.

The LpaeActivationRequest SHALL be sent to the ISD-R using the transport mechanism
defined in section 5.7.2.

The command data SHALL be coded as follows:
LpaeActivationRequest ::= [66] SEQUENCE { -- Tag 'BF42'
   lpaeOption BIT STRING {
      activateCatBasedLpae(0), -- LPAe with LUIe based on CAT
      activateScwsBasedLpae(1) -- LPAe with LUIe based on SCWS
   }
}



The response data SHALL be coded as follows:
LpaeActivationResponse ::= [66] SEQUENCE { -- Tag 'BF42'
   lpaeActivationResult INTEGER {ok(0), notSupported(1)}
}

5.7.2    Transport Command
One generic APDU is used on the interfaces ES10a, ES10b and ES10c to transport all
command request and command response data.

Command Message

All functions use the command message STORE DATA as defined in GlobalPlatform Card
Specification [8] with the specific coding defined below.


V2.4                                                                           Page 181 of 275
GSM Association                                                                         Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

         Code       Value         Meaning
         CLA        '80'-'83'     See GlobalPlatform Card Specification [8] section 11.1.4
                    or
                    'C0'-'CF'
         INS        'E2'          STORE DATA
         P1         '11' or       See below
                    '91'
         P2         'xx'          Block number
         Lc         Var.          Length of data field
         Data       'xx xx…'      The data field SHALL be one of the data object command DER
                                  encoded defined in ES10x
         Le         '00'

                           Table 47: ES10x STORE DATA command APDU

Parameter P1

The P1 SHALL be coded as defined in the following table.

   b8    b7 b6 b5 b4 b3 b2 b1 Meaning
   0/1   -      -    -        -   -     -     -    More blocks/Last block
   -     0      0    -        -   -     -     -    No general encryption information or non-
                                                   encrypted data
   -     -      -    1        0   -     -     -    BER-TLV format of the command data field
   -     -      -    -        -   -     -     1    Case 4 command as defined in GlobalPlatform
                                                   AmdA [9]
   -     -      -    -        -   X     X     -    RFU

                                   Table 48: ES10x STORE DATA P1

This interface is defined with command functions that are mostly handled with a single
APDU command and response pair. When multiple STORE DATA commands are required,
it is indicated by the use of the 'more commands' bit in the P1 byte as defined in
GlobalPlatform Card Specification [8], and procedure bytes controlling the return of
additional data (e.g. '61 XX'). In particular if the size of the response is bigger than 256
bytes, the chaining of the commands SHALL be done as defined in ISO/IEC 7816-4 [14].
The responses SHALL be retrieved by the Device using several GET RESPONSE
commands.

Data Field

The command data field contains the command request data for each function.

Response Message

Data Field

The response data field contains the command response data for each function.

Processing State Returned in the Response Message



V2.4                                                                                    Page 182 of 275
GSM Association                                                               Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

eUICC SHALL indicate an APDU header coding error as defined in GlobalPlatform Card
Specification [8] section 11.11.3.2.

A successful execution of the APDU command SHALL be indicated by the status bytes
'90 00' if no proactive command is pending and by '91 XX' if a proactive command (e.g.,
REFRESH) is pending. All function specific errors SHALL be indicated in the response data
field.

An incorrect/invalid data field encoding (i.e. not a DER data object) SHALL be indicated by
status bytes '6A 80' (Incorrect values in command data).

An unsupported or unknown command request in the data field SHALL be indicated by
status bytes '6A 88' (Reference data not found).

While a Profile state change is ongoing, i.e. a command was sent to the eUICC which
mandates a REFRESH, but the REFRESH was not yet successfully executed (i.e. no
Terminal Response with result "command performed successfully" received or reset of the
eUICC), the eUICC MAY reject any other ES10 command with the status word '69 85'
(Conditions of use not satisfied).



5.7.3    Function (ES10a): GetEuiccConfiguredAddresses
Related Procedures: SM-DS / Default SM-DP+ address Retrieval

Function Provider Entity: ISD-R (LPA Services)

Description:

This function retrieves the Root SM-DS and if configured the Default SM-DP+ address from
the eUICC. Both addresses are coded as FQDN.

Command Data

The command data SHALL be coded as follows:
EuiccConfiguredAddressesRequest ::= [60] SEQUENCE {           -- Tag 'BF3C'
}



Response Data

The response data SHALL be coded as follows:
EuiccConfiguredAddressesResponse ::= [60] SEQUENCE { -- Tag 'BF3C'
   defaultDpAddress UTF8String OPTIONAL, -- Default SM-DP+ address as an FQDN
   rootDsAddress UTF8String -- Root SM-DS address as an FQDN
}

5.7.4    Function (ES10a): SetDefaultDpAddress
Related Procedures: Set/Edit Default SM-DP+ Address

Function Provider Entity: ISD-R (LPA Services)



V2.4                                                                          Page 183 of 275
GSM Association                                                              Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

Description:

This function is used to update the default SM-DP+ address.

If the provided UTF8 string is not empty, it SHALL constitute the new default SM-DP+
address.

If the provided UTF8 string is empty, an existing default SM-DP+ address SHALL be
removed.

Command Data

The command data SHALL be coded as follows:
SetDefaultDpAddressRequest ::= [63] SEQUENCE { -- Tag 'BF3F'
   defaultDpAddress UTF8String -- Default SM-DP+ address as an FQDN
}



Response Data

The response data SHALL be coded as follows:
SetDefaultDpAddressResponse ::= [63] SEQUENCE { -- Tag 'BF3F'
   setDefaultDpAddressResult INTEGER { ok (0), undefinedError (127)}
}

5.7.5    Function (ES10b): PrepareDownload
Related Procedures: Profile Download and Installation

Function Provider Entity: ISD-R (LPA Services)

Description:

This function initiates a Bound Profile Package download after a successful authentication of
an SM-DP+.

On reception of this command, the eUICC SHALL:

       Verify that the received transactionId contained in the smdpSigned2 matches the one
        of the ongoing RSP session.
       Verify that the SM-DP+ has been previously authenticated and a
        CERT.DPauth.ECDSA is attached to the ongoing RSP session.
       Verify the validity of the CERT.DPpb.ECDSA (using the ECASD service) as defined
        in section 4.5.2.2.
       Verify the signature (smdpSignature2) of the SM-DP+ done upon smdpSigned2 data
        structure as described hereunder.
       Verify that CERT.DPauth.ECDSA and CERT.DPpb.ECDSA belong to the same entity
        (i.e. same OID in subjectAltName).
       Verify that CERT.DPauth.ECDSA and CERT.DPpb.ECDSA trust chain lead to the
        same GSMA CI certificate.

If any of these verifications fail, the eUICC SHALL return an error.


V2.4                                                                         Page 184 of 275
GSM Association                                                           Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

If these verifications are successful, the eUICC SHALL:

      Extract the public key of the CERT.DPpb.ECDSA and attach it to the RSP session
       context.
      If bppEuiccOtpk is provided in smdpSigned2 and it corresponds to a stored one-time
       key pair otPK.EUICC.ECKA/ otSK.EUICC.ECKA for this SM-DP+: use this key pair
       for the RSP session. Otherwise: generate a new one-time key pair
       otSK.EUICC.ECKA and otPK.EUICC.ECKA using the curve indicated by the Key
       Parameter Reference Value of CERT.DPpb.ECDSA, and attach otSK.EUICC.ECKA
       to the RSP session context.
      Generate euiccSigned2 data object as defined hereunder.
      Generate the euiccSignature2, as defined hereunder, with the SK.EUICC.ECDSA
       related to the CERT.EUICC.ECDSA as requested by SM-DP+.

Command Data

The command data SHALL be coded as follows.
PrepareDownloadRequest ::= [33] SEQUENCE { -- Tag 'BF21'
   smdpSigned2 SmdpSigned2,                    -- Signed information
   smdpSignature2 [APPLICATION 55] OCTET STRING,      -- tag '5F37'
   hashCc Octet32 OPTIONAL, -- Hash of confirmation code
   smdpCertificate Certificate    -- CERT.DPpb.ECDSA
}

SmdpSigned2 ::= SEQUENCE {
   transactionId [0] TransactionId,     -- The TransactionID generated by the
SM-DP+
   ccRequiredFlag BOOLEAN, --Indicates if the Confirmation Code is required
   bppEuiccOtpk [APPLICATION 73] OCTET STRING OPTIONAL      -- otPK.EUICC.ECKA
already used for binding the BPP, tag '5F49'
}
smdpSignature2 SHALL be created using the SK.DPpb.ECDSA and verified by the eUICC
using the PK.DPpb.ECDSA as described in section 2.6.7.2. smdpSignature2 SHALL apply
on the concatenated data object smdpSigned2 and euiccSignature1.

Response Data

The response data SHALL be coded as follows.
PrepareDownloadResponse ::= [33] CHOICE { -- Tag 'BF21'
   downloadResponseOk PrepareDownloadResponseOk,
   downloadResponseError PrepareDownloadResponseError
}

PrepareDownloadResponseOk ::= SEQUENCE {
   euiccSigned2 EUICCSigned2,            -- Signed information
   euiccSignature2 [APPLICATION 55] OCTET STRING      -- tag '5F37'
}

EUICCSigned2 ::= SEQUENCE {
   transactionId [0] TransactionId,
   euiccOtpk [APPLICATION 73] OCTET STRING,           -- otPK.EUICC.ECKA, tag '5F49'
   hashCc Octet32 OPTIONAL        -- Hash of confirmation code
}

PrepareDownloadResponseError ::= SEQUENCE {
   transactionId [0] TransactionId,
   downloadErrorCode DownloadErrorCode
}


V2.4                                                                      Page 185 of 275
GSM Association                                                                   Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4


DownloadErrorCode ::= INTEGER {invalidCertificate(1), invalidSignature(2),
unsupportedCurve(3), noSessionContext(4), invalidTransactionId(5),
undefinedError(127)}
euiccSignature2 SHALL be created using the SK.EUICC.ECDSA and verified using the
PK.EUICC.ECDSA as described in section 2.6.7.2. euiccSignature2 SHALL apply on the
concatenated data objects euiccSigned2 and smdpSignature2.

5.7.6    Function (ES10b): LoadBoundProfilePackage
Related Procedures: Profile Download and Installation

Function Provider Entity: ISD-R (LPA Services)

Description:

This function transfers a Bound Profile Package to the eUICC. The transfer is done by
calling repeatedly this function with blocks of 255 bytes or less according to the structure of
the Bound Profile Package, i.e. each TLV of the BPP that is up to 255 bytes is transported in
one APDU. Larger TLVs are sent in blocks of 255 bytes for the first blocks and a last block
that MAY be shorter.

The eUICC SHALL erase the otSK.EUICC.ECKA attached to this RSP session no later than
the successful completion of the BPP installation.

If this function is called when there is no RSP session, or if it is called with a TLV that is not
expected according to the structure of the Bound Profile Package, the eUICC SHALL return
the status words '6A 88' (Reference data not found) or '69 85' (Conditions of use not
satisfied) as the response of the transport command defined in section 5.7.2.

Command Data

The command data SHALL contain a block of data of the BPP. The transfer and slicing in
blocks of data SHALL follow description given in section 2.5.5.

Response Data

The data presence in the response message depends on the block status:

       For an intermediate block of data of a BPP TLV, the response message SHALL not
        contain data field.
       For the last block of data of a BPP TLV, a response message containing a Profile
        Installation Result SHALL be present or absent as specified in section 2.5.6.

5.7.7    Function (ES10b): GetEUICCChallenge
Related Procedures: Common Mutual Authentication

Function Provider Entity: ISD-R (LPA Services)

Description:

This function initiates a RSP session between an RSP Server and the ISD-R. The initiation
of the RSP session is materialized on the eUICC by the creation of a context containing an
eUICC challenge.

V2.4                                                                              Page 186 of 275
GSM Association                                                             Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

Only one RSP session can be managed by the ISD-R at a time. So an on-going RSP
session SHALL be completed before requesting the opening of a new one.

On reception of this function, the eUICC SHALL:

       Determine if a previous session was not completed. If so, then:

            The eUICC MAY store the unused otPK.eUICC.ECKA and otSK.eUICC.ECKA,
             together with the SM-DP+ OID, for future retry.
            The eUICC SHALL discard the previous session context.

       Create a new session context and generate a new random challenge attached to this
        RSP session.

Command Data

The command data SHALL be coded as follows:
GetEuiccChallengeRequest ::= [46] SEQUENCE { -- Tag 'BF2E'
}



Response Data

The response data SHALL be coded as follows:
GetEuiccChallengeResponse ::= [46] SEQUENCE { -- Tag 'BF2E'
   euiccChallenge Octet16 -- random eUICC challenge
}

5.7.8       Function (ES10b): GetEUICCInfo
Related Procedures: Profile Download and Installation

Function Provider Entity: ISD-R (LPA Services)

Description:

This function gets the eUICC Information as defined in section 0. This function MAY be
called at any time.

Command Data

The command data SHALL be coded as follows to retrieve EUICCInfo1:
GetEuiccInfo1Request ::= [32] SEQUENCE { -- Tag 'BF20'
}



The command data SHALL be coded as follows to retrieve EUICCInfo2:
GetEuiccInfo2Request ::= [34] SEQUENCE { -- Tag 'BF22'
}



Response Data



V2.4                                                                        Page 187 of 275
GSM Association                                                      Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

The response data SHALL be coded as follows:
EUICCInfo1 ::= [32] SEQUENCE { -- Tag 'BF20'
   svn [2] VersionType,    -- GSMA SGP.22 version supported (SVN)
   euiccCiPKIdListForVerification [9] SEQUENCE OF SubjectKeyIdentifier, -- List of
CI Public Key Identifiers supported on the eUICC for signature verification
   euiccCiPKIdListForSigning [10] SEQUENCE OF SubjectKeyIdentifier -- List of CI
Public Key Identifier supported on the eUICC for signature creation
}

EUICCInfo2 ::= [34] SEQUENCE { -- Tag 'BF22'
   profileVersion [1] VersionType,       -- Base eUICC Profile package version
supported
   svn [2] VersionType,    -- GSMA SGP.22 version supported (SVN)
   euiccFirmwareVer [3] VersionType,     -- eUICC Firmware version
   extCardResource [4] OCTET STRING,     -- Extended Card Resource Information
according to ETSI TS 102 226
   uiccCapability [5] UICCCapability,
   ts102241Version [6] VersionType OPTIONAL,
   globalplatformVersion [7] VersionType OPTIONAL,
   rspCapability [8] RspCapability,
   euiccCiPKIdListForVerification [9] SEQUENCE OF SubjectKeyIdentifier, -- List of
CI Public Key Identifiers supported on the eUICC for signature verification
   euiccCiPKIdListForSigning [10] SEQUENCE OF SubjectKeyIdentifier, -- List of CI
Public Key Identifier supported on the eUICC for signature creation
   euiccCategory [11] INTEGER {
      other(0),
      basicEuicc(1),
      mediumEuicc(2),
      contactlessEuicc(3)
   } OPTIONAL,
   forbiddenProfilePolicyRules [25] PprIds OPTIONAL, –- Tag '99'
   ppVersion VersionType, -- Protection Profile version
   sasAcreditationNumber UTF8String (SIZE(0..64)),
   certificationDataObject [12] CertificationDataObject OPTIONAL,
   treProperties [13] BIT STRING {
     isDiscrete(0),
      isIntegrated(1),
      usesRemoteMemory(2) -- refers to the usage of remote memory protected by
                   the Remote Memory Protection Function described in SGP.21 [4]
   } OPTIONAL,
   treProductReference [14] UTF8String OPTIONAL, -- Platform_Label as defined in
GlobalPlatform DLOA specification [57]
   additionalEuiccProfilePackageVersions [15] SEQUENCE OF VersionType OPTIONAL
}

-- Definition of RspCapability
RspCapability ::= BIT STRING {
   additionalProfile(0), -- at least one more Profile can be installed
   crlSupport(1), -- CRL
   rpmSupport(2), -- Remote Profile Management
   testProfileSupport (3), -- support for test profile
   deviceInfoExtensibilitySupport (4), -- support for ASN.1 extensibility in the
Device Info
   serviceSpecificDataSupport (5) -- support for Service Specific Data in the
Profile Metadata
}

-- Definition of CertificationDataObject
CertificationDataObject ::= SEQUENCE {
   platformLabel UTF8String,     -- Platform_Label as defined in GlobalPlatform
DLOA specification [57]
   discoveryBaseURL UTF8String   -- Discovery Base URL of the SE default DLOA
Registrar as defined in GlobalPlatform DLOA specification [57]
}
The profileVersion field SHALL indicate:


V2.4                                                                 Page 188 of 275
GSM Association                                                                 Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

          the major version number and
          the associated highest minor version number

of the version 2.x eUICC Profile Package specification [5] supported by the eUICC; this
version SHALL be 2.1 or higher.

The additionalEuiccProfilePackageVersions field MAY list higher major versions
including the associated highest minor version number of additional eUICC Profile Package
specification(s) [5] supported by the eUICC.

The "number of installed application" value field of extCardResource SHALL be set to '00'.

The ts102241Version field indicates the latest version of ETSI TS 102 241 [53] supported
by the eUICC. This field SHALL not be present if the eUICC doesn't support Java cardTM.

The globalplatformVersion field indicates the latest version of GlobalPlatform Card
Specification [8] supported by the eUICC. This field SHALL be present if the supported
version differs from the one required in this specification.

Elements in euiccCiPKIdListForVerification and euiccCiPKIdListForSigning
SHALL be set in decreasing order of priority by the eUICC, where the first element in the list
is the most preferred and the last element in the list is the least preferred.

The forbiddenProfilePolicyRules data object SHALL contain the list of PPRs that
are 'forbidden' to be set in any Profile (the PprIds type is defined in section 2.8.1.1). A PPR
is 'forbidden' when there is no PPAR related to this PPR. In addition, PPR1 is 'forbidden' if
an Operational Profile is currently installed on the eUICC.

The information contained in forbiddenProfilePolicyRules data object SHALL be
used during the eligibility check performed by the SM-DP+: the SM-DP+ SHALL not deliver a
Profile containing a PPR 'forbidden' by the eUICC.

The ppVersion data object indicates the version of the GSMA eUICC Protection Profile for
RSP against which the eUICC has been certified. ppVersion V255.255.255 indicates a
Field-Test eUICC.

NOTE:            An eUICC certified during the interim period, when certification against the
                 GSMA eUICC Protection Profile was not available, has a ppVersion of the
                 form V0.X.Y.

The sasAcreditationNumber data object indicates the SAS for RSP accreditation
number obtained by the EUM.

During the interim period until the EUM can be certified against the SAS for RSP, the
sasAcreditationNumber SHALL contain the accreditation number obtained by the EUM
for production of UICC (called SAS-UP).

The additionalProfile bit SHALL be set to '1' to indicate that at least one more Profile
can be installed. Otherwise it SHALL be set to '0'.




V2.4                                                                            Page 189 of 275
GSM Association                                                                Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

The crlSupport bit SHALL be set to '1' to indicate that the eUICC supports the optional
CRL management feature (section 4.6). Otherwise it SHALL be set to '0'.

The rpmSupport bit is reserved for future use and SHALL be set to '0'.

The testProfileSupport bit SHALL be set to '1' to indicate that the eUICC supports the
optional Test Profile feature. Otherwise it SHALL be set to '0'.

The deviceInfoExtensibilitySupport bit SHALL be set to '1' to indicate that the
eUICC supports the extensibility in the DeviceInfo. Otherwise it SHALL be set to '0'.

The CertificationDataObject SHALL be present if a DLOA has been granted to the
eUICC platform. The platformLabel SHALL identify the DLOA in the DLOA Registrar.
This value SHALL be coded as defined in GlobalPlatform DLOA specification [57] section
7.1.1. The discoveryBaseURL MAY be empty or contain a value allowing to discover
alternate DLOA Registrar(s) (in complement to the well-known DLOA Registrar, see section
2.2) where the corresponding DLOA(s) MAY be retrieved. This value SHALL be coded as
defined in GlobalPlatform DLOA specification [57] section 7.1.2.

The treProperties field describes properties of the TRE that the eUICC is based upon. It
SHALL be present for an Integrated eUICC and MAY be present for a Discrete eUICC. This
field SHALL contain one of the following settings:

       isDiscrete
       isIntegrated
       isIntegrated, usesRemoteMemory
The treProductReference SHALL be present for an Integrated eUICC. This value SHALL
be coded as defined in GlobalPlatform DLOA specification [57] section 7.1.1 and contain a
unique reference of the Integrated TRE product that the eUICC is based upon. This field
SHALL NOT be modifiable.


5.7.9    Function: (ES10b): ListNotification
Related Procedures: Profile Download and Installation

Function Provider Entity: ISD-R

Description:

This function is used by the LPA to list all available pending notifications from an eUICC
before retrieving a specific notification.

Command Data

The command data SHALL be coded as follows:
ListNotificationRequest ::= [40] SEQUENCE { -- Tag 'BF28'
   profileManagementOperation [1] NotificationEvent OPTIONAL
}




V2.4                                                                          Page 190 of 275
GSM Association                                                                Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

The profileManagementOperation data object can be used to filter the list of
notifications that the eUICC SHALL return. A bit set to 1 in the
profileManagementOperation indicates that the eUICC SHALL return all the
notifications corresponding to this type. The type notificationInstall SHALL include
ProfileInstallationResult.

If profileManagementOperation data object is omitted, the eUICC SHALL return all
stored notifications whatever their type.

If profileManagementOperation data object indicates no event (all bits set to 0), the
eUICC SHALL return an empty list or undefinedError(127).

Response Data

The response data SHALL contain the 'List Notification Response' data object if available,
and filtered according to profileManagementOperation data object received in the
command data. The eUICC MAY provide the notifications in any order. The list SHALL be
empty if there are no pending notification matching the filtering criteria.
ListNotificationResponse ::= [40] CHOICE { -- Tag 'BF28'
   notificationMetadataList SEQUENCE OF NotificationMetadata,
   listNotificationsResultError INTEGER {undefinedError(127)}
}

NotificationMetadata ::= [47] SEQUENCE { -- Tag 'BF2F'
   seqNumber [0] INTEGER,
   profileManagementOperation [1] NotificationEvent, /*Only one bit SHALL be set to
1*/
   notificationAddress UTF8String, -- FQDN to forward the notification
   iccid Iccid OPTIONAL
}

5.7.10   Function (ES10b): RetrieveNotificationsList
Related Procedures: Notifications

Function Provider Entity: ISD-R (LPA Services)

Description:

This function retrieves the list of Pending notifications for installed Profiles including their
confirmation required and the related data.

Command Data

The command data SHALL be coded as follows:
RetrieveNotificationsListRequest ::= [43] SEQUENCE { -- Tag 'BF2B'
   searchCriteria CHOICE {
      seqNumber [0] INTEGER,
      profileManagementOperation [1] NotificationEvent
   } OPTIONAL
}



The searchCriteria data object can be used to filter the list of notifications that the
eUICC SHALL return, filtering can be done on sequence number or notification type. A bit

V2.4                                                                           Page 191 of 275
GSM Association                                                               Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

set to 1 in the profileManagementOperation indicates that the eUICC SHALL return all
the notifications corresponding to this type. The type notificationInstall SHALL
include ProfileInstallationResult.

If searchCriteria data object is omitted, the eUICC SHALL return all stored Notifications.

Response Data

The response data SHALL contain the list of PendingNotification data objects. The list
SHALL be filtered according to the notification seqNumber or indicated operation type that
generates notifications provided in the command data. The eUICC MAY provide the
notifications in any order. The list SHALL be empty if there are no pending notifications
matching the filtering criteria.

The following is the definition of the RetrieveNotificationsListResponse data object
RetrieveNotificationsListResponse ::= [43] CHOICE { -- Tag 'BF2B'
   notificationList SEQUENCE OF PendingNotification,
   notificationsListResultError INTEGER { undefinedError(127)}
}

PendingNotification ::= CHOICE {
   profileInstallationResult [55] ProfileInstallationResult, -- tag 'BF37'
   otherSignedNotification OtherSignedNotification
}

OtherSignedNotification ::= SEQUENCE {
   tbsOtherNotification NotificationMetadata,
   euiccNotificationSignature [APPLICATION 55] OCTET STRING, -- eUICC signature of
tbsOtherNotification, Tag '5F37'
   euiccCertificate Certificate, -- eUICC Certificate (CERT.EUICC.ECDSA) signed by
the EUM
   eumCertificate Certificate     -- EUM Certificate (CERT.EUM.ECDSA) signed by the
requested CI
}



euiccNotificationSignature SHALL be created using the SK.EUICC.ECDSA and verified
using the PK.EUICC.ECDSA as described in section 2.6.7.2. euiccNotificationSignature
SHALL apply on the tbsOtherNotification data object.

When generating the euiccNotificationSignature, the eUICC SHALL use credentials related
to the euiccCiPKIdToBeUsed parameter received from the SM-DP+ during the Profile
Download and Installation Procedure.

5.7.11   Function (ES10b): RemoveNotificationFromList
Related Procedures: Notifications

Function Provider Entity: ISD-R (LPA Services)

Description:

This function informs the eUICC that:

           1. A specific Notification has been sent to the recipient address; and



V2.4                                                                          Page 192 of 275
GSM Association                                                                   Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

              2. The eUICC SHALL remove such Notification from the Pending Notifications
                 List.

Command Data

The sent Notification TLV SHALL be the DER encoding of the NotificationSent defined as
follows:
NotificationSentRequest ::= [48] SEQUENCE { -- Tag 'BF30'
   seqNumber [0] INTEGER
}



Response Data

The response data SHALL be coded as follows:
NotificationSentResponse ::= [48] SEQUENCE { -- Tag 'BF30'
   deleteNotificationStatus INTEGER {ok(0), nothingToDelete(1),
undefinedError(127)}
}

5.7.12       Function (ES10b): LoadCRL
Related Procedures: None

Function Provider Entity: ISD-R (LPA Services)

Description:

This function is used to transfer a CRL to the eUICC. It is optionally supported by the Device
and the eUICC, as indicated by their corresponding capabilities.

On reception of this command the eUICC SHALL:

        Verify the CRL signature using the PK.CI.ECDSA identified by the extension field
         'Authority Key Identifier'; if the key is unknown or if signature is invalid, the command
         execution SHALL be stopped with error code verificationKeyNotFound or
         invalidSignature.
        Verify CRL format is valid as defined in section 4.5. If not, the command execution
         SHALL be stopped with error code invalidCRLFormat.
        Compare the 'CRL Number' field value contained in the provided CRL with that of the
         last successfully processed CRL on the eUICC:

             If the 'CRL Number' field value is lower: stop the command execution and return a
              response with error code fresherCrlAlreadyLoaded.
             If the 'CRL Number' field value is equal:

                 If the CRL is a complete CRL (i.e. the Extension for Total Partial CRL Number
                  and the Extension for Partial CRL Number are missing): stop the command
                  execution and return a response loadCRLResponseOk, with an empty
                  missing part indication.




V2.4                                                                              Page 193 of 275
GSM Association                                                                 Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

              If the CRL is a segmented CRL and this segment has already been loaded,
               stop the command execution and return a response loadCRLResponseOk
               with missing parts indication.

      If the provided CRL is a Delta CRL (as defined in RFC 5280 [17]): verify that the CRL
       identified by the 'Base CRL Number' field has already been processed. If not, the
       command execution SHALL be stopped with error code baseCrlMissing.

If these verifications are successful, the eUICC SHALL:

   1. Update its internal time reference with the value indicated in the field 'thisUpdate' and
      apply the process described in section 4.6.3.
   2. Remove Certificate entries from its internal storage for each revoked Certificate that
      has expired.
   3. If the CRL is not empty, add a new Certificate entry in its internal storage for each newly
      revoked Certificate where an entry comprises the Certificate serial number and
      expiration date.
   4. Store the new CRL number with the value indicated in the extension field 'CRL
      Number'. Optionally, update the list of processed part numbers of this CRL.

The eUICC SHALL ensure the atomicity of steps 3 and 4, either both steps SHALL be
performed or none of them. In case of error during one of the two steps, the eUICC SHALL
not add any new Certificate entry in its internal storage, leave the stored CRL number
unchanged, leave the list of processed part numbers unchanged and return the error code
notEnoughMemorySpace, if relevant, or undefinedError.

The eUICC MAY apply the changes provided by each CRL segment before it has received
all segments.

Command Data

The command data SHALL be coded as follows.

The 'crl' field SHALL contain a complete CRL, or a partial CRL as described in section 4.6.1.
-- Definition of data structure command for loading a CRL
LoadCRLRequest ::= [53] SEQUENCE { -- Tag 'BF35'
   -- A CRL
   crl CertificateList
}



Response Data

The response data SHALL be coded as follows:
-- Definition of data structure response for loading a CRL
LoadCRLResponse ::= [53] CHOICE { -- Tag 'BF35'
loadCRLResponseOk LoadCRLResponseOk,
loadCRLResponseError LoadCRLResponseError
}

LoadCRLResponseOk ::= SEQUENCE {
   missingParts SEQUENCE OF INTEGER OPTIONAL
}


V2.4                                                                            Page 194 of 275
GSM Association                                                                Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

LoadCRLResponseError ::= INTEGER {invalidSignature(1), invalidCRLFormat(2),
notEnoughMemorySpace(3), verificationKeyNotFound(4), fresherCrlAlreadyLoaded(5),
baseCrlMissing(6), undefinedError(127)}



The optional field 'missingParts' SHALL be present when the provided CRL is a
segmented CRL and not all the segments have been processed. In that case the
'missingParts' field SHALL contain the list of all numbers (starting from 1 and up to the
value contained in the certificate extension 'Total Partial CRL Number') identifying parts that
have not been already processed.

Example:

The provided CRL is a valid (no error condition) segment of a CRL segmented in 3
segments. The certificate extension 'Total Partial CRL Number' contains the value '3', and
the certificate extension 'Partial CRL Number' contains the value '2'. And no segments have
been previously processed.

In that case, the eUICC SHALL process the part with success and return a 'missingParts'
data object containing the values '1' and '3'.

5.7.13    Function (ES10b): AuthenticateServer
Related Procedures: Common Mutual Authentication

Function Provider Entity: ISD-R (LPA Services)

Description:

This function performs the authentication of the RSP Server by the eUICC.

On reception of this command, the eUICC SHALL:

        Verify that a RSP session context exists (i.e. "ES10b.GetUICCChallenge" function
         has been previously called).
        Verify the validity of the RSP Server Certificate for authentication (using the ECASD
         service), as described in section 4.5.2.2 using the PK.CI.ECDSA identified by the
         Authority Key Identifier contained in the RSP Server Certificate.
        Verify that the RSP Server Certificate is either CERT.DPauth.ECDSA or
         CERT.DSauth.ECDSA, as described in section 4.5.2.2.
        Verify the signature (serverSignature1) of the RSP Server done upon serverSigned1
         as described hereunder.
        Verify that the euiccChallenge attached to the ongoing RSP session matches the
         euiccChallenge returned by the RSP Server inside the serverSigned1.
        Verify that euiccCiPKIdToBeUsed is supported and related credentials are available
         for signing.

If any of these verifications fail, the eUICC SHALL return an
authenticateResponseError with the relevant error code.

Otherwise the eUICC SHALL:



V2.4                                                                           Page 195 of 275
GSM Association                                                            Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

      Attach the received transactionId in the RSP session context.
      Attach the received RSP Server Certificate in the RSP session context.
      Generate euiccSigned1 data object as defined hereunder.
      Generate the euiccSignature1 as defined hereunder, with the SK.EUICC.ECDSA
       related to the CERT.EUICC.ECDSA as requested by RSP Server.

Command Data

The command data SHALL be coded as follows.
AuthenticateServerRequest ::= [56] SEQUENCE { -- Tag 'BF38'
   serverSigned1 ServerSigned1,                       -- Signed information
   serverSignature1 [APPLICATION 55] OCTET STRING,    -- tag ‘5F37’
   euiccCiPKIdToBeUsed SubjectKeyIdentifier,          -- CI Public Key Identifier to
be used
   serverCertificate Certificate, -- RSP Server Certificate CERT.XXauth.ECDSA
   ctxParams1 CtxParams1
}

ServerSigned1 ::= SEQUENCE {
   transactionId [0] TransactionId,            -- The Transaction ID generated by
the RSP Server
   euiccChallenge [1] Octet16,          -- The eUICC Challenge
   serverAddress [3] UTF8String, -- The RSP Server address as an FQDN
   serverChallenge [4] Octet16          -- The RSP Server Challenge
}

CtxParams1 ::= CHOICE {
   ctxParamsForCommonAuthentication CtxParamsForCommonAuthentication-- New
contextual data objects MAY be defined for extensibility.
}

CtxParamsForCommonAuthentication ::= SEQUENCE {
   matchingId UTF8String OPTIONAL, -- The MatchingId could be the Activation code
token or EventID or empty
   deviceInfo DeviceInfo -- The Device information
}

serverSignature1 SHALL be created using the private key associated to the RSP Server
Certificate for authentication, and verified by the eUICC using the contained public key as
described in section 2.6.7.2. serverSignature1 SHALL apply on serverSigned1 data
object.

Response Data

The response data SHALL be coded as follows.
AuthenticateServerResponse ::= [56] CHOICE { -- Tag 'BF38'
   authenticateResponseOk AuthenticateResponseOk,
   authenticateResponseError AuthenticateResponseError
}

AuthenticateResponseOk ::= SEQUENCE {
   euiccSigned1 EuiccSigned1,            -- Signed information
   euiccSignature1 [APPLICATION 55] OCTET STRING,     --EUICC_Sign1, tag 5F37
   euiccCertificate Certificate, -- eUICC Certificate (CERT.EUICC.ECDSA) signed by
the EUM
   eumCertificate Certificate     -- EUM Certificate (CERT.EUM.ECDSA) signed by the
requested CI
}

EuiccSigned1 ::= SEQUENCE {


V2.4                                                                       Page 196 of 275
GSM Association                                                              Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

    transactionId [0] TransactionId,
    serverAddress [3] UTF8String, -- The RSP Server address as an FQDN
    serverChallenge [4] Octet16,   -- The RSP Server Challenge
    euiccInfo2 [34] EUICCInfo2,
    ctxParams1 CtxParams1
}

AuthenticateResponseError ::= SEQUENCE {
   transactionId [0] TransactionId,
   authenticateErrorCode AuthenticateErrorCode
}

AuthenticateErrorCode ::= INTEGER {invalidCertificate(1), invalidSignature(2),
unsupportedCurve(3), noSessionContext(4), invalidOid(5), euiccChallengeMismatch(6),
ciPKUnknown(7), undefinedError(127)}

euiccSignature1 SHALL be created using the SK.EUICC.ECDSA and verified using the
PK.EUICC.ECDSA as described in in section 2.6.7.2. euiccSignature1 SHALL apply on
euiccSigned1 data object.

5.7.14    Function (ES10b): CancelSession
Related Procedures: Profile Download and Installation

Function Provider Entity: ISD-R (LPA Services)

Description:

This function allows to cancel an on-going RSP session on the eUICC and to get a signed
data structure that is necessary for the LPAd to request the same session cancellation to the
RSP Server.

On reception of this command the eUICC SHALL:

        Verify that the Transaction ID provided as input data is known and matches the one
         retained in the context of the ongoing RSP session. If not the eUICC SHALL return an
         error code invalidTransactionId.

If these verifications are successful, the eUICC SHALL:

        Generate an euiccCancelSessionSigned data object as defined hereunder.
        Generate the euiccCancelSessionSignature, as defined hereunder, with the
         SK.EUICC.ECDSA.
        If the CancelSessionReason is 'postponed' or 'timeout', the eUICC MAY store the
         unused otPK.eUICC.ECKA and otSK.eUICC.ECKA, together with the SM-DP+
         identity, for future retry.
        Discard the on-going RSP session context.

The eUICC MAY perform additional internal operations, which are out of scope of this
specification.

Command Data

The command data SHALL be coded as follows.
CancelSessionRequest ::= [65] SEQUENCE { -- Tag 'BF41'


V2.4                                                                         Page 197 of 275
GSM Association                                                                     Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

    transactionId TransactionId,         -- The TransactionID generated by the RSP Server
    reason CancelSessionReason
}

CancelSessionReason ::= INTEGER {endUserRejection(0), postponed(1), timeout(2),
pprNotAllowed(3), metadataMismatch(4), loadBppExecutionError(5),
undefinedReason(127)}



The cancel session reasons endUserRejection(0),   pprNotAllowed(3),
metadataMismatch(4), loadBppExecutionError(5), undefinedReason(127)
terminate the download order.

Response Data

The response data SHALL be coded as follows.
CancelSessionResponse ::= [65] CHOICE { -- Tag 'BF41'
   cancelSessionResponseOk CancelSessionResponseOk,
   cancelSessionResponseError INTEGER {invalidTransactionId(5),
undefinedError(127)}
}

CancelSessionResponseOk ::= SEQUENCE {
   euiccCancelSessionSigned EuiccCancelSessionSigned,        -- Signed information
   euiccCancelSessionSignature [APPLICATION 55] OCTET STRING -- tag '5F37'
}

EuiccCancelSessionSigned ::= SEQUENCE {
   transactionId TransactionId,
   smdpOid OBJECT IDENTIFIER, -- SM-DP+ OID as contained in CERT.DPauth.ECDSA
   reason CancelSessionReason
}



euiccCancelSessionSignature SHALL be created using the SK.EUICC.ECDSA and
verified using the PK.EUICC.ECDSA as described in section 2.6.7.2.
euiccCancelSessionSignature SHALL apply on the data object
euiccCancelSessionSigned.

5.7.15   Function (ES10c): GetProfilesInfo
Related Procedures: Local Profile Management – List Profiles

Function Provider Entity: ISD-R (LPA Services)

Description:

This function retrieves the list of Profile information for installed Profiles including their current
state (Enabled/Disabled) and their associated Profile Metadata. This function MAY also be
used to retrieve this information for a particular Profile.

If there is a Profile state change ongoing (i.e. during an enable, disable or
eUICCMemoryReset command requiring a REFRESH) and the Profile state is requested,
the eUICC SHALL terminate the command with the status word '69 85' (Conditions of use
not satisfied).

Command Data


V2.4                                                                                Page 198 of 275
GSM Association                                                                  Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

The command data consists of the search criteria and the tag list. It SHALL be coded as
follows:
ProfileInfoListRequest ::= [45] SEQUENCE { -- Tag 'BF2D'
   searchCriteria [0] CHOICE {
      isdpAid [APPLICATION 15] OctetTo16, -- AID of the ISD-P, tag '4F'
      iccid Iccid, -- ICCID, tag '5A'
      profileClass [21] ProfileClass -- Tag '95'
   } OPTIONAL,
   tagList [APPLICATION 28] OCTET STRING OPTIONAL -- tag '5C'
}



It SHALL be possible to search for all the Profiles using no search criterion.

The value field of the tag list (tag ‘5C’) contains a concatenation of tags (without delimitation)
indicating the data objects to include in the response for each Profile matching all given search
criteria.

If a requested data object is not present for a matching Profile, the data object SHALL simply
be omitted in the response for that Profile.

The eUICC SHALL support the following tags in the tag list:

      ICCID, tag '5A' (*)
      ISD-P AID, tag '4F' (*)
      Profile state, tag '9F70' (*)
      Profile Nickname, tag '90' (*)
      Service provider name, tag '91' (*)
      Profile name, tag '92' (*)
      Icon type, tag '93' (*)
      Icon, tag '94' (*)
      Profile Class, tag '95' (*)
      Notification Configuration Info, tag 'B6'
      Profile Owner, tag 'B7'
      SM-DP+ proprietary data, tag 'B8'
      Profile Policy Rules, tag '99'
      Service Specific Data stored in eUICC, tag 'BF22'

If no tag list is present, the eUICC SHALL return the default ProfileInfo: the ProfileInfo data
objects marked with (*) for each Profile matching the selection criterion.

If a tag list is present, the eUICC SHALL return all data objects requested in the tag list for
each Profile matching the selection criterion.

Example of use:

      Retrieve the ProfileInfo for all installed Profiles. The command data field SHALL be
       coded as 'BF2D 00'.
      Retrieve all information of a particular Profile/ISD-P having the following AID: A0 00
       00 05 59 10 10 FF FF FF FF 89 00 00 10 00. The command data field SHALL be



V2.4                                                                             Page 199 of 275
GSM Association                                                                Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

         coded as 'BF2D 24 A0 12 4F 10 A0 00 00 05 59 10 10 FF FF FF FF 89 00 00 10 00
         5C 0E 5A 4F 9F70 90 91 92 93 94 95 B6 B7 B8 99'.
        Retrieve ICCID and Profile state for all installed Profiles. The command data field
         SHALL be coded as 'BF 2D 05 5C 03 5A 9F70'.

Response Data

The response data SHALL contain the list of data objects as required by the tag list. The list
SHALL be empty if no Profile is installed or if no Profile matches the given search criteria.

The following is the definition of the ProfileInfoListResponse data object:
-- Definition of ProfileInfoListResponse
ProfileInfoListResponse ::= [45] CHOICE { -- Tag 'BF2D'
   profileInfoListOk SEQUENCE OF ProfileInfo,
   profileInfoListError ProfileInfoListError
}

ProfileInfo ::= [PRIVATE 3] SEQUENCE { -- Tag 'E3'
   iccid Iccid OPTIONAL,
   isdpAid [APPLICATION 15] OctetTo16 OPTIONAL, -- AID of the ISD-P containing the
Profile, tag '4F'
   profileState [112] ProfileState OPTIONAL, -- Tag '9F70'
   profileNickname [16] UTF8String (SIZE(0..64)) OPTIONAL, -- Tag '90'
   serviceProviderName [17] UTF8String (SIZE(0..32)) OPTIONAL, -- Tag '91'
   profileName [18] UTF8String (SIZE(0..64)) OPTIONAL, -- Tag '92'
   iconType [19] IconType OPTIONAL, -- Tag '93'
   icon [20] OCTET STRING (SIZE(0..1024)) OPTIONAL, -- Tag '94', see condition in
ES10c:GetProfilesInfo
   profileClass [21] ProfileClass OPTIONAL, –- Tag '95'
   notificationConfigurationInfo [22] SEQUENCE OF
NotificationConfigurationInformation OPTIONAL, -- Tag 'B6'
   profileOwner [23] OperatorId OPTIONAL, -- Tag 'B7'
   dpProprietaryData [24] DpProprietaryData OPTIONAL, -- Tag 'B8'
   profilePolicyRules [25] PprIds OPTIONAL, –- Tag '99'}
   serviceSpecificDataStoredInEuicc [34] VendorSpecificExtension OPTIONAL -- Tag
'BF22'
IconType ::= INTEGER {jpg(0), png(1)}
ProfileState ::= INTEGER {disabled(0), enabled(1)}
ProfileClass ::= INTEGER {test(0), provisioning(1), operational(2)}
ProfileInfoListError ::= INTEGER {incorrectInputValues(1), undefinedError(127)}



The profileOwner data object can only be returned if Profile Owner has been provided in
Profile Metadata or if files EFIMSI, EFGID1 or EFGID2 are not PIN protected.

The profilePolicyRules data object SHALL contain the identifiers of all Profile Policy
Rules of the Profile.

5.7.16    Function (ES10c): EnableProfile
Related Procedures: Local Profile Management – Enable Profile

Function Provider Entity: LPA Services

Description:

This function is used to enable a Profile on the eUICC. The function makes the target Profile
enabled, and disables implicitly the currently Enabled Profile, if any. This SHALL be
performed in an atomic way, meaning that in case of any error during the command

V2.4                                                                          Page 200 of 275
GSM Association                                                                    Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

execution, the command SHALL stop and SHALL leave the involved Profiles in their original
states prior to command execution.

    NOTE:        Before calling the EnableProfile function with the refreshFlag not being set,
                 the Device has the responsibility to ensure that the relevant conditions for
                 use are met, as indicated in section 3.2.1.

Upon reception of the EnableProfile function, if the refreshFlag is not set, the eUICC SHALL:

      Check whether there is a proactive session ongoing (which the Device did not
       terminate). If so:

          the eUICC MAY terminate the EnableProfile command with error 'catBusy'.

              If the eUICC does not terminate the EnableProfile command with error
               'catBusy', the eUICC SHALL internally terminate the proactive session and
               ignore any incoming TERMINAL RESPONSE from that proactive session.

      Close all logical channels which still have an application of the currently enabled
       Profile selected (which the Device did not close), without generating an error.

Regardless of the value of refreshFlag, the eUICC SHALL:

      Verify that the target Profile is in the Disabled state.
      If the target Profile is not a Test Profile: check if the Profile Policy Rules of the
       currently Enabled Profile allow its disabling.
      If the currently Enabled Profile is a Test Profile: verify

              that the target Profile is (another) Test Profile, or
              if an Operational Profile was in Enabled state before the (first) Test Profile was
               enabled, that the target Profile is this Operational Profile.

      If any of these verifications fail, terminate the command with an error.



If the refreshFlag is not set:

      the eUICC SHALL reset the PIN status
      the eUICC SHALL disable the currently Enabled Profile (if any), Enable the target
       Profile and implicitly select the MF on the basic logical channel.
      The eUICC SHALL return OK to the LPAd

    NOTE:        for subsequent actions by the Device see section 3.2.1.



If the refreshFlag is set:

      If there is a proactive session ongoing;

          the eUICC MAY terminate the EnableProfile command with error 'catBusy'.


V2.4                                                                               Page 201 of 275
GSM Association                                                              Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

          If the eUICC does not terminate the EnableProfile command with error 'catBusy',
           the eUICC SHALL internally terminate the proactive session and send the
           REFRESH command as the next proactive command. If a TERMINAL
           RESPONSE is still outstanding, the REFRESH command SHALL only be sent
           after reception of the TERMINAL RESPONSE.


   NOTE:        the Device MAY take implementation-dependent action to terminate the
                proactive command session, and MAY send the enable command again
                without any further End User interaction.

      Otherwise
           The eUICC SHALL mark the currently enabled Profile (if any) as "to be
             disabled", mark the target Profile as "to be enabled" and return OK to the
             LPAd
           the eUICC SHALL send the REFRESH command in "eUICC Profile State
             Change" mode (if supported by the Device) or "UICC Reset" mode to the
             Device according to ETSI TS 102 223 [31].
           Upon reception of the Terminal Response with result "command performed
             successfully" or upon reset of the eUICC, the eUICC SHALL disable the
             currently Enabled Profile (if any) and Enable the target Profile.
           Upon reception of the Terminal Response with result "temporary problem with
             executing command" or "permanent problem with executing command", the
             eUICC SHALL NOT disable the currently Enabled Profile (if any) nor Enable
             the target Profile. Subsequent actions are implementation specific.


   NOTE:        In the case the Device supports the Single Wire Protocol interface to the
                eUICC, the Device SHOULD take the appropriate actions regarding this
                interface when Profile state is changed.

The eUICC MAY start a new proactive UICC session only after a new TERMINAL PROFILE
command is executed.

      If a previously Enabled Profile was successfully disabled, the eUICC SHALL generate
       as many Notifications as configured in its metadata
       (notificationConfigurationInfo) in the format of
       OtherSignedNotification.
      If the target Profile is successfully enabled, the eUICC SHALL generate as many
       Notifications as configured in its metadata (notificationConfigurationInfo) in
       the format of OtherSignedNotification.



Command Data

The command data SHALL be coded as follows:
EnableProfileRequest ::= [49] SEQUENCE { -- Tag 'BF31'
   profileIdentifier CHOICE {


V2.4                                                                         Page 202 of 275
GSM Association                                                                 Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

        isdpAid [APPLICATION 15] OctetTo16, -- AID, tag '4F'
        iccid Iccid -- ICCID, tag '5A'
    },
    refreshFlag BOOLEAN -- indicating whether REFRESH is required
}



Response Data

The response data SHALL be coded as follows:
EnableProfileResponse ::= [49] SEQUENCE { -- Tag 'BF31'
   enableResult INTEGER {ok(0), iccidOrAidNotFound (1),
profileNotInDisabledState(2), disallowedByPolicy(3), wrongProfileReenabling(4),
catBusy(5), undefinedError(127)}
}



Alternative Case 3 Command

In addition to the command data exchange described above, the eUICC SHALL support the
following alternative command for the function:

The command data is sent to the eUICC in a Case 3 STORE DATA command:

        The STORE DATA APDU SHALL be coded as defined in section 5.7.2, with the
         exception of P1 which SHALL be set to '90'.
        The command data SHALL be coded as defined above, the response data SHALL
         not be present.

        The following additional status bytes are defined:
         '6A 82': Profile not found
         '69 85': Profile not in disabled state or command not allowed by Profile Policy Rules
         or re-enabling wrong Profile
         '93 00': CAT is busy. Command cannot be executed at present, further normal
         commands are allowed

5.7.17    Function (ES10c): DisableProfile
Related Procedures: Local Profile Management – Disable Profile

Function Provider Entity: LPA Services

Description:

This function is used to disable a Profile on the eUICC.

    NOTE:        Before calling the DisableProfile function with the refreshFlag not being set,
                 the Device has the responsibility to ensure that the relevant conditions for
                 use are met, as indicated in section 3.2.2.

Upon reception of the DisableProfile function, if the refreshFlag is not set, the eUICC
SHALL:

        Check whether there is a proactive session ongoing (which the Device did not
         terminate). If so,

V2.4                                                                           Page 203 of 275
GSM Association                                                                   Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

          the eUICC MAY terminate the DisableProfile function with error 'catBusy'.
          If the eUICC does not terminate the DisableProfile command with error 'catBusy',
           the eUICC SHALL internally terminate the proactive session and ignore any
           incoming TERMINAL RESPONSE from that proactive session.

      Close all logical channels which still have an application of the currently enabled
       Profile selected (which the Device did not close), without generating an error.

Regardless of the value of refreshFlag, the eUICC SHALL:

      Verify that the target Profile is in the Enabled state.
      If the currently Enabled Profile is not a Test Profile: check if the Profile Policy Rules of
       the target Profile allows its disabling.
      If any of these verifications fail, terminate the command with an error.
      If the refreshFlag is not set:
        the eUICC SHALL reset the PIN status.
        the eUICC SHALL disable the currently Enabled Profile.
        If the target Profile is a Test Profile and an Operational Profile was in Enabled
            state before the (first) Test Profile was enabled: enable this Operational Profile. If
            this Operational Profile was deleted while the Test Profile was enabled, no error
            SHALL be generated and the function execution SHALL continue.
        The eUICC SHALL implicitly select the MF on the basic logical channel.
        The eUICC SHALL return OK to the LPAd.

   NOTE:         for subsequent actions by the Device see section 3.2.2.

      If the refreshFlag is set:
        If there is a proactive session ongoing, the eUICC MAY terminate the
            DisableProfile function with error 'catBusy'
        If the eUICC does not terminate the DisableProfile command with error
            'catBusy', the eUICC SHALL internally terminate the proactive session and send
            the REFRESH command as the next proactive command. If a TERMINAL
            RESPONSE is still outstanding, the REFRESH command SHALL only be sent
            after reception of the TERMINAL RESPONSE.


   NOTE:         the Device MAY take implementation-dependent actions to terminate the
                 proactive command session, and MAY send the Disable command again
                 without any further End User interaction.

          Otherwise:

              The eUICC SHALL mark the currently enabled Profile as "to be disabled" and
               return OK to the LPAd.
              The eUICC SHALL send the REFRESH command in "eUICC Profile State
               Change" mode (if supported by the Device) or "UICC Reset" mode to the Device
               according to ETSI TS 102 223 [31].
              Upon reception of the Terminal Response with result "command performed
               successfully" or upon reset of the eUICC, the eUICC SHALL disable the
               currently Enabled Profile. If the target Profile is a Test Profile and an Operational

V2.4                                                                              Page 204 of 275
GSM Association                                                              Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

               Profile was in Enabled state before the (first) Test Profile was enabled: the
               eUICC SHALL enable this Operational Profile. If this Operational Profile was
               deleted while the Test Profile was enabled, no error SHALL be generated and
               the function execution SHALL continue.
              Upon reception of the Terminal Response with result "temporary problem with
               executing command" or "permanent problem with executing command", the
               eUICC SHALL NOT disable the currently Enabled Profile. Subsequent actions
               are implementation specific.

   NOTE:        In the case the Device supports the Single Wire Protocol interface to the
                eUICC, the Device SHOULD take the appropriate actions regarding this
                interface when Profile state is changed.

      If the target Profile is successfully disabled, the eUICC SHALL generate as many
       Notifications as configured in its metadata (notificationConfigurationInfo) in
       the format of OtherSignedNotification.



Command Data

The command data SHALL be coded as follows:
DisableProfileRequest ::= [50] SEQUENCE { -- Tag 'BF32'
   profileIdentifier CHOICE {
      isdpAid [APPLICATION 15] OctetTo16, -- AID, tag '4F'
      iccid Iccid -- ICCID, tag '5A'
   }
   refreshFlag BOOLEAN -- indicating whether REFRESH is required
}



Response Data

The response data SHALL be coded as follows:
DisableProfileResponse ::= [50] SEQUENCE { -- Tag 'BF32'
   disableResult INTEGER {ok(0), iccidOrAidNotFound (1),
profileNotInEnabledState(2), disallowedByPolicy(3), catBusy(5),
undefinedError(127)}
}



Alternative Case 3 Command

In addition to the command data exchange described above, the eUICC SHALL support the
following alternative command for the function:

The command data is sent to the eUICC in a Case 3 STORE DATA command:

      The STORE DATA APDU SHALL be coded as defined in section 5.7.2, with the
       exception of P1 which SHALL be set to '90'.
      The command data SHALL be coded as defined above, the response data SHALL
       not be present.



V2.4                                                                         Page 205 of 275
GSM Association                                                                 Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

        The following additional status bytes are defined:
         '6A 82': Profile not found.
         '69 85': Profile not in enabled state or command not allowed by Profile Policy Rules.
         '93 00': CAT is busy. Command cannot be executed at present, further normal
         commands are allowed.

5.7.18    Function (ES10c): DeleteProfile
Related Procedures: Delete Profile

Function Provider Entity: ISD-R (LPA Services)

Description:

This function deletes a Profile from eUICC. This function can be used at any time by the
LPAd. The Profile to be deleted can be identified by ISD-P AID or ICCID.

On reception of this command the eUICC SHALL check the state and the Profile Policy
Rules of the target Profile. If Profile is in Enabled state or the Profile Policy Rules does not
allow deletion of the Profile, the eUICC SHALL return an error; otherwise the eUICC SHALL
delete the ISD-P containing the target Profile and its related Profile Metadata.

If the target Profile is successfully deleted, the eUICC SHALL generate as many
Notifications as configured in its metadata (notificationConfigurationInfo) in the
format of OtherSignedNotification.

Command Data

The command data SHALL be coded as follows:
DeleteProfileRequest ::= [51] CHOICE { -- Tag 'BF33'
   isdpAid [APPLICATION 15] OctetTo16, -- AID, tag '4F'
   iccid Iccid -- ICCID, tag '5A'
}



Response Data

The response data SHALL be coded as follows:
DeleteProfileResponse ::= [51] SEQUENCE { -- Tag 'BF33'
   deleteResult INTEGER {ok(0), iccidOrAidNotFound (1),
profileNotInDisabledState(2), disallowedByPolicy(3), undefinedError(127)}
}



Alternative Case 3 Command

In addition to the command data exchange described above, the eUICC SHALL support the
following alternative command for the function:

The command data is sent to the eUICC in a Case 3 STORE DATA command:

        The STORE DATA APDU SHALL be coded as defined in section 5.7.2, with the
         exception of P1 which SHALL be set to '90'.


V2.4                                                                            Page 206 of 275
GSM Association                                                                     Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

        The command data SHALL be coded as defined above, the response data SHALL
         not be present.
        The following additional status bytes are defined:
         '6A 82': Profile not found.
         '69 85': Profile not in disabled state or command not allowed by Profile Policy Rules.

5.7.19    Function (ES10c): eUICCMemoryReset
Related Procedures: eUICC Memory Reset

Function Provider Entity: LPA Services

Description:

This function deletes selected subsets of the Profiles stored on an eUICC regardless of their
enabled status or any Profile Policy Rules. Two subsets are defined:

        Operational Profiles.
        Test Profiles that were not pre-installed (i.e., Test Profiles that were "field loaded").

   NOTE:          The identification of pre-installed Test Profiles is out of the scope of this
                  specification.

The eUICC returns a status indicating whether any Profiles were deleted.

This function can also be used to reset the Default SM-DP+ address to its initial value.

Any combination MAY be specified.

If the eUICC does not support Test Profiles, then a request to delete them is ignored.

The eUICC Memory Reset SHALL be performed in an atomic and non-reversible way in
case of external interruptions (e.g. power loss): the eUICC SHALL continue the processing
of that command upon the next eUICC power on. In case of any other error during the
command execution, the command SHALL stop and SHALL leave the eUICC and the
involved Profiles in their original states prior to command execution.

Upon reception of the eUICCMemoryReset function and dependent on the parameters set,
the eUICC SHALL do the following:

Check whether

   there is an Enabled Profile with a proactive session is ongoing, if so:
           o eUICC MAY terminate the command and return error code 'catBusy'.
           o If the eUICC does not terminate the eUICCMemoryReset command with error
               'catBusy', the eUICC SHALL internally terminate the proactive session and
               send the REFRESH command as the next proactive command. If a
               TERMINAL RESPONSE is still outstanding, the REFRESH command SHALL
               only be sent after reception of the TERMINAL RESPONSE.




V2.4                                                                                Page 207 of 275
GSM Association                                                                 Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

   NOTE:          the Device MAY take implementation-dependent action to terminate the
                  proactive command session, and MAY send the eUICC Memory Reset
                  command again without any further End User interaction.

        If the eUICC does not terminate the eUICCMemoryReset command, the function
         SHALL:
          Delete all the selected ISD-Ps with their Profiles regardless of their enabled status
              or Profile Policy Rules and all related Profiles Metadata stored in the ISD-R. If
              there was an Enabled Profile, the ISD-R SHALL send a REFRESH proactive
              command to the Device.
          Reset the Default SM-DP+ address to its initial value.
          For each deleted Profile, the eUICC SHALL generate as many Notifications as
              configured in its Profile Metadata (notificationConfigurationInfo) in the
              format of OtherSignedNotification.

Command Data

The command data SHALL be coded as follows:
EuiccMemoryResetRequest ::= [52] SEQUENCE { -- Tag 'BF34'
   resetOptions [2] BIT STRING {
      deleteOperationalProfiles(0),
      deleteFieldLoadedTestProfiles(1),
      resetDefaultSmdpAddress(2)}
}



Response Data

The response data SHALL be coded as follows:
EuiccMemoryResetResponse ::= [52] SEQUENCE { -- Tag 'BF34'
   resetResult INTEGER {ok(0), nothingToDelete(1), catBusy(5), undefinedError(127)}
}



5.7.20    Function (ES10c): GetEID
Related Procedures: Profile Download Initiation

Function Provider Entity: ISD-R (LPA Services)

Description:

This function gets the EID from the eUICC. This function can be used at any time by the
LPA, and for instance during the Profile Download Initiation when the End user MAY have to
provide the EID to the contracting Service Provider/Operator, and when the EID is not
available by another mean, e.g. the End User MAY have lost the physical material where it
was printed on.

Command Data

The data field SHALL indicate EID data object '5C 01 5A' (tag '5A' identifies the EID).

The command data SHALL be coded as follows:

V2.4                                                                           Page 208 of 275
GSM Association                                                              Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

GetEuiccDataRequest ::= [62] SEQUENCE { -- Tag 'BF3E'
   tagList [APPLICATION 28] Octet1 -- tag '5C', the value SHALL be set to '5A'
}



Response Data

The response data SHALL be coded as follows:
GetEuiccDataResponse ::= [62] SEQUENCE { -- Tag 'BF3E'
   eidValue [APPLICATION 26] Octet16 -- tag '5A'
}



In case the provided tagList is invalid or unsupported, the eUICC SHALL return an error
status word.

5.7.21    Function (ES10c): SetNickname
Related Procedures: Set/Edit Nickname

Function Provider Entity: LPA Services

Description:

This function is used to add or update a Profile Nickname associated to one Profile present
on-card.

Upon reception of the SetNickname function, the eUICC SHALL:

        Verify that the target Profile is present on the eUICC
        Update the target Profile nickname with the provided data

In case a Profile Nickname already exists for the indicated Profile, the Profile Nickname
SHALL be updated with the new value. In case the new value is an empty string, the Profile
Nickname SHALL be removed. Removing a non-existing Profile Nickname SHALL not be
considered an error.

Command Data

The command data SHALL be coded as follows:
-- Definition of Profile Nickname Information
SetNicknameRequest ::= [41] SEQUENCE { -- Tag 'BF29'
   iccid Iccid,
   profileNickname [16] UTF8String (SIZE(0..64))
}



Response Data

The response data SHALL be coded as follows:
SetNicknameResponse ::= [41] SEQUENCE { -- Tag 'BF29'
   setNicknameResult INTEGER {ok(0), iccidNotFound (1), undefinedError(127)}
}




V2.4                                                                        Page 209 of 275
GSM Association                                                              Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

5.7.22     Function (ES10b): GetRAT
Related Procedures: Profile Download and Installation

Function Provider entity: ISD-R (LPA Services)

Description:

This function retrieves the Rules Authorisation Table (RAT) from the eUICC. It can be called
at any time. The RAT is used by the LPA to determine if a Profile containing PPRs can be
installed, conditionally with End User Consent, on the eUICC as defined in section 2.9.2.4.

Command data

The command data SHALL be coded as follows:

GetRatRequest ::= [67] SEQUENCE { -- Tag ' BF43'
   -- No input data
}



Response data

The response data SHALL be coded as follows:

GetRatResponse ::= [67] SEQUENCE { -- Tag 'BF43'
   rat RulesAuthorisationTable
}

RulesAuthorisationTable ::= SEQUENCE OF ProfilePolicyAuthorisationRule
ProfilePolicyAuthorisationRule ::= SEQUENCE {
   pprIds PprIds,
   allowedOperators SEQUENCE OF OperatorId,
   pprFlags BIT STRING {consentRequired(0)}
}

The list of ProfilePolicyAuthorisationRule data objects SHALL be returned in the
same order as stored in the eUICC. This list MAY be empty.

The pprIds data object SHALL identify at least one PPR. The LPA SHALL ignore the
pprUpdateControl bit.

The allowedOperators data object SHALL follow the description given in section 2.9.2.1.

The consentRequired bit set to 1 indicates that the End User consent is required.

5.8       ES11 (LPA -- SM-DS)
ES11 is the interface between:

         The LPA entity (more specifically the LDS endpoint).
         The SM-DS.




V2.4                                                                        Page 210 of 275
GSM Association                                                                      Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4



                    SM-DS                                                     LPA

                                                                              LDS



                                                   ES11


                            CERT.DS.TLS
                            SK.DS.TLS

                                          Figure 38: ES11

The LPA SHALL communicate with the SM-DS secured by TLS in server authentication
mode as described in section 2.6.6.

The format of the TLS Certificates (CERT.DS.TLS) used for TLS connections is described in
section 4.5.2.1.

During TLS establishment, LPA SHALL verify the received CERT.DS.TLS according to
section 4.5.2.2. If any of these verifications fail, the TLS connection SHALL be rejected, and
the on-going procedure SHALL fail.

5.8.1    Function: InitiateAuthentication
Related Procedures: Common Mutual Authentication for Event Retrieval

Function Provider Entity: SM-DS

Description:

This function is identical to "ES9+.InitiateAuthentication" where the SM-DS plays the role of
SM-DP+ and where:

       The SM-DP+ SHALL be replaced by the SM-DS.
       CERT.DPauth.ECDSA SHALL be replaced by CERT.DSauth.ECDSA.

   NOTE:        The input data object 'smdpAddress' contains an SM-DS address in this
                case.

Specific Status Codes

Subject                 Reason
          Subject                    Reason               Description
Code                    code
          SM-DS
8.9.1                   3.8          Refused              Invalid SM-DS Address.
          Address
          Security                                        None of the proposed Public Key Identifiers is
8.9.2                   3.1          Unsupported
          configuration                                   supported by the SM-DS.
          Specification
                                                          The Specification Version Number indicated
8.9.3     Version       3.1          Unsupported
                                                          by the eUICC is not supported by the SM-DS.
          Number



V2.4                                                                                Page 211 of 275
GSM Association                                                                Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

                                                       The SM-DS has no CERT.DS.ECDSA signed
           SM-DS
8.9.4                    3.7      Unavailable          by one of the GSMA CI Public Key supported
           Certificate
                                                       by the eUICC.

                  Table 48a: InitiateAuthentication Specific Status codes

5.8.2    Function: AuthenticateClient
Related Procedures: Common mutual authentication for Event Retrieval

Function Provider Entity: SM-DS

Description:

This function SHALL be called by the LPA to request the authentication of the eUICC by the
SM-DS.

This function is correlated to a previous normal execution of an "ES11.InitiateAuthentication"
function through a Transaction ID delivered by the SM-DS.

On reception of this function call, the SM-DS SHALL:

       Verify the validity of the CERT.EUM.ECDSA, using the public key PK.CI.ECDSA.
       Verify the validity of the CERT.EUICC.ECDSA, using the public key PK.EUM.ECDSA.
       Verify the eUICC signature (euiccSignature1) using the PK.EUICC.ECDSA as
        described in section 5.7.13 "ES10b.AuthenticateServer".
       Verify that the transactionId is known and relates to an ongoing RSP session.
       Verify that the serverChallenge attached to the ongoing RSP session matches the
        serverChallenge returned by the eUICC.

If any of these verifications fail, the SM-DS SHALL return a 'Function execution status'
indicating 'Failed' with the relevant status code.

Otherwise the SM-DS SHALL retrieve and return the Event ID and RSP Server address
pair(s) for the requesting eUICC depending on the content of the received ctxParams1:

       If ctxParamsForCommonAuthentication contains no matchingId data object or
        an empty value for matchingId, the SM-DS SHALL retrieve and return a list of Event
        ID and RSP Server address pairs corresponding to the EID. This list MAY be empty.
       If ctxParamsForCommonAuthentication contains a matchingId data object with
        an eventId value, the SM-DS SHALL retrieve and return the pair of the Event ID
        (corresponding to EventID1 described in section 3.6.1.2) and RSP Server address
        corresponding to the EID and eventId value. If no Event Record identified by the EID
        and eventId exist, the specific error (8.9.5-Event Record, 3.9-Unknown) SHALL be
        returned.

The SM-DS MAY perform additional operations, which are out of scope of this specification.

This function SHALL return one of the following:

       A 'Function execution status' with 'Executed-Success' indicating that Event Retrieval
        has been successfully executed.


V2.4                                                                           Page 212 of 275
GSM Association                                                                            Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

        A 'Function execution status' indicating 'Failed' with a status code as defined in
         section 5.2.6 or a specific status code as defined in the following table.

Additional Input Data:

Input data name                   Description                                     Type                No. MOC
                                  Transaction ID as generated by the
transactionId                                                                     Binary[1-16]        1   M
                                  SM-DS (section 3.1.2).
                                                                                  Authenticate
authenticateServerResponse Defined in section 5.7.13.                                            1        M
                                                                                  ServerResponse

                      Table 49: AuthenticateClient Additional Input Data

Additional Output Data:

Output data name                  Description                                   Type                  No. MOC
                                  Transaction ID as generated by the SM-
transactionID                                                                   Binary[1-16]       1      M
                                  DS (section 3.1.2).
                                  The list of Event ID and RSP Server
eventEntries                                                                    EVENT_ENTRY        0..N   M
                                  address pair(s) for the EID.

                      Table 50: AuthenticateClient Additional Output Data

The EVENT_ENTRY type is defined by the following data structure:

Data name                 Description                                             Type      No. MOC
eventId                   Identification of the Event.                            String    1     M
                          RSP Server address where the operation
rspServerAddress                                                                  FQDN      1     M
                          corresponding to the Event can be processed.

                                       Table 51: EVENT_ENTRY

Specific Status Codes

Subject                     Reason
            Subject                     Reason                Description
Code                        code
            EUM
8.1.2                       6.1         Verification Failed   Certificate is invalid.
            Certificate
            EUM
8.1.2                       6.3         Expired               Certificate has expired.
            Certificate
            eUICC
8.1.3                       6.1         Verification Failed   Certificate is invalid.
            Certificate
            eUICC
8.1.3                       6.3         Expired               Certificate has expired.
            Certificate
                                                              eUICC signature is invalid or
8.1         eUICC           6.1         Verification Failed
                                                              serverChallenge is invalid.
                                                              The RSP session identified by the
8.10.1      TransactionId 3.9           Unknown
                                                              TransactionID is unknown.
                                                              Unknown CI Public Key. The CI used by the
8.11.1      CI Public Key 3.9           Unknown               EUM Certificate is not a trusted root for the
                                                              SM-DS.



V2.4                                                                                       Page 213 of 275
GSM Association                                                                    Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

                                                         No Event identified by the Event ID for the
8.9.5        Event Record 3.9         Unknown
                                                         EID exists.

                      Table 52: AuthenticateClient specific Status Codes

5.9       ES12 (SM-DS -- SM-DP+)
The ES12 is used by the SM-DP+ to manage Event registration.


                          SM-DP+                               (Alternative
                                                                 or Root)
                                                                  SM-DS


                                              ES12




                                          Figure 39: ES12

The SM-DP+ communicates with the SM-DS through a secure connection, by establishing a
TLS connection with mutual authentication using CERT.DP.TLS and CERT.DS.TLS.
Additional details about security requested on this interface and the level of data encryption
are defined in section 2.6 and GSMA SAS SM specification [23].

5.9.1      Function: RegisterEvent
Related Procedures: Event Registration

Function Provider Entity: SM-DS (Alternative SM-DS or Root SM-DS)

Description:

This function registers an Event Record in the SM-DS (an Alternative SM-DS or a Root SM-
DS).

The function caller MAY require that the Event registration is cascaded to the Root SM-DS
using the input data ‘forwardingIndicator’. The Root SM-DS SHALL ignore this input
data.

On reception of this function call, the SM-DS SHALL:

         Verify that the EventID is not already used by the function caller

If any of these verifications fail, the SM-DS SHALL return a 'Function execution status'
indicating 'Failed' with the relevant status code.

Otherwise the SM-DS SHALL:

         Store the received Event Record, consisting of the EID, the RSP Server address and
          the EventID, all provided as function input data, together with the function caller
          identity (either an SM-DP+ or an SM-DS OID) received in the TLS Certificate.


V2.4                                                                               Page 214 of 275
GSM Association                                                                        Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

         If required (forwardingIndicator input data set to 'true'), and if the function
          provider is an Alternative SM-DS, cascade the Event registration to the Root-SM-DS
          by calling the "ES15.RegisterEvent" with the relevant input data:

                 o Same EID value.
                 o Its own SM-DS address to be used for Event retrieval.
                 o Its own generated Event ID corresponding to this incoming registration
                   Event.

If registration cascading fails the SM-DS SHALL delete the locally stored Event Record and
return a function execution status 'Failed' with the relevant status code.

The SM-DS MAY perform additional verifications and operations, which are out of scope of
this specification.

This function SHALL return one of the following:

         A 'Function execution status' with 'Executed-Success' indicating that the Event has
          been registered (and cascaded if required).
         A 'Function execution status' indicating 'Failed' with a status code as defined in
          section 5.2.6 or a specific status code as defined in the following table.

Additional Input Data:

Input data name        Description                                           Type              No. MOC
eid                    Identification of the targeted eUICC.                 EID                1     M

                       RSP Server address where the operation
rspServerAddress       corresponding to the registered Event can be          FQDN               1     M
                       executed.
eventId                Identification of the Event. The EventID SHALL be     String             1     M
                       unique in the context of the function caller.
forwardingIndicator    Indicates if the registration has to be made to the   Boolean            1     M
                       Root SM-DS. The Root SM-SD SHALL ignore this
                       input data.

                        Table 53: RegisterEvent Additional Input Data

Additional Output Data:

No additional output data.

Specific Status Codes

Subject                   Reason
             Subject                 Reason                Description
Code                      code
                                                           The Event Record already exist in the SM-DS
8.9.5        Event record 3.3        Already in use
                                                           (EventID duplicated).
                                                           The cascade SM-DS registration has failed.
8.9          SM-DS        5.1        Inaccessible
                                                           Root SM-DS was unavailable.



V2.4                                                                                   Page 215 of 275
GSM Association                                                                 Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

                                                       The cascade SM-DS registration has failed.
8.9          SM-DS       4.2      Execution error
                                                       Root SM-DS has raised an error.

                       Table 54: RegisterEvent specific status codes

5.9.2       Function: DeleteEvent
Related Procedures: Event Deletion

Function Provider Entity: SM-DS

Description:

This function deletes an Event Record in the SM-DS (an Alternative SM-DS or a Root SM-
DS).

On reception of this function call, the SM-DS SHALL:

       Retrieve the Event Record corresponding to the provided Event ID and the function
        caller identity (SM-DP+ or SM-DS OID) received in the TLS Certificate.

If any of these verifications fail, the SM-DS SHALL return a 'Function execution status'
indicating 'Failed' with the relevant status code.

Otherwise the SM-DS SHALL:

       Determine if the Event Record registration has been cascaded to the Root SM-DS.
       If the Event Record registration was not cascaded, then the SM-DS SHALL delete the
        retrieved Event Record.
       If the Event Record registration was cascaded, then

             the SM-DS SHALL cascade the deletion of the Event Record to the Root SM-DS
             by calling the "ES15.DeleteEvent" with the Event ID value generated by the SM-
             DS during Event Record registration.
            If deletion cascading fails:

                o because the Event record was not found, the SM-DS SHALL ignore this
                  error case and continue.
                o for any reason, the SM-DS SHALL return a function execution status
                  'Failed' with the relevant status code.

       If deletion cascading has succeeded, the SM-DS SHALL delete the retrieved Event
        Record.

The SM-DS MAY perform additional verifications and operations, which are out of scope of
this specification.

This function SHALL return one of the following:

       A 'Function execution status' with 'Executed-Success' indicating that the Event has
        been deleted (and cascaded if required).
       A 'Function execution status' indicating 'Failed' with a status code as defined in
        section 5.2.6 or a specific status code as defined in the following table.

V2.4                                                                            Page 216 of 275
GSM Association                                                                    Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

Additional Input Data:

Input data name Description                                               Type             No. MOC
eid                  Identification of the targeted eUICC.                EID               1       M
eventId              Identification of the Event. The EventID SHALL be    String            1       M
                     unique in the context of the function caller.

                        Table 55: DeleteEvent Additional Input Data

Additional Output Data:

No additional output data

Specific Status Codes

Subject                  Reason
           Subject                   Reason              Description
Code                     code
           Event
8.9.5                    3.9         Unknown             The targeted Event Record doesn’t exist.
           Record
                                                         The cascade SM-DS deletion has failed. Root
8.9        SM-DS         5.1         Inaccessible
                                                         SM-DS was unavailable.
                                                         The cascade SM-DS deletion has failed. Root
8.9        SM-DS         4.2         Execution error
                                                         SM-DS has raised an error.

                       Table 56: DeleteEvent specific Status Codes

5.10 ES15 (SM-DS -- SM-DS)
This interface is a particular case of the ES12 interface where an Alternative SM-DS is
communicating to the Root SM-DS to manage the cascading of Events. This interface is
functionally identical to ES12.

                     (Alternative)                              (Root)
                        SM-DS                                   SM-DS



                                              ES15




                                          Figure 40: ES15

The Alternative SM-DS and the Root SM-DS communicate through a secure connection, by
establishing a TLS connection with mutual authentication using their CERT.DS.TLS.
Additional details about security requested on this interface and the level of data encryption
are defined in section 2.6 and GSMA SAS SM specification [23].

5.10.1    Function: RegisterEvent
Related Procedures: Event Registration


V2.4                                                                               Page 217 of 275
GSM Association                                                              Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

Function Provider Entity: (Root) SM-DS

Description:

This function is identical to "ES12.RegisterEvent".

5.10.2   Function: DeleteEvent
Related Procedures: Event Deletion

Function Provider Entity: (Root) SM-DS

Description:

This function is identical to "ES12.DeleteEvent".

5.11 LUI in the eUICC (LUIe)
The implementation of the LUIe does not require an RSP-specific interface between the
eUICC and the device.

A Device supporting LUIe SHALL support one of the generic mechanisms defined in this
section.

   NOTE:        DeviceCapabilities MAY be empty if provided by the LPAe.

5.11.1   LUIe using CAT
In order to support this option, the Device SHALL support at least the CAT mechanisms
defined in Annex C.4.

5.11.2   LUIe using SCWS
In order to support this option, the Device SHALL support at least the CAT mechanisms
defined in Annex C.4.

In addition, the eUICC and the Device SHALL support the Smartcard Web Server as defined
in [7].


6 Interface binding over HTTP
This section defines how to use HTTP/1.1, defined in RFC 2616 [48], and TLS, defined in
RFC 5246 [16], as the transport layer to exchange ES2+, ES9+, ES11, ES12, and ES15
function requests and responses.

On ES9+ and ES11, the LPA always acts as an HTTP client and is in charge of managing
the connection establishment to the RSP Server. The LPA SHALL use either JSON binding
defined in section 6.5 or ASN.1 binding defined in section 6.6. The LPAe SHALL exchange
the HTTPS POST requests and responses defined in this section using BIP over TCP.

On ES2+, ES12, and ES15 any RSP Server MAY act as an HTTP client or an HTTP server.
JSON binding defined in section 6.5 SHALL be used.

In case of communication failure, the HTTP client is responsible for retry and reconnection
management.

V2.4                                                                         Page 218 of 275
GSM Association                                                                Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

6.1       TLS Security
Transport Layer Security (TLS) secures the messages exchanged between a function
requester and function provider. TLS SHALL be used with mutual authentication on ES2+,
ES12, and ES15. TLS SHALL be used with server authentication on ES9+ and ES11.

This specification mandates usage of TLS v1.2 defined in RFC 5246 [16] to allow
appropriate algorithm and key length.

6.1.1      Identification/Authentication/Authorisation
If applicable on the interface, authentication of the sending party of a JSON message SHALL
rely on the Transport layer security (using TLS certificate of the sending party).

6.1.2      Integrity
The integrity of the message SHALL exclusively rely on the Transport Layer Security (TLS).

6.1.3      Confidentiality
The confidentiality of the message SHALL exclusively rely on the Transport Layer Security
(TLS).

6.2       HTTP request and response
An HTTP POST request SHALL be used to transport a single function execution request.
The corresponding function execution response SHALL be returned as defined in SGP.02
[02] depending on the used Message Exchange Pattern (MEP).

This specification uses the following MEPs:

         Synchronous Request-Response: the request payload SHALL be sent in the HTTP
          POST request, and the function execution response SHALL be returned in the HTTP
          POST response.
         Notification: the notification payload SHALL be sent in the HTTP POST request and
          the HTTP POST response body SHALL be empty.


NOTE:         Following common practice in the Internet, Devices typically convert the FQDN
              contained in the Activation Code to lowercase when providing it in the SNI
              (Server Name Indication) extension of TLS and in the "Host" header field of the
              HTTP POST request. However, the Devices are not mandated to perform this
              conversion. Therefore, an issue may occur if the SM-DP+ or SM-DS does not
              perform a case-insensitive comparison.

HTTP POST request for ES9+ and ES11 SHALL contain a "User-Agent" header field as
defined hereunder:

          User-Agent: <User Agent>
where <User Agent> is either gsma-rsp-lpad or gsma-rsp-lpae. The "User-Agent" field
MAY contain additional information after a semicolon.




V2.4                                                                          Page 219 of 275
GSM Association                                                                Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

HTTP POST request and response SHALL contain an "X-Admin-Protocol" header field as
defined hereunder:

          Admin-Protocol: gsma/rsp/v<x.y.z>
Where:
<x.y.z> indicates the highest version of SGP.22 [This document] supported by the sender.
When the sender is the Device, this indicates the highest version supported by the LPA.

HTTP POST request and response SHALL contain a "Content-type" header field to
indicate the nature of the binding. A JSON binding SHALL be indicated by the value
"application/json". An ASN-1 binding SHALL be indicated by the value
"application/x-gsma-rsp-asn1". The "Content-type" header field of an HTTP response
SHOULD NOT be set when the body is empty (e.g. case of notification function response). If
present, it SHALL be ignored.

HTTP POST request and response MAY contain additional header fields. Their use is out of
scope of this specification.

6.3       HTTP response status codes
Standard HTTP status codes SHALL apply to this section.

Status codes '1xx' (Information), '3xx' (Redirection), '4xx' (HTTP client error) and '5xx' (HTTP
server error) MAY be used by the RSP Server (i.e. the HTTP server).

The retry policy for HTTP request answered with status codes '4xx' and '5xx' is out of scope
of this specification.

A normal request-response function execution status (MEP Synchronous request-response)
SHALL be indicated by the HTTP status code '200' (OK) in the HTTP response, regardless
whether the function response is an error or a success, as defined in SGP.02 [02].

A normal notification function execution status (MEP Notification) SHALL be indicated by the
HTTP status code '204' (No Content) with an empty HTTP response body as defined in
SGP.02 [02].

Other status codes '2xx' SHALL not be used by the RSP Server.

6.4       Secure Channel Set-Up on ES2+
The process of setting up secure channel is out of scope of this document. This process
includes the exchange of the following information:

         Function requester and Function provider OIDs and identity SHALL be registered to
          GSMA Policy Authority and respective values have been communicated to each
          party.
         Function requester and Function provider URL SHALL have been communicated to
          each party.
         Function requester and Function provider parties’ trust SHALL have been established
          on an X-509 certificate chain basis.




V2.4                                                                           Page 220 of 275
GSM Association                                                              Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

6.5       Function Binding in JSON
JSON (JavaScript Object Notation) is a lightweight data-interchange format. It is based on a
subset of the JavaScript Programming Language. JSON is a text format that is completely
language independent.

Only the characters that are mandatory to escape (Quotation mark, reverse solidus, and the
control characters) SHALL be escaped in a JSON string value as specified in RFC 7159 [68]
section 7. Other characters SHALL NOT be escaped.

6.5.1      JSON message definition
The Function requester and the Function Provider SHALL exchange the JSON objects in
HTTP messages as follows.

         HTTP Request SHALL have the following format.

HTTP POST <HTTP Path> HTTP/1.1
Host: <Server Address>
User-Agent: <User Agent>
X-Admin-Protocol: gsma/rsp/v<x.y.z>
Content-Type: application/json
Content-Length: <Length of the JSON requestMessage>

<JSON requestMessage>


The <HTTP Path> is used to indicate which function execution is requested by the HTTP
client. The list of defined <HTTP Path> are described in section 6.5.2.

         HTTP Response SHALL have the following format.

HTTP/1.1 <HTTP Status Code>
X-Admin-Protocol: gsma/rsp/v<x.y.z>
Content-Type: application/json
Content-Length: <Length of the JSON responseMessage>

<JSON responseMessage>


6.5.1.1      Definition of <JSON requestMessage>
<JSON requestMessage> is the combination of:

         <JSON requestHeader>
         <JSON body> which depends on the function called

HTTP messages for ES9+ and ES11 SHALL not contain the <JSON requestHeader>.

6.5.1.2      Definition of <JSON responseMessage>
<JSON responseMessage> is the combination of:

         <JSON responseHeader>
         <JSON body> which depends on the function called



V2.4                                                                        Page 221 of 275
GSM Association                                                       Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

The HTTP POST response body SHALL be empty for MEP notification message (see
section 6.3).

6.5.1.3    Definition of <JSON requestHeader>
The <JSON requestHeader> maps the function input header.

{
    "header" : {
       "type" : "object",
       "properties" : {
          "functionRequesterIdentifier" : {
             "type" : "string",
             "description" : "identification of the function requester"
          },
          "functionCallIdentifier" : {
             "type" : "string",
             "description" : "identification of the function call"
          }
       },
       "required" : ["functionRequesterIdentifier", "functionCallIdentifier"]
    }
}


6.5.1.4    Definition of <JSON responseHeader>
The <JSON responseHeader> maps the function output header.

{
   "header" : {
      "type" : "object",
      "properties" : {
         "functionExecutionStatus" : {
            "type" : "object",
            "description" : "Whether the function has been processed correctly or
not"
            "properties" : {
               "status" : {
                  "type" : "string",
                  "description" : " Executed-Success, Executed-WithWarning, Failed,
Expired"
               },
               "statusCodeData" : {
                  "type" : "object",
                  "properties" : {
                     "subjectCode" : {
                        "type" : "string",
                        "description" : "OID of the subject code"
                     },
                     "reasonCode" : {
                        "type" : "string",
                        "description" : "OID of the reason code"
                     },
                     "subjectIdentifier" : {
                        "type" : "string",
                        "description" : "Identifier of the subject "
                     },
                     "message" : {


V2.4                                                                 Page 222 of 275
GSM Association                                                                       Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

                            "type" : "string",
                            "description" : "Textual and human readable explanation"
                        }
                     },
                     "required" : ["subjectCode", "reasonCode"]
                 },
              },
              "required" : ["status"]
            }
         },
         "required" : ["functionExecutionStatus"]
     }
}



6.5.2      List of functions
           Function                       Path                                                    MEP
    ES2+   DownloadOrder                  /gsma/rsp2/es2plus/downloadOrder                        Synchronous
           ConfirmOrder                   /gsma/rsp2/es2plus/confirmOrder                         Synchronous
           CancelOrder                    /gsma/rsp2/es2plus/cancelOrder                          Synchronous
           ReleaseProfile                 /gsma/rsp2/es2plus/releaseProfile                       Synchronous
           HandleDownloadProgressInfo     /gsma/rsp2/es2plus/handleDownloadProgressInfo           Notification
    ES9+   InitiateAuthentication         /gsma/rsp2/es9plus/initiateAuthentication               Synchronous
           AuthenticateClient             /gsma/rsp2/es9plus/authenticateClient                   Synchronous
           GetBoundProfilePackage         /gsma/rsp2/es9plus/getBoundProfilePackage               Synchronous
           HandleNotification             /gsma/rsp2/es9plus/handleNotification                   Notification
           CancelSession                  /gsma/rsp2/es9plus/cancelSession                        Synchronous
    ES11   InitiateAuthentication         [As ES9+]                                               [As ES9+]
           AuthenticateClient             [As ES9+]                                               [As ES9+]
    ES12   RegisterEvent                  /gsma/rsp2/es12/registerEvent                           Synchronous
           DeleteEvent                    /gsma/rsp2/es12/deleteEvent                             Synchronous
    ES15   RegisterEvent                  [As ES12]                                               [As ES12]
           DeleteEvent                    [As ES12]                                               [As ES12]

                                    Table 57: List of Functions

6.5.2.1       "ES2+.DownloadOrder" Function
Hereunder is the definition of the JSON schema for the <JSON body> part of the <JSON
requestMessage> corresponding to the "ES2+.DownloadOrder" function:

{
     "type" : "object",
     "properties" : {
        "eid" : {
           "type" : "string",
           "pattern" : "^[0-9]{32}$",
           "description" : "EID as desc in section 4.3.1"
        },
        "iccid" : {
           "type" : "string",
           "pattern" : "^[0-9]{19}[0-9F]?$",

V2.4                                                                                  Page 223 of 275
GSM Association                                                          Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

           "description" : "ICCID as described in section 5.2.1"
        },
        "profileType" : {
           "type" : "string",
           "description" : "content free information defined by the Operator"
        }
    }
}


Hereunder is the definition of the JSON schema for the <JSON body> part of the <JSON
responseMessage> corresponding to the "ES2+.DownloadOrder" function:

{
    "type" : "object",
    "properties" : {
       "iccid" : {
          "type" : "string",
          "pattern" : "^[0-9]{19}[0-9F]?$",
          "description" : "ICCID as described in section 5.2.1"
       }
    },
    "required" : ["iccid"]
}

6.5.2.2     "ES2+.ConfirmOrder" Function
Hereunder is the definition of the JSON schema for the <JSON body> part of the <JSON
requestMessage> corresponding to the "ES2+.ConfirmOrder" function:

{
    "type" : "object",
    "properties" : {
       "iccid" : {
          "type" : "string",
          "pattern" : "^[0-9]{19}[0-9F]?$",
          "description" : "ICCID as described in section 5.2.1"
       },
       "eid" : {
          "type" : "string",
          "pattern" : "^[0-9]{32}$",
          "description" : "EID as desc in section 4.3.1
       },
       "matchingId" : {
          "type" : "string",
          "description" : "as defined in section {5.3.2}"
       },
       "confirmationCode" : {
          "type" : "string",
          "description" : "as defined in section {5.3.2}"
       },
       "smdsAddress" : {
          "type" : "string",
          "description" : "as defined in section {5.3.2}"
       },
       "releaseFlag" : {
          "type" : "boolean",
          "description" : "as defined in section {5.3.2}"
       }

V2.4                                                                    Page 224 of 275
GSM Association                                                          Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

    },
    "required" : ["iccid", "releaseFlag"]
}


Hereunder is the definition of the JSON schema for the <JSON body> part of the <JSON
responseMessage> corresponding to the "ES2+.ConfirmOrder" function:

{
    "type" : "object",
    "properties" : {
       "eid" : {
          "type" : "string",
          "pattern" : "^[0-9]{32}$",
          "description" : "EID as desc in section 4.3.1"
       },
       "matchingId" : {
          "type" : "string",
          "description" : "as defined in section {5.3.2}"
       },
       "smdpAddress" : {
          "type" : "string",
          "description" : "as defined in section {5.3.2}"
       }
    },
    "required" : []
}

6.5.2.3    "ES2+.CancelOrder" Function
Hereunder is the definition of the JSON schema for the <JSON body> part of the <JSON
requestMessage> corresponding to the "ES2+.CancelOrder" function:

{
    "type" : "object",
    "properties" : {
       "iccid" : {
          "type" : "string",
          "pattern" : "^[0-9]{19}[0-9F]?$",
          "description" : "ICCID as described in section 5.2.1"
       },
       "eid" : {
          "type" : "string",
          "pattern" : "^[0-9]{32}$",
          "description" : "EID as desc in section 4.3.1"
       },
       "matchingId" : {
          "type" : "string",
          "description" : "as defined in section {5.3.2}"
       },
       "finalProfileStatusIndicator" : {
          "type" : "string",
          "description" : "as defined in section {5.3.4}"
       }
    },
    "required" : ["iccid"]
}




V2.4                                                                    Page 225 of 275
GSM Association                                                          Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

6.5.2.4    "ES2+.ReleaseProfile" Function
Hereunder is the definition of the JSON schema for the <JSON body> part of the <JSON
requestMessage> corresponding to the "ES2+.ReleaseProfile" function:

{
    "type" : "object",
    "properties" : {
       "iccid" : {
          "type" : "string",
          "pattern" : "^[0-9]{19}[0-9F]?$",
          "description" : "ICCID as described in section 5.2.1"
          },
    "required" : ["iccid"]
    }
}

6.5.2.5    "ES2+.HandleDownloadProgressInfo" Function
Hereunder is the definition of the JSON schema for the <JSON body> part of the <JSON
requestMessage> corresponding to the "ES2+.HandleDownloadProgressInfo" function:

{
   "type" : "object",
   "properties" : {
      "eid" : {
         "type" : "string",
         "pattern" : "^[0-9]{32}$",
         "description" : "EID as described in section 4.3.1"
      },
      "iccid" : {
         "type" : "string",
         "pattern" : "^[0-9]{19}[0-9F]?$",
         "description" : "ICCID as described in section 5.2.1"
      },
      "profileType" : {
         "type" : "string",
         "description" : "Content free information defined by the Operator
(e.g.'P9054-2')"
      },
      "timestamp" : {
         "type" : "string",
         "pattern" : "$[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-
9]{2}(Z|([+|\-][0-9]{2}:[0-9]{2}))$",
         "description" : "String format as specified by W3C: YYYY-MM-DDThh:mm:ssTZD
(E.g. 2001-12-17T09:30:47Z)"
      },
      "notificationPointId" : {
         "type" : "integer",
         "description" : "Identification of the step reached in the procedure"
      },
      "notificationPointStatus" : {
         "type" : "object",
         "description" : "ExecutionStatus Common Data Type"
         "properties" : {
            "status" : {
               "type" : "string",
               "description" : "Executed-Success, Executed-WithWarning, Failed or
Expired"


V2.4                                                                    Page 226 of 275
GSM Association                                                          Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

            },
            "statusCodeData" : {
               "type" : "object",
               "properties" : {
                  "subjectCode" : {
                     "type" : "string",
                     "description" : "OID of the subject code"
                  },
                  "reasonCode" : {
                     "type" : "string",
                     "description" : "OID of the reason code"
                  },
                  "subjectIdentifier" : {
                     "type" : "string",
                     "description" : "Identifier of the subject"
                  },
                  "message" : {
                     "type" : "string",
                     "description" : "Textual and human readable explanation"
                  }
               },
               "required" : ["subjectCode", "reasonCode"]
            },
          },
          "required" : ["status"]
      },
      "resultData" : {
         "type" : "string",
         "format" : "base64",
         "description" : "base64 encoded binary data containing the Result data
contained in the ProfileInstallationResult"
      }
   },
   "required" : ["iccid", "profileType", "timestamp", "notificationPointId",
"notificationPointStatus"]
}

6.5.2.6     "ES9+.InitiateAuthentication" Function
Hereunder is the definition of the JSON schema for the <JSON body> part of the <JSON
requestMessage> corresponding to the "ES9+.InitiateAuthentication" function:

{
   "type" : "object",
   "properties" : {
      "euiccChallenge" : {
         "type" : "string",
         "format" : "base64",
         "description" : "base64 encoded binary data containing eUICC Challenge
defined in Section 5.6.1"
      },
      "euiccInfo1" : {
         "type" : "string",
         "format" : "base64",
         "description" : "base64 encoded binary data containing euiccinfo1 defined
in Section 5.6.1"
      },
      "smdpAddress" : {
         "type" : "string",


V2.4                                                                    Page 227 of 275
GSM Association                                                           Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

           "description" : "SM-DP+ Address as defined in Section 5.6.1"
       }
    },
    "required" : ["euiccChallenge", "euiccInfo1", "smdpAddress"]
}


Hereunder is the definition of the JSON schema for the <JSON body> part of the <JSON
responseMessage> corresponding to the "ES9+.InitiateAuthentication" function:

{
   "type" : "object",
   "properties" : {
      "transactionId" : {
         "type" : "string",
         "pattern" : "^[0-9,A-F]{2,32}$",
         "description" : "Hexadecimal representation of the TransactionID defined
in Section 5.6.1"
      },
      "serverSigned1" : {
         "type" : "string",
         "format" : "base64",
         "description" : "The data object as required by ES10b.AuthenticateServer"
      },
      "serverSignature1" : {
         "type" : "string",
         "format" : "base64",
         "description" : "The signature as required by ES10b.AuthenticateServer"
      },
      "euiccCiPKIdToBeUsed" : {
         "type" : "string",
         "format" : "base64",
         "description" : "The CI Public Key to be used as required by
ES10b.AuthenticateServer"
      },
      "serverCertificate" : {
         "type" : "string",
         "format" : "base64",
         "description" : "The server Certificate as required by
ES10b.AuthenticateServer"
      }
   },
   "required" : ["transactionId", "serverSigned1", "serverSignature1",
"euiccCiPKIdToBeUsed", "serverCertificate"]
}


    NOTE:        LPA is in charge of transcoding the transactionId.

6.5.2.7      "ES9+.GetBoundProfilePackage" Function
Hereunder is the definition of the JSON schema for the <JSON body> part of the <JSON
requestMessage> corresponding to the "ES9+.GetBoundProfilePackage" function:

{
    "type" : "object",
    "properties" : {
       "transactionId" : {


V2.4                                                                      Page 228 of 275
GSM Association                                                          Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

         "type" : "string",
         "pattern" : "^[0-9,A-F]{2,32}$",
         "description" : "Hexadecimal representation of the TransactionID defined
in Section 5.6.2"
      },
      "prepareDownloadResponse" : {
         "type" : "string",
         "format" : "base64",
         "description" : "base64 encoded binary data containing
PrepareDownloadResponse defined in Section 5.6.2"
      }
   },
   "required" : ["transactionId", "prepareDownloadResponse"]
}


Hereunder is the definition of the JSON schema for the <JSON body> part of the <JSON
responseMessage> corresponding to the "ES9+.GetBoundProfilePackage" function:

{
   "type" : "object",
   "properties" : {
      "transactionId" : {
         "type" : "string",
         "pattern" : "^[0-9,A-F]{2,32}$",
         "description" : "Hexadecimal representation of the TransactionID defined
in Section 5.6.2"
      },
      "boundProfilePackage" : {
         "type" : "string",
         "format" : "base64",
         "description" : "base64 encoded binary data containing Bound Profile
Package defined in Section 5.6.2"
      }
   },
   "required" : ["transactionId", "boundProfilePackage"]
}

6.5.2.8    "ES9+.AuthenticateClient" Function
Hereunder is the definition of the JSON schema for the <JSON body> part of the <JSON
requestMessage> corresponding to the "ES9+.AuthenticateClient" function:

{
   "type" : "object",
   "properties" : {
      "transactionId" : {
         "type" : "string",
         "pattern" : "^[0-9,A-F]{2,32}$",
         "description" : "Hexadecimal representation of the TransactionID defined
in Section 5.6.3"
      },
      "authenticateServerResponse" : {
         "type" : "string",
         "format" : "base64",
         "description" : "base64 encoded binary data containing
AuthenticateServerResponse defined in Section 5.6.3"
      }
   },

V2.4                                                                    Page 229 of 275
GSM Association                                                          Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

    "required" : ["transactionId", "authenticateServerResponse"]
}


Hereunder is the definition of the JSON schema for the <JSON body> part of the <JSON
responseMessage> corresponding to the "ES9+.AuthenticateClient" function:

{
   "type" : "object",
   "properties" : {
      "transactionId" : {
         "type" : "string",
         "pattern" : "^[0-9,A-F]{2,32}$",
         "description" : "Hexadecimal representation of the TransactionID defined
in Section 5.6.3"
      },
      "profileMetadata" : {
         "type" : "string",
         "format" : "base64",
         "description" : " base64 encoded binary data containing
StoreMetadataRequest defined in section 5.5.3",
      },
      "smdpSigned2" : {
         "type" : "string",
         "format" : "base64",
         "description" : "SmdpSigned2 encoded data object"
      },
      "smdpSignature2" : {
         "type" : "string",
         "format" : "base64",
         "description" : "SM-DP+ signature as defined in ES10b.PrepareDownload"
      },
      "smdpCertificate" : {
         "type" : "string",
         "format" : "base64",
         "description" : "The Certificate as required by ES10b.PrepareDownload"
      } },
   "required" : ["transactionId", "profileMetadata", " smdpSigned2",
"smdpSignature2", "smdpCertificate"]
}


Depending on the targeted RSP Server (SM-DP+ or SM-DS) the response MAY be a
<JSON body> corresponding to "ES9+.AuthenticateClient" or "ES11.AuthenticateClient"
function.

6.5.2.9    "ES9+.HandleNotification" Function
Hereunder is the definition of the JSON schema for the <JSON body> part of the <JSON
requestMessage> corresponding to the "ES9+.HandleNotification" function.

{
    "type" : "object",
    "properties" : {
       "pendingNotification" : {
          "type" : "string",
          "format" : "base64",



V2.4                                                                    Page 230 of 275
GSM Association                                                             Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

        "description" : "base64 encoded binary data containing the
PendingNotification defined in section 5.7.10"
      }
   },
   "required" : ["pendingNotification"]
}


6.5.2.10   "ES9+.CancelSession" Function
Hereunder is the definition of the JSON schema for the <JSON body> part of the <JSON
requestMessage> corresponding to the "ES9+.CancelSession" function:

{
   "type" : "object",
   "properties" : {
      "transactionId" : {
         "type" : "string",
         "pattern" : "^[0-9,A-F]{2,32}$",
         "description" : "Hexadecimal representation of the TransactionID defined
in Section 5.6.5"
      },
      "cancelSessionResponse" : {
         "type" : "string",
         "format" : "base64",
         "description" : "base64 encoded binary data containing
CancelSessionResponse data object defined in Section 5.7.14"
      }
   },
   "required" : ["transactionId", "cancelSessionResponse"]
}


The "ES9+.CancelSession" function has no <JSON body> part of the <JSON
responseMessage>.

6.5.2.11   "ES11.InitiateAuthentication" Function
The <JSON body> part of the <JSON requestMessage> and <JSON body> part of the
<JSON responseMessage> corresponding to the "ES11.InitiateAuthentication" function is
identical to the one defined for the "ES9+.InitiateAuthentication" function.

6.5.2.12   "ES11.AuthenticateClient" Function
The <JSON body> part of the <JSON requestMessage> corresponding to the
"ES11.AuthenticateClient" function is identical to the one defined for the
"ES9+.AuthenticateClient" function. Hereunder is the definition of the JSON schema for the
<JSON body> part of the <JSON responseMessage> corresponding to the
"ES11.AuthenticateClient" function:

{
   "type" : "object",
   "properties" : {
      "transactionId" : {
         "type" : "string",
         "pattern" : "^[0-9,A-F]{2,32}$",
         "description" : "Hexadecimal representation of the TransactionID, see
Section 5.8.2"

V2.4                                                                       Page 231 of 275
GSM Association                                                          Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

       },
       "eventEntries" : {
          "type" : "array",
          "items" : {
             "type" : "object",
             "description" : "data containing Event-Entry, see section 5.8.2",
             "properties" : {
                "eventId" : {
                   "type" : "string",
                   "description" : "Identification of the event"
                },
                "rspServerAddress" : {
                   "type" : "string",
                   "description" : "RSP Server address where the event can be found"
                }
             },
             "required" : ["eventId", "rspServerAddress"]
          }
       }
    },
    "required" : ["transactionId", "eventEntries"]
}


Depending on the targeted RSP Server (SM-DP+ or SM-DS) the response MAY be a
<JSON body> corresponding to "ES9+.AuthenticateClient" or "ES11.AuthenticateClient"
function.

6.5.2.13   "ES12.RegisterEvent" Function
Hereunder is the definition of the JSON schema for the <JSON body> part of the <JSON
requestMessage> corresponding to the "ES12.RegisterEvent" function:

{
    "type" : "object",
    "properties" : {
       "eid" : {
          "type" : "string",
          "pattern" : "^[0-9]{32}$",
          "description" : "EID as desc section 4.3.1"
       },
       "rspServerAddress" : {
          "type" : "string",
          "description" : "as defined in section 5.9.1"
       },
       "eventId" : {
          "type" : "string",
          "description" : "as defined in section 5.9.1"
       },
       "forwardingIndicator" : {
          "type" : "boolean",
          "description" : "as defined in section 5.9.1"
       }
    },
    "required" : ["eid", "rspServerAddress", "eventId", "forwardingIndicator"]
}




V2.4                                                                    Page 232 of 275
GSM Association                                                          Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

This function has no <JSON body> part of the <JSON responseMessage>.



6.5.2.14         "ES12.DeleteEvent" Function
Hereunder is the definition of the JSON schema for the <JSON body> part of the <JSON
requestMessage> corresponding to the "ES12.DeleteEvent" function:

{
    "type" : "object",
    "properties" : {
       "eid" : {
          "type" : "string",
          "pattern" : "^[0-9]{32}$",
          "description" : "EID as desc in section 4.3.1"
       },

          "eventId" : {
             "type" : "string",

               "description" : "as defined in section 5.9.2"
          }
    },
    "required" : ["eid", "eventId"]
}


This function has no <JSON body> part of the <JSON responseMessage>.

6.6       Function Binding in ASN.1

6.6.1          ASN.1 message definition
The Function requester and the Function Provider SHALL exchange the DER encoded
ASN.1 objects in HTTP messages as follows.

             HTTP Request SHALL have the following format.
HTTP POST gsma/rsp2/asn1 HTTP/1.1
Host: <Server Address>
User-Agent: <User Agent>
X-Admin-Protocol: gsma/rsp/v<x.y.z>
Content-Type: application/x-gsma-rsp-asn1
Content-Length: <Length of the ASN.1 RemoteProfileProvisioningRequest>

<ASN.1 RemoteProfileProvisioningRequest>



Any function execution request using ASN.1 binding SHALL be sent to the generic HTTP
path 'gsma/rsp2/asn1'.

The body part of the HTTP POST request SHALL contain one Remote Profile Provisioning
Request objects defined as follows:
RemoteProfileProvisioningRequest ::= [2] CHOICE { -- Tag 'A2'
   initiateAuthenticationRequest [57] InitiateAuthenticationRequest, -- Tag 'BF39'
   authenticateClientRequest [59] AuthenticateClientRequest, -- Tag 'BF3B'
   getBoundProfilePackageRequest [58] GetBoundProfilePackageRequest, -- Tag 'BF3A'


V2.4                                                                    Page 233 of 275
GSM Association                                                              Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

    cancelSessionRequestEs9 [65] CancelSessionRequestEs9, -- Tag 'BF41'
    handleNotification [61] HandleNotification -- tag 'BF3D'
}


HTTP Response SHALL have the following format:
HTTP/1.1 <HTTP Status Code>
X-Admin-Protocol: gsma/rsp/v<x.y.z>
Content-Type: application/x-gsma-rsp-asn1
Content-Length: <Length of the ASN.1 RemoteProfileProvisioningResponse>

<ASN.1 RemoteProfileProvisioningResponse>



The body part of the HTTP POST response SHALL contain one Remote Profile Provisioning
Response object defined as follows:
RemoteProfileProvisioningResponse ::= [2] CHOICE { -- Tag 'A2'
   initiateAuthenticationResponse [57] InitiateAuthenticationResponse, -- Tag
'BF39'
   authenticateClientResponseEs9 [59] AuthenticateClientResponseEs9, -- Tag 'BF3B'
   getBoundProfilePackageResponse [58] GetBoundProfilePackageResponse, -- Tag
'BF3A'
   cancelSessionResponseEs9 [65] CancelSessionResponseEs9, -- Tag 'BF41'
   authenticateClientResponseEs11 [64] AuthenticateClientResponseEs11 -- Tag 'BF40'
}

6.6.2     List of functions

6.6.2.1     "ES9+.InitiateAuthentication" Function
The "ES9+.InitiateAuthentication" request function is defined as follows:
InitiateAuthenticationRequest ::= [57] SEQUENCE { -- Tag 'BF39'
   euiccChallenge [1] Octet16, -- random eUICC challenge
   smdpAddress [3] UTF8String,
   euiccInfo1 EUICCInfo1
}



The "ES9+.InitiateAuthentication" response function is defined as follows:
InitiateAuthenticationResponse ::= [57] CHOICE { -- Tag 'BF39'
   initiateAuthenticationOk InitiateAuthenticationOkEs9,
   initiateAuthenticationError INTEGER {
      invalidDpAddress(1),
      euiccVersionNotSupportedByDp(2),
      ciPKIdNotSupported(3)
   }
}

InitiateAuthenticationOkEs9 ::= SEQUENCE {
   transactionId [0]TransactionId, -- The TransactionID generated by the SM-DP+
   serverSigned1 ServerSigned1, -- Signed information
   serverSignature1 [APPLICATION 55] OCTET STRING, -- Server Sign1, tag '5F37'
   euiccCiPKIdToBeUsed SubjectKeyIdentifier, -- The CI Public Key to be used as
required by ES10b.AuthenticateServer
   serverCertificate Certificate
}




V2.4                                                                         Page 234 of 275
GSM Association                                                               Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

6.6.2.2    "ES9+.AuthenticateClient" Function
The "ES9+.AuthenticateClient" request function is defined as follows:
AuthenticateClientRequest ::= [59] SEQUENCE { -- Tag 'BF3B'
   transactionId [0] TransactionId,
   authenticateServerResponse [56] AuthenticateServerResponse -- This is the
response from ES10b.AuthenticateServer
}



The "ES9+.AuthenticateClient" response function is defined as follows:
AuthenticateClientResponseEs9 ::= [59] CHOICE {          -- Tag 'BF3B'
   authenticateClientOk AuthenticateClientOk,
   authenticateClientError INTEGER {
      eumCertificateInvalid(1),
      eumCertificateExpired(2),
      euiccCertificateInvalid(3),
      euiccCertificateExpired(4),
      euiccSignatureInvalid(5),
      matchingIdRefused(6),
      eidMismatch(7),
      noEligibleProfile(8),
      ciPKUnknown(9),
      invalidTransactionId(10),
      insufficientMemory(11),
      undefinedError(127)
   }
}

AuthenticateClientOk ::= SEQUENCE {
   transactionId [0] TransactionId,
   profileMetaData [37] StoreMetadataRequest,
   smdpSigned2 SmdpSigned2, -- Signed information
   smdpSignature2 [APPLICATION 55] OCTET STRING,              -- tag '5F37'
   smdpCertificate Certificate    -- CERT.DPpb.ECDSA
}



6.6.2.3    "ES9+.GetBoundProfilePackage" Function
The "ES9+.GetBoundProfilePackage" request function is defined as follows:
GetBoundProfilePackageRequest ::= [58] SEQUENCE { -- Tag 'BF3A'
   transactionId [0] TransactionId,
   prepareDownloadResponse [33] PrepareDownloadResponse
}



The "ES9+.GetBoundProfilePackage" response function is defined as follows:
GetBoundProfilePackageResponse ::= [58] CHOICE { -- Tag 'BF3A'
   getBoundProfilePackageOk GetBoundProfilePackageOk,
   getBoundProfilePackageError INTEGER {
      euiccSignatureInvalid(1),
      confirmationCodeMissing(2),
      confirmationCodeRefused(3),
      confirmationCodeRetriesExceeded(4),
      bppRebindingRefused(5),
      downloadOrderExpired(6),
      invalidTransactionId(95),
      undefinedError(127)
   }
}


V2.4                                                                          Page 235 of 275
GSM Association                                                                 Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4


GetBoundProfilePackageOk ::= SEQUENCE {
   transactionId [0] TransactionId,
   boundProfilePackage [54] BoundProfilePackage
}



   NOTE:        The eUICC MAY start processing of the BPP before having received the full
                package and having been able to check for a correct TLV structure.



6.6.2.4    "ES9+.HandleNotification" Function
The "ES9+.HandleNotification" request function SHALL consist of the data structure defined
for PendingNotification in section 5.7.10. The function is defined as follows:
HandleNotification ::= [61] SEQUENCE { -- Tag 'BF3D'
   pendingNotification PendingNotification
}



The function has no response.

6.6.2.5    "ES9+.CancelSession" Function
The "ES9+.CancelSession" request function is defined as follows:
CancelSessionRequestEs9 ::= [65] SEQUENCE { -- Tag 'BF41'
   transactionId TransactionId,
   cancelSessionResponse CancelSessionResponse -- data structure defined for
ES10b.CancelSession function
}


The "ES9+.CancelSession" response function is defined as follows:
CancelSessionResponseEs9 ::= [65] CHOICE { -- Tag 'BF41'
   cancelSessionOk CancelSessionOk,
   cancelSessionError INTEGER {
      invalidTransactionId(1),
      euiccSignatureInvalid(2),
      undefinedError(127)
   }
}

CancelSessionOk ::= SEQUENCE { -- This function has no output data
}



6.6.2.6    "ES11.InitiateAuthentication" Function
The InitiateAuthenticationRequest and InitiateAuthenticationResponse
for the binding of the "ES11.InitiateAuthentication" function are identical to the ones defined
for the "ES9+.InitiateAuthentication" function.

6.6.2.7    "ES11.AuthenticateClient" Function
The AuthenticateClientRequest for the binding of the "ES11.AuthenticateClient"
function is identical to the one defined for the "ES9+.AuthenticateClient" function.



V2.4                                                                           Page 236 of 275
GSM Association                                                             Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

The "ES11.AuthenticateClient" response data object is defined as follows:
AuthenticateClientResponseEs11 ::= [64] CHOICE { -- Tag 'BF40'
   authenticateClientOk AuthenticateClientOkEs11,
   authenticateClientError INTEGER {
      eumCertificateInvalid(1),
      eumCertificateExpired(2),
      euiccCertificateInvalid(3),
      euiccCertificateExpired(4),
      euiccSignatureInvalid(5),
      eventIdUnknown(6),
      invalidTransactionId(7),
      undefinedError(127)
   }
}

AuthenticateClientOkEs11 ::= SEQUENCE {
   transactionId TransactionId,
   eventEntries SEQUENCE OF EventEntries
}

EventEntries ::= SEQUENCE {
   eventId UTF8String,
   rspServerAddress UTF8String
}




V2.4                                                                        Page 237 of 275
GSM Association                                                             Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

Annex A        Use of GlobalPlatform Privileges (Normative)
The eUICC architecture defined in this specification relies on the ISD-R, ISD-P, MNO-SD
and ECASD Security Domains defined in SGP.02 [2].

The GlobalPlatform privileges allocation defined in SGP.02 [2] SHALL be applicable for the
ISD-R, ISD-P, MNO-SD and ECASD Security Domains as well as Applications inside a
Profile.




V2.4                                                                        Page 238 of 275
GSM Association                                                   Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

Annex B        Data Definitions (Normative)
      Coding of the IMEI

The value of the IMEI SHALL be coded as defined in section 4.2.




V2.4                                                              Page 239 of 275
GSM Association                                                                     Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

Annex C        Device Requirements (Normative)

C.1     Functional Device Requirements
 Functional
 Device
                   Requirement
 Requirements
 No.
 DEV1              For connectivity the Device SHALL support at least one of the network access
                   technologies defined by 3GPP or 3GPP2:
                        UDP over IP as defined in RFC 768 [34] (subject to the right support of
                           access network technology)
                        TCP over IP as defined in RFC 793 [19].
 DEV2              For Network connection control the Device SHALL support:
                        RPLMN details (LAC/TAC, NMR).
                        QoS (failures, duration, power, location).
                        New network selection after SIM/USIM update.
 DEV3              The Device SHALL contain a unique IMEI (International Mobile Equipment
                   Identity) value compliant with the format defined in 3GPP TS 23.003 [35] and/or
                   a unique MEID as defined in 3GPP2 S.R0048-A [36].
 DEV4              The Device SHALL support, as a minimum, the following set of proactive
                   commands:
                       PROVIDE LOCAL INFORMATION (location information, IMEI, NMR,
                          date and time, access technology, at least).
                       POLL INTERVAL, POLLING OFF, TIMER MANAGEMENT [at least one
                          timer], ENVELOPE (TIMER EXPIRATION).
                       SET UP EVENT LIST and ENVELOPE (EVENT DOWNLOAD).
                       REFRESH Command (At least mode 4 - "UICC reset")
 DEV5              The Device SHALL comply with the IMEI security requirements defined in the
                   GSMA-EICTA document "Security Principles Related to Handset Theft" [22].
 DEV6              A Device SHALL be able to handle an eUICC without any installed Profiles.
 DEV7              If a Companion Device does not have the capability itself to communicate
                   directly with the SM-DP+, it SHALL use a Primary Device as a conduit, allowing
                   it to communicate with the SM-DP+.
 DEV8              At least one of the Primary or Companion Device SHALL have a UI that allows
                   the secure capture of User Intent.
 DEV9              At least one of the Primary or Companion Device SHALL have a UI that allows
                   the user to initiate a Profile Download or Local Profile Management.
 DEV10             The Device SHALL conform to the terminal requirements within ETSI
                   TS 102 221 [6].
 DEV11             A Device implementation of personalisation ("SIM lock") as defined by
                   3GPP TS 22.022 SHALL operate the same with an enabled eUICC Profile as
                   with a legacy UICC.
 DEV12             An NFC Device SHALL retrieve and enforce access control rules as specified in
                   the GlobalPlatform SEAC specification [56].
 DEV13             An NFC Device SHALL at least have a non-removable eUICC or have the
                   capability to support a removable eUICC that is compliant with the Contactless
                   eUICC category as defined in section 4.3 in either instance.
 DEV14             The Device SHALL operate with an eUICC comprising a default file system (i.e.
                   with no Enabled Profile) as described in section 3.4.1. In particular, the Device

V2.4                                                                                Page 240 of 275
GSM Association                                                                       Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

                   SHALL be able to perform UICC activation procedure as defined in section
                   14.5.1 of ETSI TS 102 221 [6] at least up to and including CAT initialisation (i.e.:
                   neither the modem nor the eUICC SHALL be shut down.)

                                Table 58: Device requirements

C.2    Requirements for Companion Device Scenarios
Secure interaction between the Primary Device and the Companion Device
The LPAd of the Companion Device SHALL support secure capture of the User Intent for the
purpose of Local Profile Management through the Primary Device when the Companion
Device has to rely on the Primary Device for UI function. This SHALL further include a
secure pairing and secured communication between the Primary and Companion Device.
The End User MAY perform local Profile download and management towards the eUICC in
the Companion Device using the Primary Device.

A secure point to point proximity link at transport level between the Primary Device and the
Companion Device SHALL either be implemented by the Primary and Companion Devices’
OEM(s), or it SHALL be established as follows:

   1. The End User connects the Companion Device to a router (e.g. the Primary Device
      which shares the network) which will assign an address for the Companion Device.

   NOTE:        This step MAY be performed at any time prior to step 2.

   2. The End User uses the LPAd on the Companion Device to generate a HTTPS URL
      which includes the Companion Device address (e.g. private local IP address) and
      security information (i.e. 128-bit random secret key).

       In order to achieve the interoperability between different OEM Devices, the HTTPS
       URL SHALL be specified as https://hpath/LPA_access_token, where "hpath" is the
       Companion Device address and "LPA_access_token" is the security information.

   3. The LPAd on the Companion Device indicates the HTTPS URL including the
      Companion Device address and the security information to the Primary Device using
      one of following non-exhaustive example means:

              The Companion Device transfers the HTTPS URL to the Primary Device, e.g.
               using NFC.
              The Companion Device displays the HTTPS URL which could be input by the
               End User to the Primary Device.
              The Companion Device transforms the HTTPS URL into a QR code or bar
               code so that the Primary Device can scan the code to obtain the HTTPS URL.
              The Companion Device transfers the HTTPS URL through a wired connection,
               such as a USB link to the Primary Device.

   4. Using the Companion Device address and the security information obtained from the
      HTTPS URL, a software component (e.g. LPAd) on the Primary Device establishes a
      HTTPS session with the LPAd on the Companion Device:

              Firstly, the software component uses the LPA_access_token in step 2 as the
               PSK to initiate the PSK-TLS connection as defined in RFC 4279 [47] with the

V2.4                                                                                  Page 241 of 275
GSM Association                                                                Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

               LPAd on the Companion Device. During the TLS handshake, the software
               component in the Primary Device performs mutual authentication with the
               LPAd on the Companion Device and negotiates the session key.
              After the TLS connection is established, the software component on the
               Primary Device sends an HTTP request over the TLS session to the
               Companion Device to retrieve the UI presentation of the LUId. Upon receiving
               the HTTP request, the LPAd on the Companion Device sends the HTTP
               response containing the UI presentation to the Primary Device.

   5. The End User uses the UI provided by the software component on the Primary Device
      to access the LUI on the Companion Device via the HTTPS session to perform the
      Local Profile Management Operations towards the eUICC in the Companion Device.
      The LUI on the Companion Device MAY restrict the actions that can be performed from
      the Primary Device. For example:

              It MAY not offer the eUICC Memory Reset.
              It MAY only expose the 'enable' and 'disable' operations.
              It MAY expose a Profile for enabling only if no Profile is already enabled on the
               Companion Device.

C.3    General LPA Requirements
LPA functions

There SHALL be at most one instance of the LPAd per active eUICC.

The LPA SHALL support all the functions related to Profile download and Installation via the
LPA’s Local Profile Download (LPD) functions as defined in section 3.1.3.

The LPA SHALL support Notifications as defined in sections 3.1.3, 3.5, 5.6.4, 5.7.9, 5.7.10,
5.7.11.

All Activation Code procedures SHALL be implemented natively as part of the LPA, where
the Device capabilities permit.

The LPA SHALL support the following Local Profile Management Operations via the LPA’s
Local User Interface (LUI) function:

      Initiate a Profile download RSP session with SM-DP+ as defined in section 3.1.2.
      Query for pending Profile Download Event Record as defined in section 3.6.2.
      Enabling a Disabled Profile as defined in section 3.2.1.
      Disabling an Enabled Profile as defined in section 3.2.2.
      Delete a Profile as defined in section 3.2.3.
      Query the Profile Metadata and states of Profiles installed on the eUICC as defined in
       section 3.2.4.
      Perform eUICC Memory Reset, as defined in section 3.3.2.
      Perform eUICC Test Memory Reset, as defined in section 3.3.3, if the Device
       supports Device Test Mode as described hereunder.

The LPA SHOULD support the following Local Profile Management Operations via the LPA’s
Local User Interface (LUI) function:

V2.4                                                                           Page 242 of 275
GSM Association                                                                  Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

      Set/Edit Profile Nicknames associated with installed Profiles as defined in section
       3.2.6. If the LPA does not support Set/Edit Nickname, alternative Device-specific
       methods to distinguish Profiles on the LUI SHOULD be provided by the LPA.

      Set/Edit Default SM-DP+ Address as defined in section 3.3.4. If the LPA does not
       support Set/Edit Default SM-DP+ Address according to this procedure, an alternative
       Device-specific method to edit the Default SM-DP+ address SHALL be provided to
       the End User.

       NOTE:           the alternative Device-specific method also uses the
                       ES10a.SetDefaultDpAddress function.


The LPA SHALL support retrieval of eUICC Information as defined in section 4.3.

The LPAd SHOULD advise the End User when it determines that a Profile Management
Operation or Event Retrieval operation would fail (or has failed) because connectivity to the
SM-DP+ or SM-DS is not available, or an error occurs. The LPA MAY retry for a period of
time as appropriate. The specific means by which the connectivity failure is detected, and
the manner in which it is communicated to the End User, are out of scope of this
specification.

LPAd Functions and Security Protection

The specific mechanisms for securing the operation of the LPAd, ensuring its integrity, and
ensuring the privacy and integrity of the data it handles are out of scope of this specification.
As appropriate for the class of Device, the proper security level associated with LPAd
functions SHOULD be ensured based on industry-proven implementations of:

      A secure boot OS.
      An implementation-dependent software/hardware secure execution environment for
       capturing, storing and verifying the passcode or biometric input.
      Verification of proper OEM signature of LPAd related software components.
      Application-level secure pairing and un-pairing methods between Primary and
       Companion Devices. This MAY be independent of pairing technologies and
       associated link layer security (e.g. Bluetooth or Wi-Fi).

The Device-specific security implementation SHALL:

      Verify the integrity of the LPAd and authorise it to be used.
      Provide access to the trusted LUId user interface only for the authorised LPAd.
      Provide access to the ISD-R of the eUICC only for the authorised LPAd. This
       restriction to the LPAd SHALL be enforced regardless of any rule stored in the Profile
       according to GlobalPlatform SEAC [56] which may allow it.
      Restrict access to the LPAd to only those applications and services that are provided
       by the OEM to enable the services and functions of the LPAd.
      Protect the LPAd and the data it handles from unauthorised access and modification.
       Such data includes, but is not limited to, the EID, Activation Code, Confirmation



V2.4                                                                            Page 243 of 275
GSM Association                                                                      Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

         Code, End User credentials for StrongConfirmation, Profile Metadata, Profile
         Download and Notification payloads, and Event Records.

Depending on the device class, Devices SHALL implement protection mechanisms as
shown in the table below.

 Device class            Description                              Example of Devices
                         Devices with an open operating           Smartphones, Tablets, Laptops,
                         system where mechanisms such as          Advanced Wearables
 Advanced                secure boot and platform signing of
                         applications are available and used
                         to protect the LPA.
                         Devices without possibility to install   Connected sensors, Simple
                         applications. The attack surface of      Wearables, Single use case devices
                         the LPA is minimal due to the locked
 Basic                   down nature of these Devices.
                         Simple mechanisms to ensure that
                         the LPA is not compromised SHALL
                         be taken.

                                    Table 58a: Device Classes

Where technically feasible, the Device SHALL implement a mechanism allowing the End
User to protect the access to the Device and its Profile Management Operations with
personal data. Implementation is Device specific. If such a mechanism is implemented:

        The Device SHOULD enforce the mechanism by default, and
        The End User SHOULD be able to enable/disable the mechanism, and
        The End User SHALL be able to configure the personal data.

The Device SHALL provide mechanisms to obtain StrongConfirmation and Simple
Confirmation in a Device specific implementation.

The mechanism for User Intent verification is out of scope for this release.

As examples, the recommended Strong Confirmation could include:

        Repeating Simple Confirmations, or
        Biometric (e.g. fingerprint) verification, or

Device passcode verificationDevice Test Mode

The Device and LPAd MAY support Device Test Mode. The method of entering Device Test
Mode, exiting Device Test Mode, and Device testing functionality that is not related to
Remote SIM Provisioning are implementation-specific and out of the scope of this
specification.

The LPAd SHALL only provide access to Test Profiles when the Device is operating in
Device Test Mode.

When the Device exits Device Test Mode, the LPAd SHALL disable any enabled Test Profile
as defined in section 3.2.2.

V2.4                                                                                Page 244 of 275
GSM Association                                                                      Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

C.4     Support for CAT Mechanisms
Dependent on the deployment, the Devices SHALL support at least the CAT mechanisms
(ETSI TS 102 223 [31]) indicated in the table below.

       CAT mechanism                      LPAd                LPAe with      LPAe with
                                                              LUIe based     LUIe based
                                                              on CAT         on SCWS
       TERMINAL PROFILE                   X                   X              X
       SETUP MENU
       ENVELOPE (MENU
       SELECTION)
       DISPLAY TEXT
       GET INKEY
       GET INPUT
                                                              X
       PLAY TONE
       SELECT ITEM
       EVENT DOWNLOAD - User
       activity
       EVENT DOWNLOAD - Idle
       screen available
       SET UP EVENT LIST                  X                   X              X
       REFRESH with UICC Reset or
                                          X                   X              X
       eUICC Profile Switch mode
       PROVIDE LOCAL
       INFORMATION                                            X              X
       (IMEI)
       SEND SHORT MESSAGE
       ENVELOPE (SMS-PP                   X                   X              X
       DOWNLOAD)
       TIMER MANAGEMENT
       ENVELOPE (TIMER                                        X              X
       EXPIRATION)
       OPEN CHANNEL related to
                                          X                   X              X (1)
       packet data service bearer
       OPEN CHANNEL related to                                               X (1)
       UICC Server Mode
       CLOSE CHANNEL
       RECEIVE DATA
       SEND DATA
       GET CHANNEL STATUS
                                          X                   X              X
       EVENT DOWNLOAD - Data
       available
       EVENT DOWNLOAD - Channel
       status
       NOTE 1: The Device SHALL support running these 2 BIP channels in parallel.


                                  Table 59: CAT Mechanisms

   NOTE:         The table also includes requirements for ES6.

V2.4                                                                                 Page 245 of 275
GSM Association                                               Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4




V2.4                                                          Page 246 of 275
GSM Association                                                        Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

Annex D Coding of the AIDs for 'Remote SIM Provisioning'
(Normative)
The Coding of the AID for ISD-R, ISD-P and ECASD SHALL be as defined in SGP.02 [2].




V2.4                                                                   Page 247 of 275
GSM Association                                                                      Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

Annex E          List of Identifiers (Informative)
OIDs

The following identifiers for remote provisioning are created under a dedicated OID tree
under ISO branch:

        ASN.1 notation: {ISO(1) identified-organization(3) dod(6) internet(1) private(4)
         enterprise(1)}
        dot notation: 1.3.6.1.4.1
        IOD-IRI notation: /ISO/Identified-Organization/6/1/4/1

The private enterprise numbers may be found under the Internet Assigned Numbers
Authority: http://www.iana.org/assignments/enterprise-numbers/enterprise-numbers

EUM Identifiers


                      Identifier Uniqueness                  Registration Entity
                      EUM OID        within the ecosystem    ISO
                                                             1.3.6.1.4.1
                      SIN            within the ecosystem    ISO 7812 [37]

                                      Table 60: EUM Identifiers

eUICC Identifiers


 Identifier     Uniqueness            Registration Entity
 EID            within the            GSMA ESIM Technical Specification SGP.02 [2] and GSMA EID
                ecosystem             Definition and Assignment Process SGP.29 [89]
 ECASD AID      within the eUICC      GSMA ESIM Technical Specification SGP.02 [2]
 ISD-R AID      within the eUICC      GSMA ESIM Technical Specification SGP.02 [2]
 ISD-P AID      within the eUICC      eUICC within a range defined in GSMA ESIM Technical
                                      Specification SGP.02 [2]
 ICCID          Global                ITU-T E.118 [21]
 ISD-R TAR      within the eUICC      GSMA ESIM Technical Specification SGP.02 [2]
 MNO-SD         Within the Profile    ETSI TS 101 220 [33]
 AID
 MNO-SD         Within the Profile    ETSI TS 101 220 (ISD TAR) []
 TAR

                                     Table 61: eUICC Identifiers

SM-DP+ Identifier


                    Identifier        Uniqueness              Registration Entity
                    SM-DP+ OID        within the ecosystem    ISO
                                                              1.3.6.1.4.1

                                     Table 62: SM-DP+ Identifier



V2.4                                                                                Page 248 of 275
GSM Association                                                                 Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

SM-DS Identifier


                    Identifier   Uniqueness              Registration Entity
                    SM-DS OID    within the ecosystem    ISO
                                                         1.3.6.1.4.1

                                  Table 63: SM-DS Identifier

MNO Identifiers


    Identifier          Uniqueness             Registration Entity
    MNO OID             within the ecosystem   ISO
                                               1.3.6.1.4.1
    MCC+MNC (IMSI)      Global                 ITU-T for MCC and National Regulators for MNC

                                  Table 64: MNO Identifiers




V2.4                                                                           Page 249 of 275
GSM Association                                                                                                                                 Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

Annex F            Profile Eligibility Check (Informative)
Prior to any Profile download, the Operator or the SM-DP+ verifies if the selected Profile
Type is compatible with the targeted Device.

Two types of checking are possible:

      Static eligibility check (SEC): a check based on the static capabilities of the Device
       and / or the eUICC. These capabilities could be retrieved based on the knowledge of
       the EID and the TAC. These eUICC capabilities MAY be acquired by various means:
       information contained in the EID itself, additional tables locally handled by the
       Operator or communication with an external entity like the EUM. Device capabilities
       can be retrieved by the Operator based on the TAC. This Static eligibility check is
       under the responsibility of the Operator; it MAY be done by the SM-DP+ on behalf of
       the Operator. The means to establish the compatibility of the Profile Type with a
       Device type and eUICC type is out of scope of this specification.
      Dynamic eligibility check (DEC): a check based on the eUICC Info and / or the Device
       capabilities signed by the eUICC during Profile Download and Installation procedure.
       This Dynamic eligibility check is under the responsibility of the SM-DP+ on behalf of
       the Operator.

The following figure describes the global eligibility process depending on the knowledge of
the target Device.

           Download initiation procedure                                                 Download & installation procedure


Operator         EID/IMEIi       yes          SEC         no
                                                                                                                                SEC         no
domain            known?                      OK?
                                                                                                                                OK?
                                                                 Failure
                       no                        yes
                                                                                                                                yes
                Use default               Use compatible                                                 MatchingID,
             ProfileType/ICCID           ProfileType/ICCID                                                TAC, EID         Profile Type/ICCID



SM-DP+      ES2+.DownloadOrder         ES2+.DownloadOrder
           (null, Profiletype, txID)   (EID, Profiletype,txID)
domain                                                                                                   Request SEC
                                                                                                                                                           Failure
           Bind MatchingID-ICCID Bind MatchingID-ICCID-EID                                                      no
                                                                                                            EID
                                                                                                                     yes         DEC
                                 continue…                                                               Bound with                                continue…
                                                                                                         MatchingID?             OK?
                                                                                          Acquire
                                                                           MatchingID, EID, Device info, eUICC info



                                                       Figure 41: Eligibility Check




V2.4                                                                                                                                        Page 250 of 275
GSM Association                                                                Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

The following recommendations apply to the SM-DP+ for the eligibility check of 5G supporting
Device. See also section 4.2, section 5.7.8, and annex H.
      The SM-DP+ SHOULD check if the eUICC supports GET IDENTITY, i.e.,
       getIdentity bit is set in uiccCapability. If it is not supported, the SM-DP+
       SHOULD NOT configure service n°125 in EFUST, and SHOULD NOT provide DFSAIP in
       the Profile Package.
      The SM-DP+ SHOULD check if the eUICC supports SAIP v2.3.1 (or higher). If it is not
       supported and the Profile is intended to contain DF5GS, the SM-DP+ SHOULD provide
       the DF5GS by using Generic File Management PE.
      The SM-DP+ MAY provide a Profile with additional 5G features even if the Device does
       not support 5G core access (neither eutran5gcSupportedRelease nor
       nr5gcSupportedRelease is present in deviceCapability).



Annex G        Key Derivation Process (Normative)
The key derivation process described in this section SHALL be executed by both the off-card
entity (SM-DP+) and the eUICC in a symmetric way.

      Use otPK.eUICC.ECKA and otPK.DP.ECKA (with their respective one time private
       keys) to generate the shared secret ShS as described in GlobalPlatform Card
       Specification Amendment F [13] section 3.1.1 (but limited to ephemeral keys) which
       constitutes the input for the Key Derivation process.
      Concatenate the following values as SharedInfo as input for the Key Derivation
       process (this data is the one given as input data in the function
       "ES8+.InitialiseSecureChannel"):

          Key type (1 byte)
          Key length (1 byte)
          HostID-LV and EID-LV. HostID-LV comprises the length and the value field of the
           HostID given in the input data; EID-LV comprises the length and value field of the
           EID.

      Initial MAC Chaining value, S-ENC and S-MAC are taken from KeyData derived from
       the ShS as defined in BSI TR-03111 [41] for the "X9.63 Key Derivation Function"
       (SHA-256 SHALL be used for the key derivation to calculate KeyData of sufficient
       length). This key derivation includes additional information, the 'SharedInfo' of the key
       derivation algorithm. Keys are assigned as defined in the following table:

                          KeyData            Key
                          1 to L             Initial MAC chaining value
                          L+1 to 2L          S-ENC
                          2L+1 to 3L         S-MAC

                                   Table 65: Mac Chaining

The initial MAC chaining value is used for the computation of the MAC of the first SCP03t
block following the "ES8+.InitialiseSecureChannel" command.




V2.4                                                                           Page 251 of 275
GSM Association                                                      Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

Annex H        ASN.1 Definitions (Normative)
RSPDefinitions {joint-iso-itu-t(2) international-organizations(23) gsma(146) rsp(1)
spec-version(1) version-two(2)}
DEFINITIONS
AUTOMATIC TAGS
EXTENSIBILITY IMPLIED ::=
BEGIN

IMPORTS Certificate, CertificateList, Time FROM PKIX1Explicit88 {iso(1) identified-
organization(3) dod(6) internet(1) security(5) mechanisms(5) pkix(7) id-mod(0) id-
pkix1-explicit(18)}
SubjectKeyIdentifier FROM PKIX1Implicit88 {iso(1) identified-organization(3) dod(6)
internet(1) security(5) mechanisms(5) pkix(7) id-mod(0) id-pkix1-implicit(19)};

id-rsp OBJECT IDENTIFIER ::= {joint-iso-itu-t(2) international-organizations(23)
gsma(146) rsp(1)}

-- Basic types, for size constraints
Octet8 ::= OCTET STRING (SIZE(8))
Octet4 ::= OCTET STRING (SIZE(4))
Octet16 ::= OCTET STRING (SIZE(16))
OctetTo16 ::= OCTET STRING (SIZE(1..16))
Octet32 ::= OCTET STRING (SIZE(32))
Octet1 ::= OCTET STRING(SIZE(1))
Octet2 ::= OCTET STRING (SIZE(2))
VersionType ::= OCTET STRING(SIZE(3)) -- major/minor/revision version are coded as
binary value on byte 1/2/3, e.g. '02 00 0C' for v2.0.12.
-- If revision is not used (e.g. v2.1), byte 3 SHALL be set to '00'.
Iccid ::= [APPLICATION 26] OCTET STRING (SIZE(10)) -- ICCID as coded in EFiccid,
corresponding tag is '5A'
RemoteOpId ::= [2] INTEGER {installBoundProfilePackage(1)}
TransactionId ::= OCTET STRING (SIZE(1..16))

-- Definition of EUICCInfo1 --------------------------
GetEuiccInfo1Request ::= [32] SEQUENCE { -- Tag 'BF20'
}

EUICCInfo1 ::= [32] SEQUENCE { -- Tag 'BF20'
   svn [2] VersionType,    -- GSMA SGP.22 version supported (SVN)
   euiccCiPKIdListForVerification [9] SEQUENCE OF SubjectKeyIdentifier, -- List of
CI Public Key Identifiers supported on the eUICC for signature verification
   euiccCiPKIdListForSigning [10] SEQUENCE OF SubjectKeyIdentifier -- List of CI
Public Key Identifier supported on the eUICC for signature creation
}

-- Definition of EUICCInfo2 --------------------------
GetEuiccInfo2Request ::= [34] SEQUENCE { -- Tag 'BF22'
}

EUICCInfo2 ::= [34] SEQUENCE { -- Tag 'BF22'
   profileVersion [1] VersionType,      -- Base eUICC Profile package version
supported
   svn [2] VersionType,    -- GSMA SGP.22 version supported (SVN)
   euiccFirmwareVer [3] VersionType,    -- eUICC Firmware version
   extCardResource [4] OCTET STRING,    -- Extended Card Resource Information
according to ETSI TS 102 226
   uiccCapability [5] UICCCapability,
   ts102241Version [6] VersionType OPTIONAL,
   globalplatformVersion [7] VersionType OPTIONAL,
   rspCapability [8] RspCapability,
   euiccCiPKIdListForVerification [9] SEQUENCE OF SubjectKeyIdentifier, -- List of
CI Public Key Identifiers supported on the eUICC for signature verification
   euiccCiPKIdListForSigning [10] SEQUENCE OF SubjectKeyIdentifier, -- List of CI
Public Key Identifier supported on the eUICC for signature creation
   euiccCategory [11] INTEGER {
      other(0),
      basicEuicc(1),


V2.4                                                                 Page 252 of 275
GSM Association                                                            Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

      mediumEuicc(2),
      contactlessEuicc(3)
   } OPTIONAL,
   forbiddenProfilePolicyRules [25] PprIds OPTIONAL, -- Tag '99'
   ppVersion VersionType, -- Protection Profile version
   sasAcreditationNumber UTF8String (SIZE(0..64)),
   certificationDataObject [12] CertificationDataObject OPTIONAL,
   treProperties [13] BIT STRING {
     isDiscrete(0),
      isIntegrated(1),
      usesRemoteMemory(2) -- refers to the usage of remote memory protected by
                   the Remote Memory Protection Function described in SGP.21 [4]
   } OPTIONAL,
   treProductReference [14] UTF8String OPTIONAL, -- Platform_Label as defined in
GlobalPlatform DLOA specification [57]
additionalEuiccProfilePackageVersions [15] SEQUENCE OF VersionType OPTIONAL
}

-- Definition of RspCapability
RspCapability ::= BIT STRING {
   additionalProfile(0), -- at least one more Profile can be installed
   crlSupport(1), -- CRL
   rpmSupport(2), -- Remote Profile Management
   testProfileSupport (3), -- support for test profile
  deviceInfoExtensibilitySupport (4), -- support for ASN.1 extensibility in the
Device Info
   serviceSpecificDataSupport (5) -- support for Service Specific Data in the
Profile Metadata

}

-- Definition of CertificationDataObject
CertificationDataObject ::= SEQUENCE {
   platformLabel UTF8String,     -- Platform_Label as defined in GlobalPlatform
DLOA specification [57]
   discoveryBaseURL UTF8String   -- Discovery Base URL of the SE default DLOA
Registrar as defined in GlobalPlatform DLOA specification [57]
}

CertificateInfo ::= BIT STRING {

   reserved(0), -- eUICC has a CERT.EUICC.ECDSA in GlobalPlatform format. The use
of this bit is deprecated.
   certSigningX509(1),     -- eUICC has a CERT.EUICC.ECDSA in X.509 format
   rfu2(2),
   rfu3(3),
   reserved2(4), -- Handling of Certificate in GlobalPlatform format. The use of
this bit is deprecated.
   certVerificationX509(5)-- Handling of Certificate in X.509 format
}

-- Definition of UICCCapability
UICCCapability ::= BIT STRING {
/* Sequence is derived from ServicesList[] defined in eUICC Profile Package
PEDefinitions*/
   contactlessSupport(0), -- Contactless (SWP, HCI and associated APIs)
   usimSupport(1),         -- USIM as defined by 3GPP
   isimSupport(2),         -- ISIM as defined by 3GPP
   csimSupport(3),         -- CSIM as defined by 3GPP2

    akaMilenage(4),            --   Milenage as AKA algorithm
    akaCave(5),                --   CAVE as authentication algorithm
    akaTuak128(6),             --   TUAK as AKA algorithm with 128 bit key length
    akaTuak256(7),             --   TUAK as AKA algorithm with 256 bit key length
    rfu1(8),                   --   reserved for further algorithms
    rfu2(9),                   --   reserved for further algorithms

    gbaAuthenUsim(10),         -- GBA authentication in the context of USIM


V2.4                                                                       Page 253 of 275
GSM Association                                                          Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

    gbaAuthenISim(11),         -- GBA authentication in the context of ISIM
    mbmsAuthenUsim(12),        -- MBMS authentication in the context of USIM
    eapClient(13),             -- EAP client

    javacard(14),              -- Javacard support
    multos(15),                -- Multos support

   multipleUsimSupport(16), -- Multiple USIM applications are supported within the
same Profile
   multipleIsimSupport(17), -- Multiple ISIM applications are supported within the
same Profile
   multipleCsimSupport(18),    -- Multiple CSIM applications are supported within
the same Profile
   berTlvFileSupport(19), -- BER TLV files
   dfLinkSupport(20),       -- Linked Directory Files
   catTp(21),               -- Support of CAT TP
   getIdentity(22),         -- Support of the GET IDENTITY command as defined in
ETSI TS 102 221 [6]
   profile-a-x25519(23),    -- Support of ECIES Profile A as defined in 3GPP TS
33.501 [87]
   profile-b-p256(24),      -- Support of ECIES Profile B as defined in 3GPP TS
33.501 [87]
   suciCalculatorApi(25)    -- Support of the associated API for SUCI derivation as
defined in 3GPP 31.130 [88]

}

-- Definition of DeviceInfo
DeviceInfo ::= SEQUENCE {
   tac Octet4,
   deviceCapabilities DeviceCapabilities,
   imei Octet8 OPTIONAL
}

DeviceCapabilities ::= SEQUENCE { -- Highest fully supported release for each
definition
  -- The device SHALL set all the capabilities it supports
   gsmSupportedRelease VersionType OPTIONAL,
   utranSupportedRelease VersionType OPTIONAL,
   cdma2000onexSupportedRelease VersionType OPTIONAL,
   cdma2000hrpdSupportedRelease VersionType OPTIONAL,
   cdma2000ehrpdSupportedRelease VersionType OPTIONAL,
   eutranEpcSupportedRelease VersionType OPTIONAL,
   contactlessSupportedRelease VersionType OPTIONAL,
   rspCrlSupportedVersion VersionType OPTIONAL,
   nrEpcSupportedRelease VersionType OPTIONAL,
   nr5gcSupportedRelease VersionType OPTIONAL,
   eutran5gcSupportedRelease VersionType OPTIONAL

}

ProfileInfoListRequest ::= [45] SEQUENCE { -- Tag 'BF2D'
   searchCriteria [0] CHOICE {
      isdpAid [APPLICATION 15] OctetTo16, -- AID of the ISD-P, tag '4F'
      iccid Iccid, -- ICCID, tag '5A'
      profileClass [21] ProfileClass -- Tag '95'
   } OPTIONAL,
   tagList [APPLICATION 28] OCTET STRING OPTIONAL -- tag '5C'
}

-- Definition of ProfileInfoList
ProfileInfoListResponse ::= [45] CHOICE { -- Tag 'BF2D'
   profileInfoListOk SEQUENCE OF ProfileInfo,
   profileInfoListError ProfileInfoListError
}

ProfileInfo ::= [PRIVATE 3] SEQUENCE { -- Tag 'E3'
   iccid Iccid OPTIONAL,


V2.4                                                                     Page 254 of 275
GSM Association                                                         Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

   isdpAid [APPLICATION 15] OctetTo16 OPTIONAL, -- AID of the ISD-P containing the
Profile, tag '4F'
   profileState [112] ProfileState OPTIONAL, -- Tag '9F70'
   profileNickname [16] UTF8String (SIZE(0..64)) OPTIONAL, -- Tag '90'
   serviceProviderName [17] UTF8String (SIZE(0..32)) OPTIONAL, -- Tag '91'
   profileName [18] UTF8String (SIZE(0..64)) OPTIONAL, -- Tag '92'
   iconType [19] IconType OPTIONAL, -- Tag '93'
   icon [20] OCTET STRING (SIZE(0..1024)) OPTIONAL, -- Tag '94', see condition in
ES10c:GetProfilesInfo
   profileClass [21] ProfileClass OPTIONAL, -- Tag '95'
   notificationConfigurationInfo [22] SEQUENCE OF
NotificationConfigurationInformation OPTIONAL, -- Tag 'B6'
   profileOwner [23] OperatorId OPTIONAL, -- Tag 'B7'
   dpProprietaryData [24] DpProprietaryData OPTIONAL, -- Tag 'B8'
   profilePolicyRules [25] PprIds OPTIONAL, -- Tag '99'
   serviceSpecificDataStoredInEuicc [34] VendorSpecificExtension OPTIONAL -- Tag
'BF22'
}

PprIds ::= BIT STRING {-- Definition of Profile Policy Rules identifiers
   pprUpdateControl(0), -- defines how to update PPRs via ES6
   ppr1(1), -- Indicator for PPR1 'Disabling of this Profile is not allowed'
   ppr2(2) -- Indicator for PPR2 'Deletion of this Profile is not allowed'
}

OperatorId ::= SEQUENCE {
   mccMnc OCTET STRING (SIZE(3)), -- MCC and MNC coded as defined in 3GPP TS 24.008
[32]
   gid1 OCTET STRING OPTIONAL, -- referring to content of EF GID1 (file identifier
'6F3E') as defined in 3GPP TS 31.102 [54]
   gid2 OCTET STRING OPTIONAL -- referring to content of EF GID2 (file identifier
'6F3F') as defined in 3GPP TS 31.102 [54]
}

ProfileInfoListError ::= INTEGER {incorrectInputValues(1), undefinedError(127)}

-- Definition of StoreMetadata request

StoreMetadataRequest ::= [37] SEQUENCE { -- Tag 'BF25'
   iccid Iccid,
   serviceProviderName [17] UTF8String (SIZE(0..32)), -- Tag '91'
   profileName [18] UTF8String (SIZE(0..64)), -- Tag '92' (corresponds to 'Short
Description' defined in SGP.21 [2])
   iconType [19] IconType OPTIONAL, -- Tag '93' (JPG or PNG)
   icon [20] OCTET STRING (SIZE(0..1024)) OPTIONAL, -- Tag '94'(Data of the icon.
Size 64 x 64 pixel. This field SHALL only be present if iconType is present)
   profileClass [21] ProfileClass DEFAULT operational, -- Tag '95'
   notificationConfigurationInfo [22] SEQUENCE OF
NotificationConfigurationInformation OPTIONAL,
   profileOwner [23] OperatorId OPTIONAL, -- Tag 'B7'
   profilePolicyRules [25] PprIds OPTIONAL, -- Tag '99'
   serviceSpecificDataStoredInEuicc [34] VendorSpecificExtension OPTIONAL, -- Tag
'BF22'
   serviceSpecificDataNotStoredInEuicc [35] VendorSpecificExtension OPTIONAL -- Tag
'BF23'

}

NotificationEvent ::= BIT STRING {
   notificationInstall(0),
   notificationEnable(1),
   notificationDisable(2),
   notificationDelete(3)
}

NotificationConfigurationInformation ::= SEQUENCE {
   profileManagementOperation NotificationEvent,
   notificationAddress UTF8String -- FQDN to forward the notification


V2.4                                                                    Page 255 of 275
GSM Association                                                       Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

}

OPENTYPE ::= CLASS {
  &typeId OBJECT IDENTIFIER,
  &Type
}

VendorSpecificExtension ::= SEQUENCE OF SEQUENCE {
   vendorOid [0] OPENTYPE.&typeId, -- OID of the vendor who defined this specific
extension
   vendorSpecificData [1] OPENTYPE.&Type
}

IconType ::= INTEGER {jpg(0), png(1)}
ProfileState ::= INTEGER {disabled(0), enabled(1)}
ProfileClass ::= INTEGER {test(0), provisioning(1), operational(2)}

-- Definition of UpdateMetadata request
UpdateMetadataRequest ::= [42] SEQUENCE { -- Tag 'BF2A'
   serviceProviderName [17] UTF8String (SIZE(0..32)) OPTIONAL, -- Tag '91'
   profileName [18] UTF8String (SIZE(0..64)) OPTIONAL, -- Tag '92'
   iconType [19] IconType OPTIONAL, -- Tag '93'
   icon [20] OCTET STRING (SIZE(0..1024)) OPTIONAL, -- Tag '94'
   profilePolicyRules [25] PprIds OPTIONAL, -- Tag '99'
   serviceSpecificDataStoredInEuicc [34] VendorSpecificExtension OPTIONAL -- Tag
'BF22'

}

-- Definition of data objects for command PrepareDownload -------------------------
PrepareDownloadRequest ::= [33] SEQUENCE { -- Tag 'BF21'
   smdpSigned2 SmdpSigned2,                    -- Signed information
   smdpSignature2 [APPLICATION 55] OCTET STRING,      -- DP_Sign1, tag '5F37'
   hashCc Octet32 OPTIONAL, -- Hash of confirmation code
   smdpCertificate Certificate    -- CERT.DPpb.ECDSA
}

SmdpSigned2 ::= SEQUENCE {
   transactionId [0] TransactionId,     -- The TransactionID generated by the
SM-DP+
   ccRequiredFlag BOOLEAN, --Indicates if the Confirmation Code is required
   bppEuiccOtpk [APPLICATION 73] OCTET STRING OPTIONAL      -- otPK.EUICC.ECKA
already used for binding the BPP, tag '5F49'
}

PrepareDownloadResponse ::= [33] CHOICE { -- Tag 'BF21'
   downloadResponseOk PrepareDownloadResponseOk,
   downloadResponseError PrepareDownloadResponseError
}

PrepareDownloadResponseOk ::= SEQUENCE {
   euiccSigned2 EUICCSigned2,     -- Signed information
   euiccSignature2 [APPLICATION 55] OCTET STRING      -- tag '5F37'
}

EUICCSigned2 ::= SEQUENCE {
   transactionId [0] TransactionId,
   euiccOtpk [APPLICATION 73] OCTET STRING,           -- otPK.EUICC.ECKA, tag '5F49'
   hashCc Octet32 OPTIONAL        -- Hash of confirmation code
}

PrepareDownloadResponseError ::= SEQUENCE {
   transactionId [0] TransactionId,
   downloadErrorCode DownloadErrorCode
}




V2.4                                                                  Page 256 of 275
GSM Association                                                      Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

DownloadErrorCode ::= INTEGER {invalidCertificate(1), invalidSignature(2),
unsupportedCurve(3), noSessionContext(4), invalidTransactionId(5),
undefinedError(127)}

-- Definition of data objects for command AuthenticateServer--------------------
AuthenticateServerRequest ::= [56] SEQUENCE { -- Tag 'BF38'
   serverSigned1 ServerSigned1,                       -- Signed information
   serverSignature1 [APPLICATION 55] OCTET STRING,    -- tag ‘5F37’
   euiccCiPKIdToBeUsed SubjectKeyIdentifier,          -- CI Public Key Identifier to
be used
   serverCertificate Certificate, -- RSP Server Certificate CERT.XXauth.ECDSA
   ctxParams1 CtxParams1
}

ServerSigned1 ::= SEQUENCE {
   transactionId [0] TransactionId,            -- The Transaction ID generated by
the RSP Server
   euiccChallenge [1] Octet16,          -- The eUICC Challenge
   serverAddress [3] UTF8String, -- The RSP Server address
   serverChallenge [4] Octet16          -- The RSP Server Challenge
}

CtxParams1 ::= CHOICE {
   ctxParamsForCommonAuthentication CtxParamsForCommonAuthentication -- New
contextual data objects MAY be defined for extensibility
}

CtxParamsForCommonAuthentication ::= SEQUENCE {
   matchingId UTF8String OPTIONAL,-- The MatchingId could be the Activation code
token or EventID or empty
   deviceInfo DeviceInfo -- The Device information
}

AuthenticateServerResponse ::= [56] CHOICE { -- Tag 'BF38'
   authenticateResponseOk AuthenticateResponseOk,
   authenticateResponseError AuthenticateResponseError
}

AuthenticateResponseOk ::= SEQUENCE {
   euiccSigned1 EuiccSigned1,            -- Signed information
   euiccSignature1 [APPLICATION 55] OCTET STRING,     --EUICC_Sign1, tag 5F37
   euiccCertificate Certificate, -- eUICC Certificate (CERT.EUICC.ECDSA) signed by
the EUM
   eumCertificate Certificate     -- EUM Certificate (CERT.EUM.ECDSA) signed by the
requested CI
}

EuiccSigned1 ::= SEQUENCE {
   transactionId [0] TransactionId,
   serverAddress [3] UTF8String,
   serverChallenge [4] Octet16,   -- The RSP Server Challenge
   euiccInfo2 [34] EUICCInfo2,
   ctxParams1 CtxParams1
}

AuthenticateResponseError ::= SEQUENCE {
   transactionId [0] TransactionId,
   authenticateErrorCode AuthenticateErrorCode
}

AuthenticateErrorCode ::= INTEGER {invalidCertificate(1), invalidSignature(2),
unsupportedCurve(3), noSessionContext(4), invalidOid(5), euiccChallengeMismatch(6),
ciPKUnknown(7), undefinedError(127)}

-- Definition of Cancel Session------------------------------
CancelSessionRequest ::= [65] SEQUENCE { -- Tag 'BF41'
   transactionId TransactionId,   -- The TransactionID generated by the RSP Server
   reason CancelSessionReason


V2.4                                                                 Page 257 of 275
GSM Association                                                        Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

}

CancelSessionReason ::= INTEGER {endUserRejection(0), postponed(1), timeout(2),
pprNotAllowed(3), metadataMismatch(4), loadBppExecutionError(5),
undefinedReason(127)}

CancelSessionResponse ::= [65] CHOICE { -- Tag 'BF41'
   cancelSessionResponseOk CancelSessionResponseOk,
   cancelSessionResponseError INTEGER {invalidTransactionId(5),
undefinedError(127)}
}

CancelSessionResponseOk ::= SEQUENCE {
   euiccCancelSessionSigned EuiccCancelSessionSigned,        -- Signed information
   euiccCancelSessionSignature [APPLICATION 55] OCTET STRING -- tag '5F37
}

EuiccCancelSessionSigned ::= SEQUENCE {
   transactionId TransactionId,
   smdpOid OBJECT IDENTIFIER, -- SM-DP+ OID as contained in CERT.DPauth.ECDSA
   reason CancelSessionReason
}

-- Definition of Bound Profile Package --------------------------
BoundProfilePackage ::= [54] SEQUENCE { -- Tag 'BF36'
   initialiseSecureChannelRequest [35] InitialiseSecureChannelRequest, -- Tag
'BF23'
   firstSequenceOf87 [0] SEQUENCE OF [7] OCTET STRING, -- sequence of '87' TLVs
   sequenceOf88 [1] SEQUENCE OF [8] OCTET STRING, -- sequence of '88' TLVs
   secondSequenceOf87 [2] SEQUENCE OF [7] OCTET STRING OPTIONAL, -- sequence of
'87' TLVs
   sequenceOf86 [3] SEQUENCE OF [6] OCTET STRING -- sequence of '86' TLVs
}

-- Definition of Get eUICC Challenge --------------------------
GetEuiccChallengeRequest ::= [46] SEQUENCE { -- Tag 'BF2E'
}

GetEuiccChallengeResponse ::= [46] SEQUENCE { -- Tag 'BF2E'
   euiccChallenge Octet16 -- random eUICC challenge
}

-- Definition of Profile Installation Result
ProfileInstallationResult ::= [55] SEQUENCE { -- Tag 'BF37'
   profileInstallationResultData [39] ProfileInstallationResultData,
   euiccSignPIR EuiccSignPIR
}

ProfileInstallationResultData ::= [39] SEQUENCE { -- Tag 'BF27'
   transactionId[0] TransactionId, -- The TransactionID generated by the SM-DP+
   notificationMetadata[47] NotificationMetadata,
   smdpOid OBJECT IDENTIFIER, -- SM-DP+ OID (same value as in CERT.DPpb.ECDSA)
   finalResult [2] CHOICE {
      successResult SuccessResult,
      errorResult ErrorResult
   }
}

EuiccSignPIR ::= [APPLICATION 55] OCTET STRING -- Tag '5F37', eUICC’s signature

SuccessResult ::= SEQUENCE {
   aid [APPLICATION 15] OCTET STRING (SIZE (5..16)), -- AID of ISD-P
   simaResponse OCTET STRING -- contains (multiple) 'EUICCResponse' as defined in
[5]
}

ErrorResult ::= SEQUENCE {
   bppCommandId BppCommandId,


V2.4                                                                   Page 258 of 275
GSM Association                                                               Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

   errorReason ErrorReason,
   simaResponse OCTET STRING OPTIONAL -- contains (multiple) 'EUICCResponse' as
defined in [5]
}

BppCommandId ::= INTEGER {initialiseSecureChannel(0), configureISDP(1),
storeMetadata(2), storeMetadata2(3), replaceSessionKeys(4), loadProfileElements(5)}

ErrorReason ::= INTEGER {
   incorrectInputValues(1),
   invalidSignature(2),
   invalidTransactionId(3),
   unsupportedCrtValues(4),
   unsupportedRemoteOperationType(5),
   unsupportedProfileClass(6),
   scp03tStructureError(7),
   scp03tSecurityError(8),
   installFailedDueToIccidAlreadyExistsOnEuicc(9),
   installFailedDueToInsufficientMemoryForProfile(10),
   installFailedDueToInterruption(11),
   installFailedDueToPEProcessingError (12),
   installFailedDueToDataMismatch(13),
   testProfileInstallFailedDueToInvalidNaaKey(14),
   pprNotAllowed(15),
   installFailedDueToUnknownError(127)
}

ListNotificationRequest ::= [40] SEQUENCE { -- Tag 'BF28'
   profileManagementOperation [1] NotificationEvent OPTIONAL
}

ListNotificationResponse ::= [40] CHOICE { -- Tag 'BF28'
   notificationMetadataList SEQUENCE OF NotificationMetadata,
   listNotificationsResultError INTEGER {undefinedError(127)}
}

NotificationMetadata ::= [47] SEQUENCE { -- Tag 'BF2F'
   seqNumber [0] INTEGER,
   profileManagementOperation [1] NotificationEvent, /*Only one bit SHALL be set to
1*/
   notificationAddress UTF8String, -- FQDN to forward the notification
   iccid Iccid OPTIONAL
}

-- Definition of Profile Nickname Information
SetNicknameRequest ::= [41] SEQUENCE { -- Tag 'BF29'
   iccid Iccid,
   profileNickname [16] UTF8String (SIZE(0..64))
}

SetNicknameResponse ::= [41] SEQUENCE { -- Tag 'BF29'
   setNicknameResult INTEGER {ok(0), iccidNotFound (1), undefinedError(127)}
}

id-rsp-cert-objects OBJECT IDENTIFIER ::= {         id-rsp cert-objects(2)}

id-rspExt OBJECT IDENTIFIER ::= {id-rsp-cert-objects 0}

id-rspRole OBJECT IDENTIFIER ::= {id-rsp-cert-objects 1}

-- Definition of OIDs for role identification
id-rspRole-ci OBJECT IDENTIFIER ::= {id-rspRole 0}
id-rspRole-euicc OBJECT IDENTIFIER ::= {id-rspRole 1}
id-rspRole-eum OBJECT IDENTIFIER ::= {id-rspRole 2}
id-rspRole-dp-tls OBJECT IDENTIFIER ::= {id-rspRole 3}
id-rspRole-dp-auth OBJECT IDENTIFIER ::= {id-rspRole 4}
id-rspRole-dp-pb OBJECT IDENTIFIER ::= {id-rspRole 5}
id-rspRole-ds-tls OBJECT IDENTIFIER ::= {id-rspRole 6}


V2.4                                                                          Page 259 of 275
GSM Association                                                      Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

id-rspRole-ds-auth OBJECT IDENTIFIER ::= {id-rspRole 7}

--Definition of data objects for InitialiseSecureChannel Request
InitialiseSecureChannelRequest ::= [35] SEQUENCE { -- Tag 'BF23'
   remoteOpId RemoteOpId, -- Remote Operation Type Identifier (value SHALL be set
to installBoundProfilePackage)
   transactionId [0] TransactionId, -- The TransactionID generated by the SM-DP+
   controlRefTemplate[6] IMPLICIT ControlRefTemplate, -- Control Reference Template
(Key Agreement). Current specification considers a subset of CRT specified in
GlobalPlatform Card Specification [8], section 6.4.2.3 for the Mutual
Authentication Data Field
   smdpOtpk [APPLICATION 73] OCTET STRING, ---otPK.DP.ECKA as specified in
GlobalPlatform Card Specification [8] section 6.4.2.3 for ePK.OCE.ECKA, tag '5F49'
   smdpSign [APPLICATION 55] OCTET STRING -- SM-DP's signature, tag '5F37'
}

ControlRefTemplate ::= SEQUENCE {
   keyType[0] Octet1, -- Key type according to GlobalPlatform Card Specification
[8] Table 11-16, AES= '88', Tag '80'
   keyLen[1] Octet1, --Key length in number of bytes. For current specification key
length SHALL by 0x10 bytes, Tag '81'
   hostId[4] OctetTo16 -- Host ID value , Tag '84'
}

--Definition of data objects for ConfigureISDPRequest
ConfigureISDPRequest ::= [36] SEQUENCE { -- Tag 'BF24'
   dpProprietaryData [24] DpProprietaryData OPTIONAL -- Tag 'B8'
}

DpProprietaryData ::= SEQUENCE { -- maximum size including tag and length field:
128 bytes
   dpOid OBJECT IDENTIFIER -- OID in the tree of the SM-DP+ that created the
Profile
   -- additional data objects defined by the SM-DP+ MAY follow
}

-- Definition of request message for command ReplaceSessionKeys
ReplaceSessionKeysRequest ::= [38] SEQUENCE { -- tag 'BF26'
/*The new initial MAC chaining value*/
   initialMacChainingValue OCTET STRING,
/*New session key value for encryption/decryption (PPK-ENC)*/
   ppkEnc OCTET STRING,
/*New session key value of the session key C-MAC computation/verification (PPK-
MAC)*/
   ppkCmac OCTET STRING
}

-- Definition of data objects for RetrieveNotificationsList
RetrieveNotificationsListRequest ::= [43] SEQUENCE { -- Tag 'BF2B'
   searchCriteria CHOICE {
      seqNumber [0] INTEGER,
      profileManagementOperation [1] NotificationEvent
   } OPTIONAL
}

RetrieveNotificationsListResponse ::= [43] CHOICE { -- Tag 'BF2B'
   notificationList SEQUENCE OF PendingNotification,
   notificationsListResultError INTEGER { undefinedError(127)}
}

PendingNotification ::= CHOICE {
   profileInstallationResult [55] ProfileInstallationResult, -- tag 'BF37'
   otherSignedNotification OtherSignedNotification
}

OtherSignedNotification ::= SEQUENCE {
   tbsOtherNotification NotificationMetadata,



V2.4                                                                 Page 260 of 275
GSM Association                                                      Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

   euiccNotificationSignature [APPLICATION 55] OCTET STRING, -- eUICC signature of
tbsOtherNotification, Tag '5F37'
   euiccCertificate Certificate, -- eUICC Certificate (CERT.EUICC.ECDSA) signed by
the EUM
   eumCertificate Certificate     -- EUM Certificate (CERT.EUM.ECDSA) signed by the
requested CI
}

-- Definition of notificationSent
NotificationSentRequest ::= [48] SEQUENCE { -- Tag 'BF30'
   seqNumber [0] INTEGER
}

NotificationSentResponse ::= [48] SEQUENCE { -- Tag 'BF30'
   deleteNotificationStatus INTEGER {ok(0), nothingToDelete(1),
undefinedError(127)}
}

-- Definition of Enable Profile --------------------------
EnableProfileRequest ::= [49] SEQUENCE { -- Tag 'BF31'
   profileIdentifier CHOICE {
      isdpAid [APPLICATION 15] OctetTo16, -- AID, tag '4F'
      iccid Iccid -- ICCID, tag '5A'
   },
   refreshFlag BOOLEAN -- indicating whether REFRESH is required
}

EnableProfileResponse ::= [49] SEQUENCE { -- Tag 'BF31'
   enableResult INTEGER {ok(0), iccidOrAidNotFound (1),
profileNotInDisabledState(2), disallowedByPolicy(3), wrongProfileReenabling(4),
catBusy(5), undefinedError(127)}
}

-- Definition of Disable Profile --------------------------
DisableProfileRequest ::= [50] SEQUENCE { -- Tag 'BF32'
   profileIdentifier CHOICE {
      isdpAid [APPLICATION 15] OctetTo16, -- AID, tag '4F'
      iccid Iccid -- ICCID, tag '5A'
   },
   refreshFlag BOOLEAN -- indicating whether REFRESH is required
}

DisableProfileResponse ::= [50] SEQUENCE { -- Tag 'BF32'
   disableResult INTEGER {ok(0), iccidOrAidNotFound (1),
profileNotInEnabledState(2), disallowedByPolicy(3), catBusy(5),
undefinedError(127)}
}

-- Definition of Delete Profile --------------------------
DeleteProfileRequest ::= [51] CHOICE { -- Tag 'BF33'
   isdpAid [APPLICATION 15] OctetTo16, -- AID, tag '4F'
   iccid Iccid -- ICCID, tag '5A'
}

DeleteProfileResponse ::= [51] SEQUENCE { -- Tag 'BF33'
   deleteResult INTEGER {ok(0), iccidOrAidNotFound (1),
profileNotInDisabledState(2), disallowedByPolicy(3), undefinedError(127)}
}

-- Definition of Memory Reset --------------------------
EuiccMemoryResetRequest ::= [52] SEQUENCE { -- Tag 'BF34'
   resetOptions [2] BIT STRING {
      deleteOperationalProfiles(0),
      deleteFieldLoadedTestProfiles(1),
      resetDefaultSmdpAddress(2)}
}

EuiccMemoryResetResponse ::= [52] SEQUENCE { -- Tag 'BF34'


V2.4                                                                 Page 261 of 275
GSM Association                                                        Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

    resetResult INTEGER {ok(0), nothingToDelete(1), catBusy(5), undefinedError(127)}
}

-- Definition of Get EID --------------------------
GetEuiccDataRequest ::= [62] SEQUENCE { -- Tag 'BF3E'
   tagList [APPLICATION 28] Octet1 -- tag '5C', the value SHALL be set to '5A'
}

GetEuiccDataResponse ::= [62] SEQUENCE { -- Tag 'BF3E'
   eidValue [APPLICATION 26] Octet16 -- tag '5A'
}

-- Definition of Get Rat

GetRatRequest ::= [67] SEQUENCE { -- Tag ' BF43'
   -- No input data
}


GetRatResponse ::= [67] SEQUENCE { -- Tag 'BF43'
   rat RulesAuthorisationTable
}

RulesAuthorisationTable ::= SEQUENCE OF ProfilePolicyAuthorisationRule
ProfilePolicyAuthorisationRule ::= SEQUENCE {
   pprIds PprIds,
   allowedOperators SEQUENCE OF OperatorId,
   pprFlags BIT STRING {consentRequired(0)}
}

-- Definition of data structure containing the list of CRL segments
SegmentedCrlList ::= SEQUENCE OF CertificateList

-- Definition of data structure command for loading a CRL
LoadCRLRequest ::= [53] SEQUENCE { -- Tag 'BF35'
   -- A CRL
   crl CertificateList
}

-- Definition of data structure response for loading a CRL
LoadCRLResponse ::= [53] CHOICE { -- Tag 'BF35'
   loadCRLResponseOk LoadCRLResponseOk,
   loadCRLResponseError LoadCRLResponseError
}

LoadCRLResponseOk ::= SEQUENCE {
   missingParts SEQUENCE OF INTEGER OPTIONAL
}
LoadCRLResponseError ::= INTEGER {invalidSignature(1), invalidCRLFormat(2),
notEnoughMemorySpace(3), verificationKeyNotFound(4), fresherCrlAlreadyLoaded(5),
baseCrlMissing(6), undefinedError(127)}

-- Definition of the extension for Certificate Expiration Date
id-rsp-expDate OBJECT IDENTIFIER ::= {id-rspExt 1}
ExpirationDate ::= Time

-- Definition of the extension id for total partial-CRL number
id-rsp-totalPartialCrlNumber OBJECT IDENTIFIER ::= {id-rspExt 2}
TotalPartialCrlNumber ::= INTEGER


-- Definition of the extension id for the partial-CRL number
id-rsp-partialCrlNumber OBJECT IDENTIFIER ::= {id-rspExt 3}
PartialCrlNumber ::= INTEGER

-- Definition for ES9+ ASN.1 Binding --------------------------
RemoteProfileProvisioningRequest ::= [2] CHOICE { -- Tag 'A2'
   initiateAuthenticationRequest [57] InitiateAuthenticationRequest,   -- Tag 'BF39'


V2.4                                                                   Page 262 of 275
GSM Association                                                      Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

    authenticateClientRequest [59] AuthenticateClientRequest, -- Tag 'BF3B'
    getBoundProfilePackageRequest [58] GetBoundProfilePackageRequest, -- Tag 'BF3A'
    cancelSessionRequestEs9 [65] CancelSessionRequestEs9, -- Tag 'BF41'
    handleNotification [61] HandleNotification -- tag 'BF3D'
}

RemoteProfileProvisioningResponse ::= [2] CHOICE { -- Tag 'A2'
   initiateAuthenticationResponse [57] InitiateAuthenticationResponse, -- Tag
'BF39'
   authenticateClientResponseEs9 [59] AuthenticateClientResponseEs9, -- Tag 'BF3B'
   getBoundProfilePackageResponse [58] GetBoundProfilePackageResponse, -- Tag
'BF3A'
   cancelSessionResponseEs9 [65] CancelSessionResponseEs9, -- Tag 'BF41'
   authenticateClientResponseEs11 [64] AuthenticateClientResponseEs11 -- Tag 'BF40'
}

InitiateAuthenticationRequest ::= [57] SEQUENCE { -- Tag 'BF39'
   euiccChallenge [1] Octet16, -- random eUICC challenge
   smdpAddress [3] UTF8String,
   euiccInfo1 EUICCInfo1
}

InitiateAuthenticationResponse ::= [57] CHOICE { -- Tag 'BF39'
   initiateAuthenticationOk InitiateAuthenticationOkEs9,
   initiateAuthenticationError INTEGER {
      invalidDpAddress(1),
      euiccVersionNotSupportedByDp(2),
      ciPKNotSupported(3)
   }
}

InitiateAuthenticationOkEs9 ::= SEQUENCE {
   transactionId [0] TransactionId, -- The TransactionID generated by the SM-DP+
   serverSigned1 ServerSigned1, -- Signed information
   serverSignature1 [APPLICATION 55] OCTET STRING, -- Server_Sign1, tag '5F37'
   euiccCiPKIdToBeUsed SubjectKeyIdentifier, -- The curve CI Public Key to be used
as required by ES10b.AuthenticateServer
   serverCertificate Certificate
}

AuthenticateClientRequest ::= [59] SEQUENCE { -- Tag 'BF3B'
   transactionId [0] TransactionId,
   authenticateServerResponse [56] AuthenticateServerResponse -- This is the
response from ES10b.AuthenticateServer
}

AuthenticateClientResponseEs9 ::= [59] CHOICE { -- Tag 'BF3B'
   authenticateClientOk AuthenticateClientOk,
   authenticateClientError INTEGER {
      eumCertificateInvalid(1),
      eumCertificateExpired(2),
      euiccCertificateInvalid(3),
      euiccCertificateExpired(4),
      euiccSignatureInvalid(5),
      matchingIdRefused(6),
      eidMismatch(7),
      noEligibleProfile(8),
      ciPKUnknown(9),
      invalidTransactionId(10),
      insufficientMemory(11),
      undefinedError(127)
   }
}

AuthenticateClientOk ::= SEQUENCE {
   transactionId [0] TransactionId,
   profileMetaData [37] StoreMetadataRequest,
   smdpSigned2 SmdpSigned2, -- Signed information


V2.4                                                                 Page 263 of 275
GSM Association                                                               Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

    smdpSignature2 [APPLICATION 55] OCTET STRING,             -- tag '5F37'
    smdpCertificate Certificate    -- CERT.DPpb.ECDSA
}

GetBoundProfilePackageRequest ::= [58] SEQUENCE { -- Tag 'BF3A'
   transactionId [0] TransactionId,
   prepareDownloadResponse [33] PrepareDownloadResponse
}

GetBoundProfilePackageResponse ::= [58] CHOICE { -- Tag 'BF3A'
   getBoundProfilePackageOk GetBoundProfilePackageOk,
   getBoundProfilePackageError INTEGER {
      euiccSignatureInvalid(1),
      confirmationCodeMissing(2),
      confirmationCodeRefused(3),
      confirmationCodeRetriesExceeded(4),
      bppRebindingRefused(5),
      downloadOrderExpired(6),
      invalidTransactionId(95),
      undefinedError(127)
   }
}

GetBoundProfilePackageOk ::= SEQUENCE {
   transactionId [0] TransactionId,
   boundProfilePackage [54] BoundProfilePackage
}

HandleNotification ::= [61] SEQUENCE { -- Tag 'BF3D'
   pendingNotification PendingNotification
}

CancelSessionRequestEs9 ::= [65] SEQUENCE { -- Tag 'BF41'
   transactionId TransactionId,
   cancelSessionResponse CancelSessionResponse -- data structure defined for
ES10b.CancelSession function
}

CancelSessionResponseEs9 ::= [65] CHOICE { -- Tag 'BF41'
   cancelSessionOk CancelSessionOk,
   cancelSessionError INTEGER {
      invalidTransactionId(1),
      euiccSignatureInvalid(2),
      undefinedError(127)
   }
}

CancelSessionOk ::= SEQUENCE { -- This function has no output data
}

EuiccConfiguredAddressesRequest ::= [60] SEQUENCE { -- Tag 'BF3C'
}

EuiccConfiguredAddressesResponse ::= [60] SEQUENCE { -- Tag 'BF3C'
   defaultDpAddress UTF8String OPTIONAL, -- Default SM-DP+ address as an FQDN
   rootDsAddress UTF8String -- Root SM-DS address as an FQDN
}

ISDRProprietaryApplicationTemplate ::= [PRIVATE 0] SEQUENCE { -- Tag 'E0'
   svn [2] VersionType,     -- GSMA SGP.22 version supported (SVN)
   lpaeSupport BIT STRING {
      lpaeUsingCat(0), -- LPA in the eUICC using Card Application Toolkit
      lpaeUsingScws(1) -- LPA in the eUICC using Smartcard Web Server
   } OPTIONAL
}

LpaeActivationRequest ::= [66] SEQUENCE { -- Tag 'BF42'
   lpaeOption BIT STRING {


V2.4                                                                          Page 264 of 275
GSM Association                                                        Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

        activateCatBasedLpae(0), -- LPAe with LUIe based on CAT
        activateScwsBasedLpae(1) -- LPAe with LUIe based on SCWS
    }
}

LpaeActivationResponse ::= [66] SEQUENCE { -- Tag 'BF42'
   lpaeActivationResult INTEGER {ok(0), notSupported(1)}
}

SetDefaultDpAddressRequest ::= [63] SEQUENCE { -- Tag 'BF3F'
   defaultDpAddress UTF8String -- Default SM-DP+ address as an FQDN
}

SetDefaultDpAddressResponse ::= [63] SEQUENCE { -- Tag 'BF3F'
   setDefaultDpAddressResult INTEGER { ok (0), undefinedError (127)}
}

AuthenticateClientResponseEs11 ::= [64] CHOICE { -- Tag 'BF40'
   authenticateClientOk AuthenticateClientOkEs11,
   authenticateClientError INTEGER {
      eumCertificateInvalid(1),
      eumCertificateExpired(2),
      euiccCertificateInvalid(3),
      euiccCertificateExpired(4),
      euiccSignatureInvalid(5),
      eventIdUnknown(6),
      invalidTransactionId(7),
      undefinedError(127)
   }
}

AuthenticateClientOkEs11 ::= SEQUENCE {
   transactionId TransactionId,
   eventEntries SEQUENCE OF EventEntries
}

EventEntries ::= SEQUENCE {
   eventId UTF8String,
   rspServerAddress UTF8String
}

END




V2.4                                                                   Page 265 of 275
GSM Association                                                             Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

Annex I        JSON Request Response Examples (Informative)
An example for the "ES9+.InitiateAuthentication" function is shown below:

       HTTP Request (from LPA to SM-DP+):

HTTP POST /gsma/rsp2/es9plus/initiateAuthentication HTTP/1.1
Host: smdp.gsma.com
User-Agent: gsma-rsp-lpad
X-Admin-Protocol: gsma/rsp/v2.3

Content-Type: application/json
Content-Length: XXX

{
    "euiccChallenge" : "ZVVpY2NDaGFsbGVuZ2VFeGFtcGxlQmFzZTY0oUFZuQnNZVE5D",
    "euiccInfo1" : "RmVHRnRjR3hsUW1GelpUWTBvVUZadVFuTlpWRTU",
    "smdpAddress" : "smdp.gsma.com"
}


       HTTP Response (from LPA to SM-DP+ to)

HTTP/1.1 200 OK
X-Admin-Protocol: gsma/rsp/v2.3
Content-Type: application/json
Content-Length: XXX

{
    "header" : {
       "functionExecutionStatus" : {
          "status" : "Executed-Success"
       }
    },
    "transactionId" : "0123456789ABCDEF",
    "serverSigned1" : "RKNFZsbFVUa05qUm14e",
    "serverSignature1" : "RKNFZsbFVUa05qUm14e",
    "euiccCiPKIdTobeUsed" : "MDM=",
    "serverCertificate" : "RUU2NTQ0ODQ5NDA0RlpSRUZERA=="
}

An example for the "ES2+.DownloadOrder" function is shown as follows.

       HTTP Request (from Operator to SM-DP+):

HTTP POST /gsma/rsp2/es2plus/downloadOrder HTTP/1.1
Host: smdp.gsma.com
X-Admin-Protocol: gsma/rsp/v2.3
Content-Type: application/json
Content-Length: XXX

{
    "header" : {
       "functionRequesterIdentifier" : "RequesterID",
       "functionCallIdentifier" : "TX-567"
    }
    "eid" : "01020300405060708090A0B0C0D0EOF",
    "iccid" : "01234567890123456789",


V2.4                                                                        Page 266 of 275
GSM Association                                                         Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

    "profileType" : "myProfileType"
}


       HTTP Response for a successful execution:

HTTP/1.1 200 OK
X-Admin-Protocol: gsma/rsp/v2.3
Content-Type: application/json
Content-Length: XXX

{
    "header" : {
       "functionExecutionStatus" : {
          "status" : "Executed-Success"
       }
    },
    "iccid" : "01234567890123456789"
}


       HTTP Response for a failed execution:

HTTP/1.1 200 OK
X-Admin-Protocol: gsma/rsp/v2.3
Content-Type: application/json
Content-Length: XXX

{
    "header" : {
       "functionExecutionStatus" : {
          "status" : "Failed",
          "statusCodeData" : {
             "subjectCode" : "8.2.5",
             "reasonCode" : "3.7",
             "message" : "No more Profile"
          }
       }
    }
}


An example for the "ES2+.HandleDownloadProgressInfo" function is shown as follows:

       HTTP Request:

HTTP POST /gsma/rsp2/es2plus/handleDownloadProgressInfo HTTP/1.1
Host: smdp.gsma.com
X-Admin-Protocol: gsma/rsp/v2.3
Content-Type: application/json
Content-Length: XXX

{
    "header" : {
       "functionRequesterIdentifier" : "RequesterID",
       "functionCallIdentifier" : "TX-567",
    },
    "eid" : "01020300405060708090A0B0C0D0EOF",


V2.4                                                                    Page 267 of 275
GSM Association                                               Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

    "iccid" : "01234567890123456789",
    "profileType" : "myProfileType",
    "timeStamp" : "2015-12-16T09:30:47Z",
    "notificationPointId" : "4"
    "notificationPointStatus" : {
       "status" : "Executed-Success"
    }
}


       HTTP Response for a successful execution:

HTTP/1.1 204 No Content
X-Admin-Protocol: gsma/rsp/v2.3




V2.4                                                          Page 268 of 275
GSM Association                                                                 Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

Annex J        Tag allocation (Normative)
This annex lists the tags allocated to data objects that SHALL be used for the definition of
the eUICC functions.

  Tag         Data name
  'BF20'      GetEuiccInfo1Request or EUICCInfo1
  'BF21'      PrepareDownloadRequest or PrepareDownloadResponse
  'BF22'      GetEuiccInfo2Request or EUICCInfo2
  'BF23'      InitialiseSecureChannelRequest
  'BF24'      ConfigureISDPRequest
  'BF25'      StoreMetadataRequest
  'BF26'      ReplaceSessionKeysRequest
  'BF27'      Reserved
  'BF28'      ListNotificationRequest or ListNotificationResponse
  'BF29'      SetNicknameRequest or SetNicknameResponse
  'BF2A'      UpdateMetadataRequest
  'BF2B'      PendingNotificationsListRequest or PendingNotificationsListResponse
  'BF2D'      ProfileInfoListRequest or ProfileInfoListResponse
  'BF2E'      GetEuiccChallengeRequest or GetEuiccChallengeResponse
  'BF2F'      NotificationMetadata
  'BF30'      NotificationSentRequest or NotificationSentResponse
  'BF31'      EnableProfileRequest or EnableProfileResponse
  'BF32'      DisableProfileRequest or DisableProfileResponse
  'BF33'      DeleteProfileRequest or DeleteProfileResponse
  'BF34'      EuiccMemoryResetRequest or EuiccMemoryResetResponse
  'BF35'      LoadCRLRequest and LoadCRLResponse
  'BF36'      BoundProfilePackage
  'BF37'      ProfileInstallationResult
  'BF38'      AuthenticateServerRequest or AuthenticateServerResponse
  'BF39'      InitiateAuthenticationRequest or InitiateAuthenticationResponse
  'BF3A'      GetBoundProfilePackageRequest or GetBoundProfilePackageResponse
  'BF3B'      AuthenticateClientRequest or AuthenticateClientResponse
  'BF3C'      EuiccConfiguredAddressesRequest or EuiccConfiguredAddressesResponse
  'BF3D'      handleNotification
  'BF3E'      GetEuiccDataRequest or GetEuiccDataResponse
  'BF3F'      SetDefaultDpAddressRequest or SetDefaultDpAddressResponse
  'BF40'      AuthenticateClientResponseEs11
  'BF41'      CancelSessionRequest or CancelSessionResponse or cancelSessionRequestEs9
              or cancelSessionResponseEs9
  'BF42'      LpaeActivationRequest or LpaeActivationResponse


V2.4                                                                            Page 269 of 275
GSM Association                                               Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

  Tag         Data name
  'BF43'      GetRatRequest or GetRatResponse
  'E3'        ProfileInfo


                                   Table 66: Tag Allocation




V2.4                                                          Page 270 of 275
GSM Association                                                                   Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

Annex K         OID allocation (Informative)
This annex provides some background on the schema of the OID allocation used in this
document.

For the purpose of assigning OIDs, a root OID for GSMA was registered within the RSP
project.

The value of this root OID is:

       joint-iso-itu-t(2) international-organizations(23) gsma(146)

For the purpose of this project, a first node was allocated under this node:

       rsp(1)

All OIDs allocated in this version and in version 1.X of this specification belong to the rsp
node. OIDs not defined in the ASN.1 (Annex H) are out of scope of this specification, and
allocated by their respective owners.

At the time of writing of this specification, Mr. Gary Waite (GSMA) was responsible for the
allocation of additional OIDs under the gsma node, i.e. acting as Registration Authority.

Other GSMA projects should use a similar approach: register a project specific node under
the gsma node and then define sub-nodes in the project specific documentation.

Within the rsp node, the following schema is used:

rsp(1) – root for the RSP project

       spec-version(1) – root for identifying the ASN.1 module of the different versions

                version-one(1) – ASN.1 module of version 1.X

                version-two(2) – ASN.1 module of version 2.X

                … - future ASN.1 modules SHOULD use additional sub-nodes here

       cert-objects(2) – root for nodes identifying objects and roles
                       used in certificates

                id-rspExt(0) – root for certificate extensions defined in this specification
                       (see Annex H for further details)

                id-rspRole(1) – root for roles used in certificates
                       (see Annex H for further details)




V2.4                                                                              Page 271 of 275
GSM Association                                                                        Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

Annex L         DLOA document (Normative)
The DLOA is an XML document as defined in GlobalPlatform DLOA [57].

The following table describes the specific coding and rules of the Platform_DLOA used in
this specification to represent the certification, evaluation, approval, qualification, or
validation granted to an eUICC platform.

 Field                 Description
 Authority_Label       This field SHALL contain the DLOA Authority OID in doted notation:
                       '2.23.146.1' (GSMA RSP node).
 LOA_Identifier        This field SHALL contain the identifier of the LOA assigned by the DLOA
                       Authority.
 LOA_Scope             This field SHALL contain a string indicating the scope of the certification,
                       evaluation, approval, qualification, or validation covered by the LOA.
                       The string SHALL contain the following: "RSP SGP.22
                       v<version>/<compliance level>"


                       - <version> SHALL identify the version of specification against which the
                       eUICC platform has been certified. Value SHALL be coded as a string of
                       major/minor/revision values (each on possibly several digits) separated by '. '.
                       If revision is not used, it SHALL be omitted. Ex: “RSP SGP.22 v2.0.12”, “RSP
                       SGP.22 v1.0”.
                       - <compliance level> value SHALL be "Basic" for this version of specification.
 Platform_Label        This field SHALL contain a string as the concatenation of the
                       OID of the platform manufacturer and the Unique Identifier of the platform,
                       separated by a '/':
                       "<OID platform manufacturer>/<Unique Identifier of the platform>"


                       - <OID platform manufacturer > = OID in doted notation of the entity being the
                       manufacturer of the eUICC platform. E.g. "1.2.3.4"
                       - <Unique Identifier of the platform> = a value defined by the platform
                       manufacturer (out of scope), but SHALL follow rules defined in
                       GlobalPlatform DLOA [57].
 Issuance_Date         This field SHALL contain the date of issuance of the related LOA.
 Expiration_Date       The Expiration_Date SHALL be set with the value defined by the applied
                       compliance process..
 LOA_Url               This field SHALL contain the URL where the original LOA as issued by the
                       DLOA Authority can be retrieved.
 Signature             The signature SHALL be done as defined in GlobalPlatform DLOA [57].
                       In order to limit the cryptographic requirements on Management System side,
                       this specification limits to the signature algorithm
                       'http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256', with one of the
                       curves defined in 2.6.7.
 NOTE: The OID of the platform manufacturer and the IIN part of the EID (1st to 8th digit) represent
 the same entity. Both values could be used interchangeably to identify the entity.

                            Table 67: Platform_DLOA description


V2.4                                                                                  Page 272 of 275
GSM Association                                                    Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

   NOTE: The Application_DLOA is not used in this specification.




V2.4                                                               Page 273 of 275
GSM Association                                                                  Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4




Annex M Document Management (Informative)

M.1      Document History


 Version Date            CR              Brief Description of             Approval Editor /
                                         Change                           Authority Company
            13                                                                       Duncan
 V1.0       January                      New PRD Publication              PSMC       Macadam
            2016                                                                     GSMA
                                                                                     Yolanda
            14 April                     Minor Change to fix bugs                    Sanz
 V.1.1                                                                    PSMC
            2016                         Phase one
                                                                                     GSMA
 V2.0       July 2016                    Major Change to include new      PSMC       Yolanda
                                         features                                    Sanz
                                                                                     GSMA
 V2.1       Jan 2017                     Minor Change to fix bugs and     PSMC       Yolanda
                                         maintenance changes                         Sanz
                                                                                     GSMA
                                         Minor Change to fix bugs and                Yolanda
            31 Aug                       maintenance changes                         Sanz
 V2.2                                                                     RSPLEN
            2017
                                                                                     GSMA
                                         Minor minor change to fix                   Yolanda
            29th Nov                     minor changes                               Sanz
 V2.2.1                                                                   RSPPLEN
            2018
                                                                                     GSMA
                                         Minor minor change to fix                   Yolanda
            05th June                    minor changes                               Sanz
 V2.2.2                                                                   ISAG
            2020
                                                                                     GSMA
                         CR2701R01       Simplified End User
                                         confirmation
                         CR2702R00       Removal of mandatory RAT
                                         configuration
                         CR2705R00       Clarifications on v2.2.2
                                         Application Notes
                         CR2703R01       Optional Edit Default SM-
                                         DP+ Address funtions
                         CR2706R01       SGP.22 Mirror CR for                        Yolanda
            30 June                      integrated eUICC
 V2.3                                                                     ISAG       Sanz,
            2021
                         CR2704R00       Allowing LPA to accept TLS                  GSMA
                                         Certificate chain to Public CA
                         CR2710R00       Update for changes in LPA45
                         CR2709R00       Alignment of Discrete eUICC
                                         definition with SGP.21 v2.3
                         CR2711R01       treProperties mandatory for
                                         integrated
                         CR2708R03       More changes related to
                                         SGP.29
                         CR2712R03       References updated


V2.4                                                                             Page 274 of 275
GSM Association                                                                   Non-confidential
Official Document SGP.22 - RSP Technical Specification v2.4

                         CR2714R01        Profile download retry upon
                                          temporary errors
                                          (mirror to CR3486)
                         CR2715R02        Optional LPAd support for
                                          Profile Download with PPRs
                                          on Removable eUICCs
                         CR2717R05        Editorial Clarification on
                                          disabling a Test Profile
                         CR2718R00        Update version numbers in
                                          HTTP headers
                         CR2719R02        References cleanup
                         CR2722R00        More SIMAlliance clean up
                         CR2721R00        Optional support of Brainpool
                                          and FRP for TLS
                         CR2724R00        ASN.1 corrections
                         CR2725R00        Allow multiple eUICC Profile
                                          Package versions
                         CR2801R02        Field-test eUICC
                         CR2802R02        Clarification on outdate
            28                                                                        Yolanda
                                          ppVersion during oudate
 V2.4       October                                                       ISAG        Sanz,
                                          interm period
            2021                                                                      GSMA
                         CR2803R02        Add Profile Metadata
                                          Extensibility


Other Information

 Type                              Description
 Document Owner                    Yolanda Sanz / GSMA
 Editor / Company                  Denis Praca / Gemalto


It is our intention to provide a quality product for your use. If you find any errors or omissions,
please contact us with your comments. You may notify us at prd@gsma.com

Your comments or suggestions & questions are always welcome.




V2.4                                                                             Page 275 of 275
